Future
-	Improve mod recommendation tool
	-	Add value multipliers for each question
-	Remake mod recommendation data entry form
	-	...
	-	Change 'Irrelevant' field to 'Depends'
	-	...
-	Add player world locks?
-	Add build.txt fields to substitute for Mod static properties (for github, mod configs)
-	@Create hotkeys-to-commands mod (uses a HH tab)
-	Add tabs to UI



v1.4.0
-	Send issue reports for unhandled exceptions
-	Wrap issue reports and mod version getter with thread
-	@Implement server browser
	-	Add 'Join Server' option for each server
	-	Render server list json in dialog
	-	@Implement server list site
	-	Set servers to report to hamstar.pw via. REST API
	-	Implement dialog
		-	Implement server list item
		-	Define server list data
		-	Layout dialog
			-	@Layout
				-	Search input (top)
				-	List sort buttons
				-	Server list
				-	Refresh button

	-	Open dialog for multiplayer menu
	-	Add menu item to multiplayer menu
		-	Implement menu transition
		-	Implement menu item interaction
		-	Define menu item (implement rendering)
		-	@Discover rendering method for menu items
-	Show New! animation for mod updates
	-	Check mod versions amidst json
	-	Call google scripts site for mod JSON
-	@Implement google script for mod version caching
	-	Cache mod json data from the mod browser site to google drive file
	-	Create new script as background web app (runs every hour)
	-	Fetch from google drive file and output raw (json) data
	-	Create script web app
...
v1.3.1
-	Add day counter
v1.3.0
-	Show mods that need updates in control panel list
	-	On mod list load, supply versions
	-	Implement mod latest version getter
-	Remove 'seconds played' from issue reports
-	Add net mode to issue reports
-	Add list of recent error messages to issue reports
-	Open issue reports in browser
v1.2.9
-	Add hotkey to toggle UI
-	Wrap issue submit command with a thread
v1.2.8
-	Add command to make Mod.Call() requests
v1.2.6
-	@Test commands
-	Set commands to chat in single player, console in multiplayer
-	Disable admin class
-	Refresh class fields on game start
-	Add 'mod lock' option for current world
	-	Apply to multiplayer
	-	Implement world auto-exit
	-	Implement class
-	@Test player sync, admin command
-	Add command to set/unset user to be 'mod admin' (must be a mod admin to perform)
-	Add player sync
-	Add control panel commands
-	Add control panel close button
-	Improve control panel toggler
v1.2.3
-	Add player equipment to report text
v1.2.2
-	Update mod suggestions tool
	-	Add access code to site
	-	Add mod homepage link field
	-	Add "Is this mod suitable for first time Terraria players?"
	-	Randomize list each time page is loaded
	-	Fix mod sortion in lists
-	Fix button not working in auto-pause mode
-	Add 'Get Mod Suggestions' button
-	Create mod suggestions tool
	-	Create thread
	-	Improve mod data submit form
		-	Link back to mod recommend tool on form completion
		-	Show answer in a row
		-	Add progress bar
	-	Add 'Reset Replies' button
	-	Implement question answering
		-	Fix 'Ambivalent' overriding all
		-	Implement 'Never' reply
		-	Implement 'Unpreferred' reply
		-	Implement 'Preferred' reply
		-	Implement 'Always' reply
		-	@Plan
			-	On Never
				-	Move Yes, Partial to Boo
				-	Move No, Irrelevant to Yay
				-	Move Unknown to Meh
			-	On Unpreferred
				-	Move Yes to Boo
				-	Move Partial, Unknown to Meh
				-	Move No, Irrelevant to Yay
			-	On Ambivalent
				-	Move any to Yay
			-	On Preferred
				-	Move Yes, Partial to Yay
				-	Move Irrelevant, Unknown to Meh
				-	Move No to Boo
			-	On Always
				-	Move Yes to Yay
				-	Move Partial, Unknown to Meh
				-	Move No, Irrelevant to Boo
		-	Add replies
		-	Define a 'Maybe' and 'Maybe Not' mod list below the 'Recommended' mod list
	-	Add link to correct mod info
	-	Add panel to display individual mod info
	-	Process submitted mod info to remove duplicates and select latest
	-	Display full list of mods in a panel
	-	Generate each question from list data
	-	Setup page (google scripts web app with template)
		-	Define mod info pane
		-	Define mod list pane
		-	Define question list pane
		-	Load jquery
-	create mod data input backend
	-	Create script to generate mod data submit form
	-	Define new sheet for mod data questions
v1.2.0
-	@Create mod hub thread
-	@Create mod thread (update build.txt homepage)
-	Update support link
-	Switch to dummy account for issue reports
-	Ensure issue text fits in input box
-	Add title input for issues
-	@Verify all mods check for v1.2.0
-	@Set wormholes mod icon to blue
-	@Implement compatibility for v1.2.0 with other mods
-	F&T
-	Implement UI panel
	-	Implement 'Apply Config Changes' button
		-	Disable 'Apply Config Changes' button on clients
		-	Apply changes on click
	-	Issue submit form
		-	Add submit response feedback
		-	Use 3rd party application to forward issues to github
			-	Add per-IP issue throttling
			-	Add project release check anti-spam
			-	Implement site app
		-	F&T
			-	Fix URL popup
			-	Button lit = (old) normal color
			-	Button normal = lit color
			-	TextArea disable = button lit + hint remove
			-	TextArea normal = disabled color
		-	Handle form submit
		-	Implement issue submit function
	-	Mod list
		-	'Open Mod's Config' button
		-	Select to give context for issue submits
		-	Display mod page + link
		-	Display mod icon
		-	Display mod info (name, author, version, etc.)
		-	Get tml mod data
-	Define UI panel
	-	Support link
	-	'Refresh Config Changes' button
	-	Issue submit form
		-	Define submit and cancel buttons
		-	Define text input
		-	Implement basic text area ui element
	-	Mod list
	-	Panel
	-	@Layout
		-	'Refresh Config Changes' button
		-	'Open Mod's Config' button
		-	Mod list (with enable/disable buttons)
		-	Issue submit form
		-	Support link
-	Add button for UI panel
-	Create list manager of mods with configs
