<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HamstarHelpers</name>
    </assembly>
    <members>
        <member name="T:HamstarHelpers.Buffs.DegreelessnessBuff">
            <summary>
            Invulnerability buff.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Buffs.DegreelessnessBuff.AnimateAttackBurstFX(Microsoft.Xna.Framework.Vector2,System.Single,System.Int32)">
            <summary>
            Shows the typical animation effect of invulnerable entities.
            </summary>
            <param name="position"></param>
            <param name="radius"></param>
            <param name="particles"></param>
        </member>
        <member name="M:HamstarHelpers.Buffs.DegreelessnessBuff.SetDefaults">
            @private
        </member>
        <member name="M:HamstarHelpers.Buffs.DegreelessnessBuff.Update(Terraria.Player,System.Int32@)">
            @private
        </member>
        <member name="M:HamstarHelpers.Buffs.DegreelessnessBuff.Update(Terraria.NPC,System.Int32@)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.Context.Context">
            <summary>
            Defines a general-purpose context of the game.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Context.Context.TilePattern">
            <summary>
            Tile 'pattern' that must exist at the location of the context. Leave null to skip.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Context.Context.TileRegions">
            <summary>
            Regions of world tiles that the location of the context can exist at. Leave null to skip.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Context.Context.ActiveNPCs">
            <summary>
            NPCs that must be active for this context to exist. Leave null to skip.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Context.Context.IsBoss">
            <summary>
            Context is active when bosses are (true), or else only when they're not (false). Leave null to skip.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Context.Context.IsDay">
            <summary>
            Context can be active at day.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Context.Context.IsNight">
            <summary>
            Context can be active at night.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Context.Context.MoonPhases">
            <summary>
            Moon phases that the current context can apply during. Leave null to skip.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Context.Context.Events">
            <summary>
            Sets of vanilla events flags that must be set for the current context to apply. Leave null to skip.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Context.Context.Progress">
            <summary>
            Progress point of the game (via. GameInfoHelpers.GetVanillaProgress()) that must exist for the current context to apply.
            Leave null to skip.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Context.Context.Custom">
            <summary>
            Custom condition for the current context to apply. Leave null to skip.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Context.Context.AnyOthers">
            <summary>
            Other contexts that can also apply or the current one to also apply. Leave null to skip.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Context.Context.Check">
            <summary>
            Evaluates the current context with the game's global state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Classes.Context.Context.Check(System.Int32,System.Int32)">
            <summary>
            Evaluates the current context with the game's global state at a specific point in the world.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Classes.Context.ContextConfig">
            <summary>
            Defines a ModConfig-friendly class for defining a Context.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Context.ContextConfig.TilePattern">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Context.ContextConfig.TileRegions">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Context.ContextConfig.ActiveNPCs">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Context.ContextConfig.IsBoss">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Context.ContextConfig.IsDay">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Context.ContextConfig.IsNight">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Context.ContextConfig.MoonPhases">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Context.ContextConfig.Events">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Context.ContextConfig.Progress">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Context.ContextConfig.AnyOthers">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Context.ContextConfig.ToContext">
            <summary>
            Converts this class to a valid `Context`.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Classes.PlayerData.CustomPlayerData">
            <summary>
            An alternative to ModPlayer for basic per-player, per-game data storage and Update use.
            </summary>
            <summary>
            An alternative to ModPlayer for basic per-player, per-game data storage and Update use.
            </summary>
            <summary>
            An alternative to ModPlayer for basic per-player, per-game data storage and Update use.
            </summary>
            <summary>
            An alternative to ModPlayer for basic per-player, per-game data storage and Update use.
            </summary>
            <summary>
            An alternative to ModPlayer for basic per-player, per-game data storage and Update use.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.PlayerData.CustomPlayerData.GetPlayerData``1(System.Int32)">
            <summary>
            Gets a given instance of a given CustomPlayerData class by its type and associated player `whoAmI` value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="playerWho"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Classes.PlayerData.CustomPlayerData.OnEnter(System.Object)">
            <summary>
            Player enters the game.
            </summary>
            <param name="data">Data loaded for the current player from file.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.PlayerData.CustomPlayerData.OnExit">
            <summary>
            Player exits the game.
            </summary>
            <returns>Data to save for the current player. Return `null` to skip.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.PlayerData.CustomPlayerData.Update">
            <summary>
            Runs every tick.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.PlayerData.CustomPlayerData.PlayerWho">
            <summary>
            Current player's `whoAmI` (`Main.player` array index) value.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.PlayerData.CustomPlayerData.Player">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.PlayerData.CustomPlayerData.HamstarHelpers#Classes#Loadable#ILoadable#OnModsLoad">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.PlayerData.CustomPlayerData.HamstarHelpers#Classes#Loadable#ILoadable#OnModsUnload">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.PlayerData.CustomPlayerData.HamstarHelpers#Classes#Loadable#ILoadable#OnPostModsLoad">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.DataStructures.BTree.BTree`2">
            <summary>
            Based on BTree chapter in "Introduction to Algorithms", by Thomas Cormen, Charles Leiserson, Ronald Rivest.
            
            This implementation is not thread-safe, and user must handle thread-safety.
            </summary>
            <typeparam name="TK">Type of BTree Key.</typeparam>
            <typeparam name="TP">Type of BTree Pointer associated with each Key.</typeparam>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.BTree.BTree`2.#ctor(System.Int32)">
            <summary></summary>
            <param name="degree"></param>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.BTree.BTree`2.Root">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.BTree.BTree`2.Degree">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.BTree.BTree`2.Height">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.BTree.BTree`2.Search(`0)">
            <summary>
            Searches a key in the BTree, returning the entry with it and with the pointer.
            </summary>
            <param name="key">Key being searched.</param>
            <returns>Entry for that key, null otherwise.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.BTree.BTree`2.Insert(`0,`1)">
            <summary>
            Inserts a new key associated with a pointer in the BTree. This
            operation splits nodes as required to keep the BTree properties.
            </summary>
            <param name="newKey">Key to be inserted.</param>
            <param name="newPointer">Pointer to be associated with inserted key.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.BTree.BTree`2.Delete(`0)">
            <summary>
            Deletes a key from the BTree. This operations moves keys and nodes
            as required to keep the BTree properties.
            </summary>
            <param name="keyToDelete">Key to be deleted.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.BTree.BTree`2.DeleteInternal(HamstarHelpers.Classes.DataStructures.BTree.BTreeNode{`0,`1},`0)">
            <summary>
            Internal method to delete keys from the BTree
            </summary>
            <param name="node">Node to use to start search for the key.</param>
            <param name="keyToDelete">Key to be deleted.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.BTree.BTree`2.DeleteKeyFromSubtree(HamstarHelpers.Classes.DataStructures.BTree.BTreeNode{`0,`1},`0,System.Int32)">
            <summary>
            Helper method that deletes a key from a subtree.
            </summary>
            <param name="parentNode">Parent node used to start search for the key.</param>
            <param name="keyToDelete">Key to be deleted.</param>
            <param name="subtreeIndexInNode">Index of subtree node in the parent node.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.BTree.BTree`2.DeleteKeyFromNode(HamstarHelpers.Classes.DataStructures.BTree.BTreeNode{`0,`1},`0,System.Int32)">
            <summary>
            Helper method that deletes key from a node that contains it, be this
            node a leaf node or an internal node.
            </summary>
            <param name="node">Node that contains the key.</param>
            <param name="keyToDelete">Key to be deleted.</param>
            <param name="keyIndexInNode">Index of key within the node.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.BTree.BTree`2.DeletePredecessor(HamstarHelpers.Classes.DataStructures.BTree.BTreeNode{`0,`1})">
            <summary>
            Helper method that deletes a predecessor key (i.e. rightmost key) for a given node.
            </summary>
            <param name="node">Node for which the predecessor will be deleted.</param>
            <returns>Predecessor entry that got deleted.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.BTree.BTree`2.DeleteSuccessor(HamstarHelpers.Classes.DataStructures.BTree.BTreeNode{`0,`1})">
            <summary>
            Helper method that deletes a successor key (i.e. leftmost key) for a given node.
            </summary>
            <param name="node">Node for which the successor will be deleted.</param>
            <returns>Successor entry that got deleted.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.BTree.BTree`2.SearchInternal(HamstarHelpers.Classes.DataStructures.BTree.BTreeNode{`0,`1},`0)">
            <summary>
            Helper method that search for a key in a given BTree.
            </summary>
            <param name="node">Node used to start the search.</param>
            <param name="key">Key to be searched.</param>
            <returns>Entry object with key information if found, null otherwise.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.BTree.BTree`2.SplitChild(HamstarHelpers.Classes.DataStructures.BTree.BTreeNode{`0,`1},System.Int32,HamstarHelpers.Classes.DataStructures.BTree.BTreeNode{`0,`1})">
            <summary>
            Helper method that splits a full node into two nodes.
            </summary>
            <param name="parentNode">Parent node that contains node to be split.</param>
            <param name="nodeToBeSplitIndex">Index of the node to be split within parent.</param>
            <param name="nodeToBeSplit">Node to be split.</param>
        </member>
        <member name="T:HamstarHelpers.Classes.DataStructures.BTree.BTreeEntry`2">
            <summary></summary>
            <typeparam name="TK"></typeparam>
            <typeparam name="TP"></typeparam>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.BTree.BTreeEntry`2.Key">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.BTree.BTreeEntry`2.Pointer">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.BTree.BTreeEntry`2.Equals(HamstarHelpers.Classes.DataStructures.BTree.BTreeEntry{`0,`1})">
            <summary></summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Classes.DataStructures.BTree.BTreeNode`2">
            <summary></summary>
            <typeparam name="TK"></typeparam>
            <typeparam name="TP"></typeparam>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.BTree.BTreeNode`2.Children">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.BTree.BTreeNode`2.Entries">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.BTree.BTreeNode`2.IsLeaf">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.BTree.BTreeNode`2.HasReachedMaxEntries">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.BTree.BTreeNode`2.HasReachedMinEntries">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.BTree.BTreeNode`2.#ctor(System.Int32)">
            <summary></summary>
            <param name="degree"></param>
        </member>
        <member name="T:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2">
            <summary>
            Implments a dictionary that cannot be modified whose values are sets.
            </summary>
            <typeparam name="K">Any key value.</typeparam>
            <typeparam name="V">Any value type to be mapped to a key's set.</typeparam>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <param name="dict">Dictionary to translate into the current read-only set-dictionary.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.#ctor(System.Collections.Generic.IDictionary{`0,System.Collections.Generic.ISet{`1}})">
            <param name="dictCopy">Set-dictionary to directly wrap.</param>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.Item(`0)">
            <summary>
            Standard getter.
            </summary>
            <param name="key">Key of our dictionary.</param>
            <returns>First item of the set mapped to the given key.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.Get(`0)">
            <summary>
            Set getter.
            </summary>
            <param name="key">Key of our dictionary.</param>
            <returns>The whole set mapped to the given key.</returns>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.Count">
            <summary>
            Count of sets in the dictionary.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.CountAll">
            <summary>
            Count of all items of all sets in the dictionary.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.Keys">
            <summary>
            All the keys of the dictionary as a plain Enumerable data structure.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.System#Collections#Generic#IReadOnlyDictionary{K,V}#Keys">
            @private
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.Values">
            <summary>
            The first items of each set in the dictionary as a plain Enumerable data structure.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.System#Collections#Generic#IReadOnlyDictionary{K,V}#Values">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.ContainsKey(`0)">
            <summary>
            Detects if the given key exists in the dictionary.
            </summary>
            <param name="key">Key to check for.</param>
            <returns>`true` if the key exists.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.TryGetValue(`0,`1@)">
            <summary>
            Quickhand getter with safety checking.
            </summary>
            <param name="key">Key to find value for.</param>
            <param name="value">Output parameter. Returns the first value of the set mapped to the given key.</param>
            <returns>`true` if the key is exists.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.TryGetValues(`0,System.Collections.Generic.ISet{`1}@)">
            <summary>
            Quickhand getter with safety checking.
            </summary>
            <param name="key">Key to find value for.</param>
            <param name="values">Output parameter. Returns the set mapped to the given key.</param>
            <returns>`true` if the key is exists.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.GetEnumerator">
            <summary>
            Gets a standard key/value enumerator.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlyDictionaryOfSets`2.System#Collections#IEnumerable#GetEnumerator">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.DataStructures.IReadOnlySet`1">
            <summary></summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1">
            <summary>
            Wraps a set to ensure a read-only interface. Some ISet interface members disabled.
            </summary>
            <typeparam name="T">Type stored in wrapped set.</typeparam>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.#ctor(System.Collections.Generic.ISet{`0})">
            <summary>
            Constructs a read-only ISet wrapper.
            </summary>
            <param name="myset">Set to wrap.</param>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.Count">
            <summary>
            Quantity of values in the set.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.IsReadOnly">
            <summary>
            Indicates the read-only state of the set.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.Clear">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.Contains(`0)">
            <summary>
            Indicates if the given value exists inside the set.
            </summary>
            <param name="item">Value to check for existence of.</param>
            <returns>`true` if value found.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the set to a given array.
            </summary>
            <param name="array">Array to copy to</param>
            <param name="arrayIdx">Offset to begin copying at.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.Remove(`0)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.Add(`0)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the current set is a proper (strict) subset of a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>true if the current set is a proper subset of other; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the current set is a proper (strict) superset of a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>true if the current set is a proper superset of other; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether a set is a subset of a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>true if the current set is a subset of other; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the current set is a superset of a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>true if the current set is a superset of other; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the current set overlaps with the specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>true if the current set and other share at least one common element; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the current set and the specified collection contain the same elements.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>true if the current set is equal to other; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.ReadOnlySet`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:HamstarHelpers.Classes.DataStructures.WorldDictionary`1">
            <summary>
            Implements a dictionary for mapping data to world coordinates.
            
            Credit: Rartrin (via. DataCore)
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.Item(System.UInt16,System.UInt16)">
            <summary>
            Standard getter and setter (via. 2D, uint16 key).
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.System#Collections#Generic#IDictionary{Terraria#DataStructures#Point16,T}#Item(Terraria.DataStructures.Point16)">
            <summary>
            Standard getter and setter (via. Point16 key).
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.Keys">
            <summary>
            Returns collection of points as keys.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.Values">
            <summary>
            Return collection of values.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.Count">
            <summary>
            Return count of data mapped world points.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.Add(System.UInt16,System.UInt16,`0)">
            <summary>
            Adds an element with the provided key and value to the collection
            </summary>
            <param name="x">Y world coordinate.</param>
            <param name="y">Y world coordinate.</param>
            <param name="value"></param>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the collection.</exception>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.ContainsPoint(System.UInt16,System.UInt16)">
            <summary>
            Determines whether the System.Collections.Generic.IDictionary`2 contains an element with the specified key.
            </summary>
            <param name="x">Y world coordinate.</param>
            <param name="y">Y world coordinate.</param>
            <returns>true if the collection contains an element with the key; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.Remove(System.UInt16,System.UInt16)">
            <summary>
            Removes the element with the specified key from the collection.
            </summary>
            <param name="x">Y world coordinate.</param>
            <param name="y">Y world coordinate.</param>
            <returns>true if the element is successfully removed; otherwise, false. This method also  returns false if key was not found in the
            original collection.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.TryGetValue(System.UInt16,System.UInt16,`0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="x">Y world coordinate.</param>
            <param name="y">Y world coordinate.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the
            default value for the type of the value parameter. This parameter is passed uninitialized</param>
            <returns>true if the object that implements System.Collections.Generic.IDictionary`2 contains an element with the specified key;
            otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.Clear">
            <summary>
            Removes all items in the collection.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection</summary>
            <returns>Returns an enumerator that iterates through the collection</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            @private
        </member>
        <member name="P:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{Terraria#DataStructures#Point16,T}}#IsReadOnly">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{Terraria#DataStructures#Point16,T}}#Add(System.Collections.Generic.KeyValuePair{Terraria.DataStructures.Point16,`0})">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{Terraria#DataStructures#Point16,T}}#Contains(System.Collections.Generic.KeyValuePair{Terraria.DataStructures.Point16,`0})">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{Terraria#DataStructures#Point16,T}}#CopyTo(System.Collections.Generic.KeyValuePair{Terraria.DataStructures.Point16,`0}[],System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{Terraria#DataStructures#Point16,T}}#Remove(System.Collections.Generic.KeyValuePair{Terraria.DataStructures.Point16,`0})">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.System#Collections#Generic#IDictionary{Terraria#DataStructures#Point16,T}#Add(Terraria.DataStructures.Point16,`0)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.System#Collections#Generic#IDictionary{Terraria#DataStructures#Point16,T}#ContainsKey(Terraria.DataStructures.Point16)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.System#Collections#Generic#IDictionary{Terraria#DataStructures#Point16,T}#Remove(Terraria.DataStructures.Point16)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.DataStructures.WorldDictionary`1.System#Collections#Generic#IDictionary{Terraria#DataStructures#Point16,T}#TryGetValue(Terraria.DataStructures.Point16,`0@)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.Errors.ModHelpersExceptionManager">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.Errors.ModHelpersException">
            <summary>
            Specialized exception with added Mod Helpers logging behavior.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Errors.ModHelpersException.#ctor(System.String)">
            <param name="msg">Standard message to output.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.Errors.ModHelpersException.#ctor(System.String,System.Exception)">
            <param name="msg">Standard message to output.</param>
            <param name="inner">Inner exception to wrap for further output.</param>
        </member>
        <member name="T:HamstarHelpers.Classes.Loadable.ILoadable">
            <summary>
            Affixed to classes that wish to automatically run functios on mod load, post load, and unload.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Loadable.ILoadable.OnModsLoad">
            <summary>
            Called during `Mod.Load()`.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Loadable.ILoadable.OnPostModsLoad">
            <summary>
            Called after `Mod.PostSetupContent()`, `Mod.AddRecipeGroups()`, and `Mod.PostAddRecipes()`.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Loadable.ILoadable.OnModsUnload">
            <summary>
            Called during `Mod.Unload()`.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.Protocols.ProtocolIgnoreAttribute">
            <summary>
            Sets a field to be ignored by a protocol.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.Protocols.ProtocolWriteIgnoreClientAttribute">
            <summary>
            Sets a field to be not written by clients in a protocol.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.Protocols.ProtocolWriteIgnoreServerAttribute">
            <summary>
            Sets a field to be not written by server in a protocol.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolBroadcast">
            <summary>
            Recommended PacketProtocol form for sending data to server and/or clients.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolBroadcast.QuickBroadcastFromClient``1">
            <summary>
            "Quick" method for sending packets to the server with any PacketProtocolSentToEither class. Intended to be
            wrapped with a `public static` method.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolBroadcast.QuickBroadcastFromServer``1(System.Int32)">
            <summary>
            "Quick" method for sending packets to all clients with any PacketProtocolBroadcast class. Intended to be
            wrapped with a `public static` method.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ignoreWho">Player "whoAmI" value to skip sending packet to. -1 for no one.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolBroadcast.SetServerDefaults(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolBroadcast.ReceiveOnClient">
            <summary>
            Implements handling of received broadcasts on the client.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolBroadcast.ReceiveWithClient">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolBroadcast.ReceiveOnServer(System.Int32)">
            <summary>
            Implements handling of received messages on the server (before re-broadcast to clients).
            </summary>
            <return>`true` to go through with re-broadcasting this packet to clients.</return>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolBroadcast.ReceiveWithServer(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolBroadcast.ReceiveWithServer(System.Int32,System.Boolean)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToClient">
            <summary>
            Recommended PacketProtocol form for sending requests to clients.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToClient.QuickRequest``1(System.Int32,System.Int32,System.Int32)">
            <summary>
            "Quick" method for making requests with any PacketProtocolRequestToClient class. Intended to be wrapped with a `public static` method.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="toWho">Player "whoAmI" value to send the packet to. -1 for everyone.</param>
            <param name="ignoreWho">Player "whoAmI" value to skip sending packet to. -1 for no one.</param>
            <param name="retries">Number of times to attempt to resend the packet if it fails. -1 for perpetual retries.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToClient.InitializeClientSendData">
            <summary>
            Initializes packet for sending.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToClient.SetClientDefaults">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToClient.ReceiveReply(System.Int32)">
            <summary>
            Implements handling of received request replies on the server.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToClient.ReceiveWithServer(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToClient.ReceiveWithServer(System.Int32,System.Boolean)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToClient.SetServerDefaults(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToClient.ReceiveWithClient">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToClient.ReceiveRequestWithServer(System.Int32)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToServer">
            <summary>
            Recommended PacketProtocol form for sending requests to the server.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToServer.QuickRequest``1(System.Int32)">
            <summary>
            "Quick" method for making requests with any PacketProtocolRequestToServer class. Intended to be wrapped with a `public static` method.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="retries">Number of times to attempt to resend the packet if it fails. -1 for perpetual retries.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToServer.InitializeServerSendData(System.Int32)">
            <summary>
            Initializes packet for sending.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToServer.SetServerDefaults(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToServer.ReceiveReply">
            <summary>
            Implements handling of received request replies on the client.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToServer.ReceiveWithClient">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToServer.SetClientDefaults">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToServer.ReceiveWithServer(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToServer.ReceiveWithServer(System.Int32,System.Boolean)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolRequestToServer.ReceiveRequestWithClient">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToClient">
            <summary>
            Recommended PacketProtocol form for sending data to clients.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToClient.QuickSend``1(System.Int32,System.Int32)">
            <summary>
            "Quick" method for sending packets with any PacketProtocolSendToClient class. Intended to be wrapped with a `public static` method.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="toWho">Player "whoAmI" value to send the packet to. -1 for everyone.</param>
            <param name="ignoreWho">Player "whoAmI" value to skip sending packet to. -1 for no one.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToClient.InitializeServerSendData(System.Int32)">
            <summary>
            Initializes packet for sending.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToClient.SetServerDefaults(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToClient.Receive">
            <summary>
            Implements handling of received replies on the client.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToClient.ReceiveWithClient">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToClient.SetClientDefaults">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToClient.ReceiveWithServer(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToClient.ReceiveWithServer(System.Int32,System.Boolean)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToClient.ReceiveRequestWithClient">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToClient.ReceiveRequestWithServer(System.Int32)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSentToEither">
            <summary>
            Recommended PacketProtocol form for sending data to server and/or clients.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSentToEither.QuickSendToAClient``1(System.Int32,System.Int32)">
            <summary>
            "Quick" method for sending packets to the client with any PacketProtocolSentToEither class. Intended to be wrapped with a
            `public static` method.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="toWho">Player "whoAmI" value to send the packet to. -1 for everyone.</param>
            <param name="ignoreWho">Player "whoAmI" value to skip sending packet to. -1 for no one.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSentToEither.QuickSendToTheServer``1">
            <summary>
            "Quick" method for sending packets to the server with any PacketProtocolSentToEither class. Intended to be wrapped with a
            `public static` method.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSentToEither.ReceiveOnClient">
            <summary>
            Implements handling of received replies on the client.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSentToEither.ReceiveWithClient">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSentToEither.ReceiveOnServer(System.Int32)">
            <summary>
            Implements handling of received replies on the server.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSentToEither.ReceiveWithServer(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSentToEither.ReceiveWithServer(System.Int32,System.Boolean)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToServer">
            <summary>
            Recommended PacketProtocol form for sending data to the server.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToServer.QuickSend``1">
            <summary>
            "Quick" method for sending packets with any PacketProtocolSendToServer class. Intended to be wrapped with a `public static` method.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToServer.InitializeClientSendData">
            <summary>
            Initializes packet for sending.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToServer.SetClientDefaults">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToServer.Receive(System.Int32)">
            <summary>
            Implements handling of received replies on the server.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToServer.ReceiveWithServer(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToServer.ReceiveWithServer(System.Int32,System.Boolean)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToServer.SetServerDefaults(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToServer.ReceiveWithClient">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToServer.ReceiveRequestWithClient">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSendToServer.ReceiveRequestWithServer(System.Int32)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient">
            <summary>
            Recommended PacketProtocol form for syncing data between clients and server.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient.SyncFromMe``1">
            <summary>
            "Quick" method for syncing packets from a client to everyone else with any PacketProtocolSyncClient class.
            Intended to be wrapped with a `public static` method.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient.SyncToMe``1(System.Int32)">
            <summary>
            "Quick" method for syncing packets from everyone else to the current client with any PacketProtocolSyncClient
            class. Intended to be wrapped with a `public static` method.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="retries">Number of times to attempt to resend the packet if it fails. -1 for perpetual retries.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient.SyncFromServer``1(System.Int32,System.Int32)">
            <summary>
            "Quick" method for syncing packets from server to a given client with any PacketProtocolSyncClient class.
            Intended to be wrapped with a `public static` method.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="toWho"></param>
            <param name="ignoreWho"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient.ReceiveRequestWithServer(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient.InitializeClientSendData">
            <summary>
            Initializes packet for sending.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient.SetClientDefaults">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient.InitializeServerRequestReplyDataOfClient(System.Int32,System.Int32)">
            <summary>
            Initializes request reply packet for sending.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient.SetServerDefaults(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient.ReceiveOnClient">
            <summary>
            Implements handling of received replies on the client.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient.ReceiveWithClient">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient.ReceiveOnServer(System.Int32)">
            <summary>
            Implements handling of received replies on the server.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient.ReceiveWithServer(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient.ReceiveWithServer(System.Int32,System.Boolean)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.Interfaces.PacketProtocolSyncClient.ReceiveRequestWithClient">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol">
            <summary>
            Implement to define a network protocol. Protocols define what data to transmit, and how and where it can be transmitted.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.GetPacketCode(System.String)">
            <summary>
            Gets a random integer as a code representing a given protocol (by name) to identify it. Used for identifying packet types.
            </summary>
            <param name="str">A protocol's name. Internally uses class names.</param>
            <returns>Random integer code.</returns>
        </member>
        <member name="P:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.IsVerbose">
            <summary>
            Indicates whether sent packets will be logged if DebugModeNetInfo is enabled. Defaults to true.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.IsAsync">
            <summary>
            Indicates whether to handle stream encoding and decoding with a separate thread. Defaults to false.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.#ctor">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.OnClone">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.GetPacketName">
            <summary>
            Returns qualified name of current packet class.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.SetClientDefaults">
            <summary>
            Overridden for initializing the class to create a reply in a request to the client.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.SetServerDefaults(System.Int32)">
            <summary>
            Overridden for initializing the class to create a reply in a request to the server.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.ReceiveWithClient">
            <summary>
            Runs when data received on client (class's own fields).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.ReceiveWithServer(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.ReceiveWithServer(System.Int32,System.Boolean)">
            <summary>
            Runs when data received on server (class's own fields).
            </summary>
            <param name="fromWho">Main.player index of the player (client) sending us our data.</param>
            <param name="isSyncedToClients"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.ReceiveRequestWithClient">
            <summary>
            Runs when a request is received for the client to send data to the server. Expects
            `SetClientDefaults()` to be implemented.
            </summary>
            <returns>True to indicate the request is being handled manually.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.ReceiveRequestWithServer(System.Int32)">
            <summary>
            Runs when a request is received for the server to send data to the client. Expects
            `SetServerDefaults(int)` to be implemented.
            </summary>
            <param name="fromWho">Main.player index of player (client) sending this request.</param>
            <returns>True to indicate the request is being handled manually.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.QuickRequestToClient``1(System.Int32,System.Int32,System.Int32)">
            <summary>
            Shorthand to send a request for a default instance of this protocol's data from a client.
            Requires `SetClientDefaults()` to be implemented.
            </summary>
            <param name="toWho">Main.player index of player (client) being requested for this data. -1 for all clients.</param>
            <param name="ignoreWho">Main.player index of player (client) being ignored. -1 for no client.</param>
            <param name="retries"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.QuickRequestToServer``1(System.Int32)">
            <summary>
            Shorthand to send a request for a default instance of this protocol's data from the server.
            Requires `SetServerDefaults()` to be implemented.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.SendToServer(System.Boolean)">
            <summary>
            Sends the current packet to the server.
            </summary>
            <param name="syncToClients">Indicates packet should resume being sent to each client.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.SendToClient(System.Int32,System.Int32)">
            <summary>
            Sends the current packet to the client.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.QuickSendToServer``1">
            <summary>
            Shorthand to send a default instance of this protocol's data to the server. Requires `SetClientDefaults()`
            to be implemented.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.QuickSyncToServerAndClients``1">
            <summary>
            Shorthand to send a default instance of this protocol's data to everyone. Requires `SetClientDefaults()`
            to be implemented.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Packet.PacketProtocol.QuickSendToClient``1(System.Int32,System.Int32)">
            <summary>
            Shorthand to send a default instance of this protocol's data to a client. Requires `SetServerDefaults()`
            to be implemented.
            </summary>
            <param name="toWho">Main.player index of player (client) receiving this data. -1 for all clients.</param>
            <param name="ignoreWho">Main.player index of player (client) being ignored. -1 for no client.</param>
        </member>
        <member name="T:HamstarHelpers.Classes.Protocols.Stream.StreamProtocol">
            <summary>
            Provides a way to automatically ensure order of fields for transmission.
            </summary>
            <summary>
            Provides a way to automatically ensure order of fields for transmission.
            </summary>
            <summary>
            Provides a way to automatically ensure order of fields for transmission.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Stream.StreamProtocol.#ctor">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Stream.StreamProtocol.OnClone">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Stream.StreamProtocol.InternalOnClone">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Stream.StreamProtocol.ReadStream(System.IO.BinaryReader)">
            <summary>
            Implements internal low level data reading for packet receipt.
            </summary>
            <param name="reader">Binary data reader.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.Stream.StreamProtocol.WriteStream(System.IO.BinaryWriter)">
            <summary>
            Implements low level stream output for packet output.
            </summary>
            <param name="writer">Binary data writer.</param>
        </member>
        <member name="T:HamstarHelpers.Classes.Protocols.XNAContractResolver">
            <summary>
            Handy Newtonsoft serialization "contract resolver" for handling XNA fringe behavior.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Protocols.XNAContractResolver.DefaultSettings">
            <summary>
            Default instance of XNAContractResolver.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Protocols.XNAContractResolver.CreateContract(System.Type)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.Tiles.TilePattern.TileSlopeType">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileSlopeType.None">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileSlopeType.Any">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileSlopeType.Top">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileSlopeType.Bottom">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileSlopeType.Left">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileSlopeType.Right">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileSlopeType.HalfBrick">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileSlopeType.TopRightSlope">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileSlopeType.TopLeftSlope">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileSlopeType.BottomRightSlope">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileSlopeType.BottomLeftSlope">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern">
            <summary>
            Identifies a type of tile by its attributes.
            </summary>
            <summary>
            Identifies a type of tile by its attributes.
            </summary>
            <summary>
            Identifies a type of tile by its attributes.
            </summary>
            <summary>
            Identifies a type of tile by its attributes.
            </summary>
            <summary>
            Identifies a type of tile by its attributes.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.Any">
            <summary>
            Preset for any tile, including empty space.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.AbsoluteAir">
            <summary>
            Preset for completely empty space.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.OpenWall">
            <summary>
            Preset for walls, no tiles.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.NonActive">
            <summary>
            Preset for any non-active tiles (at most only liquids, wire, or walls).
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.NonSolid">
            <summary>
            Preset for any non-solid tiles (includes actuated tiles and active-but-non-solid tiles).
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.NonFilled">
            <summary>
            Preset for any non-"filled" space (no actives, no solids, no liquids, no actuated tiles; walls, furniture, etc.
            allowed).
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.CommonSolid">
            <summary>
            Preset for common solid tiles (non-actuated).
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.PitchDark">
            <summary>
            Preset for total blackness.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.IsActive">
            <summary>If tile is active (not wall-only).</summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.AreaFromCenter">
            <summary>Distance to also check adjacent tiles from a given center point.</summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.IsAnyOfType">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.IsAnyOfWallType">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.HasWire1">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.HasWire2">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.HasWire3">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.HasWire4">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.IsSolid">
            <summary>Tile is wholly solid.</summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.HasSolidProperties">
            <summary>Corresponds to `Main.tileSolid`.</summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.IsPlatform">
            <summary>Corresponds to `Main.tileSolidTop`</summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.IsActuated">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.IsVanillaBombable">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.HasWall">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.HasWater">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.HasHoney">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.HasLava">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.Slope">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.Shape">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.MaximumBrightness">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.MinimumBrightness">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.IsModded">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.CustomCheck">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.AnyPattern">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.#ctor(HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder)">
            <summary>
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.Check(System.Int32,System.Int32)">
            <summary>
            Tests a given tile against the current settings.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <returns>`true` if all settings pass the test, and identify the tile as the current type.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.Check(System.Int32,System.Int32,HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType@)">
            <summary>
            Tests a given tile against the current settings.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="collideType"></param>
            <returns>`true` if all settings pass the test, and identify the tile as the current type.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.Check(System.Int32,System.Int32,HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType@,Microsoft.Xna.Framework.Point@)">
            <summary>
            Tests a given tile against the current settings.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="collideType"></param>
            <param name="collisionAt"></param>
            <returns>`true` if all settings pass the test, and identify the tile as the current type.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.CheckArea(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Checks all tiles in an area.
            </summary>
            <param name="tileArea"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.CheckArea(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks all tiles in an area.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.CheckArea(System.Int32,System.Int32,System.Int32,System.Int32,HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType@,Microsoft.Xna.Framework.Point@)">
            <summary>
            Checks all tiles in an area.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="collideType"></param>
            <param name="collisionAt"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.CheckPoint(System.Int32,System.Int32,HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType@)">
            <summary>
            Tests a given tile against the current settings. Also indicates what type of collision occurs.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="collideType"></param>
            <returns>`true` if all settings pass the test, and identify the tile as the current type.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.CheckBrightness(System.Int32,System.Int32,HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType@)">
            <summary>
            Checks for valid brightness of the given tile.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="collideType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.CombinePositive(HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,System.Boolean)">
            <summary>
            Combines 2 patterns into a new pattern. Positive filters are favored over negatives.
            </summary>
            <param name="pattern1"></param>
            <param name="pattern2"></param>
            <param name="blendLight"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Classes.Tiles.TilePattern.TilePattern.CombineNegative(HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,System.Boolean)">
            <summary>
            Combines 2 patterns into a new pattern. Negative filters are favored over positives.
            </summary>
            <param name="pattern1"></param>
            <param name="pattern2"></param>
            <param name="blendLight"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig">
            <summary>
            Defines a ModConfig-friendly class for defining a TilePattern.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.IsActive">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.AreaFromCenter">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.IsAnyOfType">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.IsAnyOfWallType">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.HasWire1">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.HasWire2">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.HasWire3">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.HasWire4">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.HasSolidProperties">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.IsPlatform">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.IsActuated">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.IsVanillaBombable">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.HasWall">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.HasWater">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.HasHoney">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.HasLava">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.Shape">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.MaximumBrightness">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.MinimumBrightness">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.IsModded">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.AnyPattern">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternConfig.ToTilePattern">
            <summary>
            Converts this class to a valid `TilePattern`.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder">
            <summary>
            Used to in TilePattern's constructor to simplify specifying non-optional values. Keeps TilePattern immutable.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.ConvertToShape(HamstarHelpers.Classes.Tiles.TilePattern.TileSlopeType)">
            <summary></summary>
            <param name="slopeType"></param>
            <returns></returns>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.IsActive">
            <summary>If tile is active (not wall-only).</summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.AreaFromCenter">
            <summary>Distance to also check adjacent tiles from a given center point.</summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.IsAnyOfType">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.IsAnyOfWallType">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.HasWire1">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.HasWire2">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.HasWire3">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.HasWire4">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.IsSolid">
            <summary>Tile is wholly solid.</summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.HasSolidProperties">
            <summary>Corresponds to `Main.tileSolid`.</summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.IsPlatform">
            <summary>Corresponds to `Main.tileSolidTop`</summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.IsActuated">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.IsVanillaBombable">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.HasWall">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.HasWater">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.HasHoney">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.HasLava">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.Slope">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.Shape">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.MinimumBrightness">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.MaximumBrightness">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.IsModded">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.CustomCheck">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TilePatternBuilder.AnyPattern">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.None">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.Active">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.TileType">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.WallType">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.Solid">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.Wall">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.Platform">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.Wire1">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.Wire2">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.Wire3">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.Wire4">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.Actuated">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.Water">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.Honey">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.Lava">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.SlopeAny">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.SlopeHalfBrick">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.SlopeTopRight">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.SlopeTopLeft">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.SlopeBottomRight">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.SlopeBottomLeft">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.SlopeTop">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.SlopeBottom">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.SlopeLeft">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.SlopeRight">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.BrightnessLow">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.BrightnessHigh">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.Custom">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.Tiles.TilePattern.TileCollideType.WorldEdge">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.ModConfig.FloatInputElement">
            <summary>
            Implements a ModConfig widget for inputting float values via. text input or slider.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.ModConfig.FloatInputElement.OnBind">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.ModConfig.FloatInputElement.SetObject(System.Object)">
            <summary>
            Sets the config item's value represented by this widget.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.ModConfig.FloatInputElement.SetFloatValue(System.Single)">
            <summary>
            Sets the config item's value represented by this widget.
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.ModConfig.FloatInputElement.GetFloatValue">
            <summary>
            Gets the config value this widget represents.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Config.FloatRef">
            <summary>
            Implements a ModConfig wrapper for a float reference able to accept inputs via. text input or slider.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Config.FloatRef.Value">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Config.FloatRef.#ctor">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Config.FloatRef.#ctor(System.Single)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptDialog">
            <summary>
            Defines a 'Confirm'/'Cancel' prompting UI as a full dialog element. Forces modality.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptDialog.ConfirmButton">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptDialog.CancelButton">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptDialog.OnReply">
            @private
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptDialog.TitleText">
            <summary>
            Prompt message (title) to display.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptDialog.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.Int32,System.Int32,System.String,System.Action{System.Boolean})">
            <param name="theme">Visual appearance.</param>
            <param name="width">Recommended width.</param>
            <param name="height">Recommended height.</param>
            <param name="title">Prompt message (title) to display.</param>
            <param name="onReply">Action to perform on pressing a button.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptDialog.InitializeComponents">
            <summary>
            Initializes components.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptDialog.Open">
            <summary>
            Opens the dialog, and keeps it open.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptDialog.RefreshTheme">
            <summary>
            Refreshes visual theming.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel">
            <summary>
            Defines a simple, dialog-like 'Confirm'/'Cancel' prompt panel element.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.ConfirmButton">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.CancelButton">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.ConfirmAction">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.CancelAction">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.SetDialogToClose">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.TopPixels">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.TopPercent">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.LeftPixels">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.LeftPercent">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.TopCentered">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.LeftCentered">
            @private
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.MyWidth">
            <summary>
            Recommended width.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.MyHeight">
            <summary>
            Recommended height.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.TitleText">
            <summary>
            Mouse hover text.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.IsOpen">
            <summary>
            Prompt is open.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.Int32,System.Int32,System.String,System.Action,System.Action)">
            <param name="theme">Appearance style.</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="title"></param>
            <param name="confirm"></param>
            <param name="cancel"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.OnInitialize">
            <summary>
            Initializes elements of this prompt.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.RefreshTheme">
            <summary>
            Refreshes visual theming.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Dialogs.UIPromptPanel.Recalculate">
            <summary>
            Recalculates positions of elements.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.Menu.UIMenuButton">
            <summary>
            A button intended for use with main menu UIs.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Menu.UIMenuButton.PositionXCenterOffset">
            <summary>
            Distance of left edge of this element from the horizontal center of the screen.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Menu.UIMenuButton.PositionY">
            <summary>
            Distance of the top edge of this element from top of the screen.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Menu.UIMenuButton.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary></summary>
            <param name="theme">Appearance style.</param>
            <param name="text"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="xCenterOffset">Distance of left edge of this element from the horizontal center of the screen.</param>
            <param name="y">Distance of the top edge of this element from top of the screen.</param>
            <param name="textScale"></param>
            <param name="largeText"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Menu.UIMenuButton.SetMenuSpacePosition(System.Single,System.Single)">
            <summary>
            Repositions this button.
            </summary>
            <param name="xCenterOffset">Distance of left edge of this element from the horizontal center of the screen.</param>
            <param name="y">Distance of the top edge of this element from top of the screen.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Menu.UIMenuButton.RecalculatePosition">
            <summary>Recalculates only this element's position.</summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Menu.UIMenuButton.Recalculate">
            <summary>Recalculates this element's position, and it's child elements.</summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.Menu.UIMenuPanel">
            <summary>
            A UI panel specialized for menu use.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Menu.UIMenuPanel.XCenterOffset">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.Menu.UIMenuPanel.YPos">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Menu.UIMenuPanel.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            </summary>
            <param name="theme"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="xCenterOffset">Offset from horizontal center of screen.</param>
            <param name="y">Offset from top of screen.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Menu.UIMenuPanel.RecalculatePos">
            <summary>
            Recalculates panel's position relative to screen dimensions.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.Menu.UIMenuPanel.Recalculate">
            <summary>
            Recalculates whole panel's position and dimensions.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UITextArea">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UITextArea.TextChangeEvent">
            @private
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextArea.Text">
            @private
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextArea.DisplayText">
            @private
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextArea.Hint">
            @private
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextArea.MaxLength">
            @private
        </member>
        <member name="E:HamstarHelpers.Classes.UI.Elements.UITextArea.OnPreChange">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UITextArea.TextColor">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UITextArea.HintColor">
            @private
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextArea.CursorPos">
            @private
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextArea.CursorAnimation">
            @private
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextArea.HasFocus">
            @private
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextArea.IsEnabled">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextArea.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.String,System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextArea.SetText(System.String)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextArea.Update(Microsoft.Xna.Framework.GameTime)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextArea.Recalculate">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextArea.Click(Terraria.UI.UIMouseEvent)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextArea.Focus">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextArea.Unfocus">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextArea.Disable">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextArea.Enable">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextArea.RefreshTheme">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextArea.DrawSelf(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextArea.GetFittedText(System.String,System.Int32,System.Single)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.TextInputEventArgs">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.TextInputEventArgs.Text">
            <summary>
            Input text.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.TextInputEventArgs.#ctor(System.String)">
            <param name="text">Input text.</param>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UITextField">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UITextField.TextEventHandler">
            @private
        </member>
        <member name="E:HamstarHelpers.Classes.UI.Elements.UITextField.OnTextChange">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UITextField.TextColor">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UITextField.HintText">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextField.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.String)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextField.RefreshTheme">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextField.GetText">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextField.SetText(System.String)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextField.DrawSelf(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UICheckbox">
            <summary>
            Defines a UI checkbox (toggleable button) element.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UICheckbox.CheckboxTexture">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UICheckbox.CheckmarkTexture">
            <summary></summary>
        </member>
        <member name="E:HamstarHelpers.Classes.UI.Elements.UICheckbox.OnSelectedChanged">
            <summary>
            Hooks changes to the button state.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UICheckbox.Order">
            <summary>
            Allows defining a custom sort order value (for putting in an ordered list).
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UICheckbox.IsClickable">
            <summary>
            Enables mouse interactivity.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UICheckbox.Title">
            <summary>
            Mouse hover popup label.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UICheckbox.Selected">
            <summary>
            Indicates if the box is "checked".
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UICheckbox.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.String,System.String,System.Boolean,System.Single,System.Boolean)">
            <param name="theme">Appearance style.</param>
            <param name="label">Display text next to checkbox control.</param>
            <param name="title">Mouse hover popup label.</param>
            <param name="isClickable">Enables mouse interactivity.</param>
            <param name="textScale">Multiplies label text size.</param>
            <param name="large">Uses 'large' label text style.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UICheckbox.Click(Terraria.UI.UIMouseEvent)">
            <summary>
            Called on click. Can be called manually.
            </summary>
            <param name="evt">Unused.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UICheckbox.DrawSelf(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UICheckbox.CompareTo(System.Object)">
            <summary>
            Decides sort order in a list.
            </summary>
            <param name="obj">Object to compare rank to.</param>
            <returns>Value representing greater-than or less-than sortion status relative to the given comparison object.</returns>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UIDialog">
            <summary>
            Defines a UI dialog (stand-alone, centered panel) element. All dialogs are modal, and exclusively capture all interactions until closed.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIDialog.InitialContainerWidth">
            <summary>
            Recommended dialog width.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIDialog.InitialContainerHeight">
            <summary>
            Recommended dialog height.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIDialog.IsOpen">
            <summary>
            Indicates if dialog is open.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UIDialog.Backend">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UIDialog.OuterContainer">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UIDialog.InnerContainer">
            @private
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UIDialog.SetDialogToClose">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.Int32,System.Int32)">
            <param name="theme">Appearance style.</param>
            <param name="initialWidth">Recommended width.</param>
            <param name="initialHeight">Recommended height.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.OnInitialize">
            <summary>
            Initializes containers and inner components.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.InitializeContainer(System.Int32,System.Int32)">
            <summary>
            Initializes inner (content-bearing) and outer (screen-positioned) containers.
            </summary>
            <param name="width">Outer container width.</param>
            <param name="height">Outer container height.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.InitializeComponents">
            <summary>
            Used to initialize dialog's contents.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates state.
            </summary>
            <param name="gameTime">Unused.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.RecalculateMe">
            <summary>
            Intended to replace `Recalculate()` for technical reasons. Recalculates positions of dialog elements.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.Recalculate">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.RecalculateOuterContainer">
            <summary>
            Recalculates position of outer container
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.CanOpen">
            <returns>`true` if dialog can be opened (UI not otherwise captured, no other dialogs, etc.).</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.Open">
            <summary>
            Opens the dialog. All input and UI context is captured.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.Close">
            <summary>
            Closes the current dialog. All UI context is reverted to the game's normal state.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.SetLeftPosition(System.Single,System.Single,System.Boolean)">
            <summary>
            Repositions the dialog horizontally (via standard `StyleDimension.Set(...)`).
            </summary>
            <param name="pixels">Pixel amount from the left.</param>
            <param name="percent">Percent amount from the left.</param>
            <param name="centered">Subtracts half the screen width from the pixel amount.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.SetTopPosition(System.Single,System.Single,System.Boolean)">
            <summary>
            Repositions the dialog vertically (via standard `StyleDimension.Set(...)`).
            </summary>
            <param name="pixels">Pixel amount from the top.</param>
            <param name="percent">Percent amount from the top.</param>
            <param name="centered">Subtracts half the screen height from the pixel amount.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.RefreshTheme">
            <summary>
            Refreshes visual theming.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIDialog.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draws the dialog if it's open.
            </summary>
            <param name="sb">SpriteBatch to draw to. Typically given `Main.spriteBatch`.</param>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UIHiddenPanel">
            <summary>
            Defines a hidden UI element. Used for internal logical or interface-related functions.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIHiddenPanel.IsHovering">
            <summary>
            Indicates if mouse is hovering the element.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIHiddenPanel.#ctor(System.Func{Microsoft.Xna.Framework.Rectangle},System.Action,System.Action)">
            <param name="zone">Indicates the space the element pretends to occupy for interactivity purposes
            (in truth, it is 0 sized).</param>
            <param name="onHover">Action to run on mouse hover</param>
            <param name="onExit">Action to run on mouse hover exit</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIHiddenPanel.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Handles mouse hover detection; nothing to draw.
            </summary>
            <param name="spriteBatch">Unused.</param>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UIImageUrl">
            <summary>
            Defines a visitable web URL (hyperlink) as an image UI element.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIImageUrl.ImageElement">
            <summary>
            Element holding the display image.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIImageUrl.Url">
            <summary>
            URL to browse to when element is clicked.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIImageUrl.WillDrawOwnHoverUrl">
            <summary>
            Indicates if the current element handles its own mouse hover URL display behavior.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIImageUrl.IsVisited">
            <summary>
            Indicates if the link has been visited (e.g. clicked on).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIImageUrl.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,Microsoft.Xna.Framework.Graphics.Texture2D,System.String,System.Boolean)">
            <param name="theme">Appearance style.</param>
            <param name="image">Display image.</param>
            <param name="url">URL.</param>
            <param name="hoverUrl">Indicates if the current element handles its own mouse hover URL display behavior.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIImageUrl.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draws the element. Handles mouse hover behavior.
            </summary>
            <param name="sb">SpriteBatch to draw to. Usually `Main.spriteBatch`.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIImageUrl.DrawHoverEffects(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Default mouse hover URL drawing.
            </summary>
            <param name="sb">SpriteBatch to draw to. Usually `Main.spriteBatch`.</param>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UIModData">
            <summary>
            Defines a UI panel element specialized for rendering and displaying a mod's data (especially as a list item).
            </summary>
            <summary>
            Defines a UI panel element specialized for rendering and displaying a mod's data (especially as a list item).
            </summary>
            <summary>
            Defines a UI panel element specialized for rendering and displaying a mod's data (especially as a list item).
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIModData.Mod">
            <summary>
            Mod represented by this element.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIModData.Author">
            <summary>
            Mod's author.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIModData.HomepageUrl">
            <summary>
            Mod's homepage.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIModData.LatestAvailableVersion">
            <summary>
            Latest version of the mod on the mod browser.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIModData.IconElem">
            <summary>
            Mod's icon.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIModData.TitleElem">
            <summary>
            Mod title text.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIModData.AuthorElem">
            <summary>
            Mod author text.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIModData.ConfigResetButton">
            <summary>
            Config file reset button for the mod.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIModData.ConfigOpenButton">
            <summary>
            Config file open button.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIModData.VersionAlertElem">
            <summary>
            Version update alert element.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIModData.DisplayIndex">
            <summary>
            Displayed index within a display list.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIModData.HasIconLoaded">
            <summary>
            Indicates if mod's icon is loaded.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIModData.WillDrawOwnHoverElements">
            <summary>
            Indicates if this element draws its own mouse-hover elements.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIModData.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,Terraria.ModLoader.Mod,System.Boolean)">
            <param name="theme">Visual appearance.</param>
            <param name="mod">Mod represented by this element.</param>
            <param name="willDrawOwnHoverElements">Indicates if this element draws its own mouse-hover elements.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIModData.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.Nullable{System.Int32},Terraria.ModLoader.Mod,System.Boolean)">
            <param name="theme">Visual appearance.</param>
            <param name="idx">ID number assigned to this element in its list.</param>
            <param name="mod">Mod represented by this element.</param>
            <param name="willDrawOwnHoverElements">Indicates if this element draws its own mouse-hover elements.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIModData.CheckForNewVersionAsync">
            <summary>
            Checks if the mod has new versions available from the mod browser, then updates it's overlay accordingly.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIModData.CompareTo(System.Object)">
            <summary>
            Defines the sort order position of this element relative to another object (typically another UIModData element).
            </summary>
            <param name="obj">Other object to compare rank against.</param>
            <returns>Greater than (+1), less than (-1), or equal to (0) comparison status.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIModData.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Expands on base.Draw(...) to implement custom mouse hover effects (if applicable).
            </summary>
            <param name="sb">SpriteBatch to draw to. Typically given `Main.spriteBatch`.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIModData.DrawSelf(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Expands on base.Draw to add version overlay and render mod tags.
            </summary>
            <param name="sb">SpriteBatch to draw to. Typically given `Main.spriteBatch`.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIModData.DrawHoverEffects(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draws mouse hover title.
            </summary>
            <param name="sb">SpriteBatch to draw to. Typically given `Main.spriteBatch`.</param>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel">
            <summary>
            Defines a text area UI panel element with crop-to-fit text input. Captures focus while in use. Does not currently implement
            multi-line support (yet).
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.TextEventHandler">
            <summary>
            Event handler for text input events
            </summary>
            <param name="input"></param>
            <returns>`true` if string is valid</returns>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.FocusHandler">
            <summary>
            Event handler for focus change events.
            </summary>
        </member>
        <member name="E:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.OnPreTextChange">
            <summary>
            Fires as the text input changes.
            </summary>
        </member>
        <member name="E:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.OnUnfocus">
            <summary>
            Fires on when input is no longer selected.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.Text">
            <summary>
            Current text.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.DisplayText">
            <summary>
            Text in its displayed form (includes cursor).
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.Hint">
            <summary>
            "Default" text. Appears when no text is input. Not counted as input.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.MaxLength">
            <summary>
            Maximum length of text input.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.TextColor">
            <summary>
            Color of input text.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.HintColor">
            <summary>
            Color of mouse hover text.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.CursorPos">
            <summary>
            Position of input cursor in input string.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.CursorAnimation">
            <summary>
            State of input cursor flashing animation.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.HasFocus">
            <summary>
            Indicates text is being input.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.IsEnabled">
            <summary>
            Indicates element is able to be edited.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.String,System.Int32)">
            <param name="theme">Appearance style.</param>
            <param name="hint">Default text. Overridden with any input text.</param>
            <param name="maxLength">Maximum length of text input.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.SetText(System.String)">
            <summary>
            Manually sets the input text, accommodating cursor position.
            </summary>
            <param name="text">New text.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates state of input, including cursor animation.
            </summary>
            <param name="gameTime">Unused.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.Recalculate">
            <summary>
            Recalculates element positions.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.Click(Terraria.UI.UIMouseEvent)">
            <summary>
            Implements click behavior. Focuses on the input element.
            </summary>
            <param name="evt">Mouse event.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.Focus">
            <summary>
            Sets input to be captured by the current element.
            </summary>
            <returns>`true` if able to capture focus.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.Unfocus">
            <summary>
            Removes input capture.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.Disable">
            <summary>
            Disables the text area (prevents text input).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.Enable">
            <summary>
            Enables the text area.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.RefreshTheme">
            <summary>
            Refreshes visual theming.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.DrawSelf(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draws the element. Animates cursor, draws hint text.
            </summary>
            <param name="sb">SpriteBatch to draw to. Typically given `Main.spriteBatch`.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel.GetFittedText(System.String,System.Int32,System.Single)">
            <summary>
            Applies a cursor to a given string.
            </summary>
            <param name="text">Input string.</param>
            <param name="cursorPos">Cursor's position.</param>
            <param name="width">Width of input.</param>
            <returns>Cursor-added input string.</returns>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UITextInputElement">
            <summary>
            Defines a simpler append-only text field input element (no panel). Suited for main menu use.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UITextInputElement.TextEventHandler">
            <summary>
            Event handler for text input events
            </summary>
            <param name="input"></param>
            <returns>`true` if string is valid</returns>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UITextInputElement.FocusHandler">
            <summary>
            Event handler for focus change events.
            </summary>
        </member>
        <member name="E:HamstarHelpers.Classes.UI.Elements.UITextInputElement.OnTextChange">
            <summary>
            Fires on text change. Actions here should never alter current, sibling, or child elements.
            </summary>
        </member>
        <member name="E:HamstarHelpers.Classes.UI.Elements.UITextInputElement.OnUnfocus">
            <summary>
            Fires on when input is no longer selected.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UITextInputElement.TextColor">
            <summary>
            Text color.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UITextInputElement.HintText">
            <summary>
            "Default" text. Appears when no text is input. Not counted as input.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputElement.#ctor(System.String)">
            <summary></summary>
            <param name="hintText">"Default" text. Appears when no text is input. Not counted as input.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputElement.GetText">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputElement.SetText(System.String)">
            <summary></summary>
            <param name="text"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputElement.DrawSelf(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draws element. Also handles text input changes.
            </summary>
            <param name="sb">SpriteBatch to draw to. Typically given `Main.spriteBatch`.</param>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UITextInputPanel">
            <summary>
            Defines a simpler append-only text field input panel. Suited for main menu use.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UITextInputPanel.TextEventHandler">
            <summary>
            Event handler for text input events
            </summary>
            <param name="input"></param>
            <returns>`true` if string is valid</returns>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UITextInputPanel.FocusHandler">
            <summary>
            Event handler for focus change events.
            </summary>
        </member>
        <member name="E:HamstarHelpers.Classes.UI.Elements.UITextInputPanel.OnTextChange">
            <summary>
            Fires on text change.
            </summary>
        </member>
        <member name="E:HamstarHelpers.Classes.UI.Elements.UITextInputPanel.OnUnfocus">
            <summary>
            Fires on when input is no longer selected.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Elements.UITextInputPanel.TextColor">
            <summary>
            Text color.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextInputPanel.HintText">
            <summary>
            "Default" text. Appears when no text is input. Not counted as input.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputPanel.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.String)">
            <param name="theme">Appearance style.</param>
            <param name="hintText">"Default" text. Appears when no text is input. Not counted as input.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputPanel.RefreshTheme">
            <summary>
            Refreshes visual theming.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputPanel.GetText">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputPanel.SetText(System.String)">
            <summary></summary>
            <param name="text"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextInputPanel.DrawSelf(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draws element. Also handles text input changes.
            </summary>
            <param name="sb">SpriteBatch to draw to. Typically given `Main.spriteBatch`.</param>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UITextPanelButton">
            <summary>
            Defines a common text panel button element.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UITextPanelButton.IsEnabled">
            <summary>
            Indicates if button accepts inputs.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextPanelButton.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.String,System.Single,System.Boolean)">
            <param name="theme">Appearance style.</param>
            <param name="label">Button's label.</param>
            <param name="scale">Multiplier of label text size.</param>
            <param name="large">Sets label text 'large'.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextPanelButton.Enable">
            <summary>
            Enables the button.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextPanelButton.Disable">
            <summary>
            Disables the button.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextPanelButton.RefreshTheme">
            <summary>
            Refreshes visual theming.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UITextPanelButton.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UIWebUrl">
            <summary>
            Defines a visitable web URL (hyperlink) as a UI element.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIWebUrl.GetLineElement(System.String,System.Single,System.Boolean)">
            <summary>
            Generates a UIText element of the URL's underline (a set of underscores). Used to render together with URL text.
            </summary>
            <param name="label">Label to generate underline based on.</param>
            <param name="scale">Size multipler of text label.</param>
            <param name="large">Label as 'large' text.</param>
            <returns>UIText underline element.</returns>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIWebUrl.TextElem">
            <summary>
            Element holding the display text.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIWebUrl.LineElem">
            <summary>
            Element holding the display text's underline.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIWebUrl.Url">
            <summary>
            URL to browse to when element is clicked.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIWebUrl.WillDrawOwnHoverUrl">
            <summary>
            Indicates if the current element handles its own mouse hover URL display behavior.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIWebUrl.IsVisited">
            <summary>
            Indicates if the link has been visited (e.g. clicked on).
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIWebUrl.Scale">
            <summary>
            Size multiplier of display text.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIWebUrl.Large">
            <summary>
            'Large' state of display text.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIWebUrl.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.String,System.String,System.Boolean,System.Single,System.Boolean)">
            <param name="theme">Appearance style.</param>
            <param name="label">Display text.</param>
            <param name="url">URL.</param>
            <param name="hoverUrl">Indicates if the current element handles its own mouse hover URL display behavior.</param>
            <param name="scale">Size multiplier of display text.</param>
            <param name="large">'Large' state of display text.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIWebUrl.SetText(System.String)">
            <summary>
            Sets the display text.
            </summary>
            <param name="text">New display text.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIWebUrl.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draws the element. Handles mouse hover behavior.
            </summary>
            <param name="sb">SpriteBatch to draw to. Usually `Main.spriteBatch`.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIWebUrl.DrawHoverEffects(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Default mouse hover URL drawing.
            </summary>
            <param name="sb">SpriteBatch to draw to. Usually `Main.spriteBatch`.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIWebUrl.RefreshTheme">
            <summary>
            Refreshes visual theming.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UIThemedPanel">
            <summary>
            Theme-able UIPanel.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIThemedPanel.Theme">
            <summary>
            Appearance style.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIThemedPanel.IsHidden">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIThemedPanel.Opacity">
            <summary>Visibility percent.</summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedPanel.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.Boolean)">
            <summary></summary>
            <param name="theme"></param>
            <param name="skipThemeRefreshNow"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedPanel.AppendThemed(Terraria.UI.UIElement)">
            <summary>
            An alternative to the normal `Append` method to apply theming to appended element.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedPanel.RefreshTheme">
            <summary>
            Re-applies the current theme styles (including child elements).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedPanel.RefreshThemeForChild(Terraria.UI.UIElement)">
            <summary>
            Applies the current theme's styles to a given element (presumably a child element).
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedPanel.SetTheme(HamstarHelpers.Classes.UI.Theme.UITheme)">
            <summary>
            Sets the current theme.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedPanel.Hide">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedPanel.Show">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedPanel.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedPanel.ComputeCurrentOpacity">
            <summary>
            Gets the opacity of the current panel, factoring all parent panels.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UIThemedText">
            <summary>
            Theme-able UIText.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIThemedText.Theme">
            <summary>
            Appearance style.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIThemedText.IsHidden">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedText.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.Boolean,System.String,System.Single,System.Boolean)">
            <summary></summary>
            <param name="theme"></param>
            <param name="skipThemeRefreshNow"></param>
            <param name="text"></param>
            <param name="textScale"></param>
            <param name="large"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedText.AppendThemed(Terraria.UI.UIElement)">
            <summary>
            An alternative to the normal `Append` method to apply theming to appended element.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedText.RefreshTheme">
            <summary>
            Re-applies the current theme styles (including child elements).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedText.RefreshThemeForChild(Terraria.UI.UIElement)">
            <summary>
            Applies the current theme's styles to a given element (presumably a child element).
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedText.SetTheme(HamstarHelpers.Classes.UI.Theme.UITheme)">
            <summary>
            Sets the current theme.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedText.Hide">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedText.Show">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedText.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Elements.UIThemedTextPanel">
            <summary>
            Theme-able UITextPanel.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIThemedTextPanel.Theme">
            <summary>
            Appearance style.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Elements.UIThemedTextPanel.IsHidden">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedTextPanel.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.Boolean,System.String,System.Single,System.Boolean)">
            <summary>
            </summary>
            <param name="theme"></param>
            <param name="skipThemeRefreshNow"></param>
            <param name="text"></param>
            <param name="textScale"></param>
            <param name="large"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedTextPanel.AppendThemed(Terraria.UI.UIElement)">
            <summary>
            An alternative to the normal `Append` method to apply theming to appended element.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedTextPanel.RefreshTheme">
            <summary>
            Re-applies the current theme styles (including child elements).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedTextPanel.RefreshThemeForChild(Terraria.UI.UIElement)">
            <summary>
            Applies the current theme's styles to a given element (presumably a child element).
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedTextPanel.SetTheme(HamstarHelpers.Classes.UI.Theme.UITheme)">
            <summary>
            Sets the current theme.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedTextPanel.Hide">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedTextPanel.Show">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Elements.UIThemedTextPanel.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Menus.MenuContext">
            <summary>
            Defines the interface of a class that associates with a given menu (via. MenuContextServices).
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Menus.MenuContext.MenuDefinitionOfContext">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Menus.MenuContext.ContextName">
            <summary>Name associated with this context (unique identifier).</summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Menus.MenuContext.IsActive">
            <summary>Context has become active with its associated menu's UI having loaded.</summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menus.MenuContext.#ctor(HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition,System.String)">
            <summary></summary>
            <param name="menuDefinitionOfContext"></param>
            <param name="contextName"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menus.MenuContext.OnModsUnloading">
            <summary>
            Called when mods are unloading. Runs after `OnDeactivation()`.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menus.MenuContext.OnActivation(Terraria.UI.UIState)">
            <summary>
            When our menu context first becomes active with a given menu UI (occurs when that menu is opened).
            </summary>
            <param name="_ui"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menus.MenuContext.OnDeactivation">
            <summary>
            When our menu context deactivates after activating.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menus.MenuContext.Show(Terraria.UI.UIState)">
            <summary>
            When a menu bound to the current context is shown.
            </summary>
            <param name="_ui"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menus.MenuContext.Hide(Terraria.UI.UIState)">
            <summary>
            When a menu bound to the current context is hidden.
            </summary>
            <param name="_ui"></param>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Menus.WidgetMenuContext">
            <summary>
            A simplified "menu context" for binding an arbitrary UI element to a given menu UI.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Menus.WidgetMenuContext.IsInner">
            <summary>
            Indicates a dedicated "inner" UI element container is being used to hold our widget UI element, separate
            from the menu context's "outer" `UIState` UI element.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Menus.WidgetMenuContext.MyElement">
            <summary>
            Widget's UI element.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menus.WidgetMenuContext.#ctor(HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition,System.String,Terraria.UI.UIElement,System.Boolean)">
            <summary></summary>
            <param name="menuDefinition">Menu context to bind to.</param>
            <param name="contextName"></param>
            <param name="myElement">UI element of the widget.</param>
            <param name="isInner">See `IsInner` property.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menus.WidgetMenuContext.OnModsUnloading">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menus.WidgetMenuContext.OnActivation(Terraria.UI.UIState)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menus.WidgetMenuContext.OnDeactivation">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menus.WidgetMenuContext.Show(Terraria.UI.UIState)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menus.WidgetMenuContext.Hide(Terraria.UI.UIState)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Menu.SessionMenuContext">
            <summary>
            Defines a class for menu contexts meaning to extensively modify or add to a given menu UI.
            </summary>
            <summary>
            Defines a class for menu contexts meaning to extensively modify or add to a given menu UI.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Menu.SessionMenuContext.MyMenuUI">
            <summary>
            The existing menu UI that defines our context.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Menu.SessionMenuContext.InfoDisplay">
            <summary>
            A dedicated information displaying panel that 
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menu.SessionMenuContext.#ctor(HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition,System.String,System.Boolean,System.Boolean)">
            <summary>
            </summary>
            <param name="menuDefinitionOfContext">Which menu UI this context belongs to.</param>
            <param name="contextName">Unique name of this context.</param>
            <param name="displayInfo">Whether to show an info display box at the top.</param>
            <param name="occludesLogo">Whether the Terraria logo is removed.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menu.SessionMenuContext.OnActivation(Terraria.UI.UIState)">
            @private
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menu.SessionMenuContext.OnActivationForSession(Terraria.UI.UIState)">
            <summary>
            When our menu context first becomes activated with a given menu UI (runs when menu opens).
            </summary>
            <param name="ui"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menu.SessionMenuContext.Show(Terraria.UI.UIState)">
            <summary>
            When a menu bound to the current context is shown.
            </summary>
            <param name="ui"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menu.SessionMenuContext.Hide(Terraria.UI.UIState)">
            <summary>
            When a menu bound to the current context is hidden.
            </summary>
            <param name="ui"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menu.SessionMenuContext.RecalculateMenuObjects">
            <summary>
            Re-aligns menu objects for the context.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menu.SessionMenuContext.ResetMenuObjects">
            <summary>
            Reverts menu objects when the context changes.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Menu.MenuItem">
            <summary>
            A clickable menu text item. Does not affect positions of other existing vanilla menu items, and is entirely
            light-weight.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menu.MenuItem.AddMenuItem(System.String,System.Int32,System.Int32,System.Action)">
            <summary>
            Adds a menu item.
            </summary>
            <param name="text"></param>
            <param name="offsetY">Vertical pixel position. `MenuItem.MenuTopPosition` is the usual base line for menu
            items.</param>
            <param name="menuContext">Which `Main.menuMode` this belongs to.</param>
            <param name="myAction">Action to perform on click.</param>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Menu.MenuItem.MenuTopPosition">
            <summary>
            The usual base line position for menu items.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Menu.MenuItem.MenuText">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Menu.MenuItem.OffsetY">
            <summary>Offset from top of screen.</summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Menu.MenuItem.MenuContext">
            <summary>Which `Main.menuMode` this belongs to.</summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Menu.MenuItem.MyAction">
            <summary>Action to perform on click.</summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Menu.UI.UIInfoDisplay">
            <summary>
            An information display panel specialized for menu contexts.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menu.UI.UIInfoDisplay.#ctor">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menu.UI.UIInfoDisplay.SetDefaultText(System.String)">
            <summary></summary>
            <param name="text"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menu.UI.UIInfoDisplay.SetText(System.String,System.Nullable{Microsoft.Xna.Framework.Color})">
            <summary></summary>
            <param name="text"></param>
            <param name="color"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Menu.UI.UIInfoDisplay.GetText">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Theme.IThemeable">
            <summary>
            Interface for all elements that support themes intrinsically.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.IThemeable.AppendThemed(Terraria.UI.UIElement)">
            <summary>
            An alternative to the normal `Append` method to apply theming to appended element.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.IThemeable.RefreshTheme">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.IThemeable.RefreshThemeForChild(Terraria.UI.UIElement)">
            <summary>
            Refreshes theme for contained elements.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.IThemeable.SetTheme(HamstarHelpers.Classes.UI.Theme.UITheme)">
            <summary></summary>
            <param name="theme"></param>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Theme.ThemedAttrbute">
            <summary>
            Indicates an element is meant to have a theme.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Theme.PanelThemeAttribute">
            <summary>
            Indicates an element is meant to have a theme as if a panel.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Theme.TextThemeAttribute">
            <summary>
            Indicates an element is meant to have a theme as if a text element.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Theme.ListContainerThemeAttribute">
            <summary>
            Indicates an element is meant to have a theme as if a list container.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Theme.ListItemThemeAttribute">
            <summary>
            Indicates an element is meant to have a theme as if a list item.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Theme.ButtonThemeAttribute">
            <summary>
            Indicates an element is meant to have a theme as if a button.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Theme.InputThemeAttribute">
            <summary>
            Indicates an element is meant to have a theme as if a text input.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Theme.UITheme">
            <summary>
            Defines a theme to use for common UI color and layout settings. Default values are a Mod Helpers custom theme.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.Clone">
            <returns>Clone of the current object.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.Switch(HamstarHelpers.Classes.UI.Theme.UITheme)">
            <summary>
            Copies internal fields into another.
            </summary>
            <param name="newTheme">Theme to copy from.</param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.Apply(Terraria.UI.UIElement)">
            <summary>
            Applies the current them to the given element, as the element specified. Does not assume anything about
            the element to apply theming.
            </summary>
            <param name="element"></param>
            <returns>`false` if the element does not specify how it will be themed.</returns>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyByType(Terraria.UI.UIElement)">
            <summary>
            Attempts to style an element by its type. No additional context is implied (e.g. UIList is not
            treated as a list, as only it's inner "container" element is styled).
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyPanel(Terraria.GameContent.UI.Elements.UIPanel)">
            <summary>
            Applies standard panel theming to a UI panel.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyHeader(Terraria.GameContent.UI.Elements.UIPanel)">
            <summary>
            Applies standard "header" panel theming to a UI panel.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyText(Terraria.GameContent.UI.Elements.UIText)">
            <summary>
            Applies standard text color to a UI text element.
            </summary>
            <param name="elem"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyInput(HamstarHelpers.Classes.UI.Elements.UITextInputPanel)">
            <summary>
            Applies standard text input theming to a UI text field.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyInput(HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel)">
            <summary>
            Applies standard text input theming to a UI text area.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyInput(Terraria.GameContent.UI.Elements.UIPanel)">
            <summary>
            Applies standard text input theming to any UI panel that accepts text colors.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyInputDisable(HamstarHelpers.Classes.UI.Elements.UITextInputAreaPanel)">
            <summary>
            Applies standard disabled text input theming to a UI text area.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyInputDisable(Terraria.GameContent.UI.Elements.UIPanel)">
            <summary>
            Applies standard disabled text input theming to a UI text area.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyButton``1(Terraria.GameContent.UI.Elements.UITextPanel{``0})">
            <summary>
            Applies standard button theming to a UI text panel button.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyButtonLit``1(Terraria.GameContent.UI.Elements.UITextPanel{``0})">
            <summary>
            Applies standard 'lit' button theming to a UI text panel button.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyButtonDisable``1(Terraria.GameContent.UI.Elements.UITextPanel{``0})">
            <summary>
            Applies standard disabled button theming to a UI text panel button.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyListContainer(Terraria.GameContent.UI.Elements.UIPanel)">
            <summary>
            Applies standard list container theming to a UI panel.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyListItem(Terraria.GameContent.UI.Elements.UIPanel)">
            <summary>
            Applies standard list item theming to a UI panel.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyListItemLit(Terraria.GameContent.UI.Elements.UIPanel)">
            <summary>
            Applies standard 'lit' list item theming to a UI panel.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UITheme.ApplyListItemSelected(Terraria.GameContent.UI.Elements.UIPanel)">
            <summary>
            Applies standard 'selected' list item theming to a UI panel.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.MainBgColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.MainEdgeColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.MainTextColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.HeadBgColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.HeadEdgeColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ListBgColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ListEdgeColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ListItemBgColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ListItemEdgeColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ListItemBgLitColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ListItemEdgeLitColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ListItemBgSelectedColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ListItemEdgeSelectedColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.InputBgColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.InputEdgeColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.InputTextColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.InputBgDisabledColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.InputEdgeDisabledColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.InputTextDisabledColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ButtonBgColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ButtonEdgeColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ButtonTextColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ButtonBgLitColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ButtonEdgeLitColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ButtonTextLitColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ButtonBgDisabledColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ButtonEdgeDisabledColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ButtonTextDisabledColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.UrlColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.UrlLitColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.UrlVisitColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ModListBgColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ModListEdgeColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ModListItemBgColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ModListItemEdgeColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ModListItemBgLitColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ModListItemEdgeLitColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ModListItemBgSelectedColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.ModListItemEdgeSelectedColor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Classes.UI.Theme.UITheme.Vanilla">
            <summary>
            Default "vanilla Terraria" UI theme presets.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Theme.UIThemedElement">
            <summary>
            Theme-able UIElement.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Theme.UIThemedElement.Theme">
            <summary>
            Appearance style.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Theme.UIThemedElement.IsHidden">
            Indicates if element is visible. Does not effect interactivity (requires Enable and Disable methods).
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedElement.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.Boolean)">
            <summary></summary>
            <param name="theme"></param>
            <param name="skipThemeRefreshNow"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedElement.AppendThemed(Terraria.UI.UIElement)">
            <summary>
            An alternative to the normal `Append` method to apply theming to appended element.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedElement.RefreshTheme">
            <summary>
            Re-applies the current theme styles (including child elements).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedElement.RefreshThemeForChild(Terraria.UI.UIElement)">
            <summary>
            Applies the current theme's styles to a given element (presumably a child element).
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedElement.SetTheme(HamstarHelpers.Classes.UI.Theme.UITheme)">
            <summary>
            Sets the current theme.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedElement.Hide">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedElement.Show">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedElement.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            @private
        </member>
        <member name="T:HamstarHelpers.Classes.UI.Theme.UIThemedState">
            <summary>
            Theme-able UIState.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Theme.UIThemedState.Theme">
            <summary>
            Appearance style.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Classes.UI.Theme.UIThemedState.IsHidden">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedState.#ctor(HamstarHelpers.Classes.UI.Theme.UITheme,System.Boolean)">
            <summary></summary>
            <param name="theme">Appearance style.</param>
            <param name="skipThemeRefreshNow"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedState.AppendThemed(Terraria.UI.UIElement)">
            <summary>
            An alternative to the normal `Append` method to apply theming to appended element.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedState.RefreshTheme">
            <summary>
            Re-applies the current theme styles (including child elements).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedState.RefreshThemeForChild(Terraria.UI.UIElement)">
            <summary>
            Applies the current theme's styles to a given element (presumably a child element).
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedState.SetTheme(HamstarHelpers.Classes.UI.Theme.UITheme)">
            <summary>
            Sets the current theme.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedState.Hide">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedState.Show">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Classes.UI.Theme.UIThemedState.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            @private
        </member>
        <member name="T:HamstarHelpers.Commands.CleanupModTilesCommand">
            @private
        </member>
        <member name="M:HamstarHelpers.Commands.CleanupModTilesCommand.CleanupAsync(System.Action{System.Int32})">
            <summary>
            </summary>
        </member>
        <member name="P:HamstarHelpers.Commands.CleanupModTilesCommand.Type">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.CleanupModTilesCommand.Command">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.CleanupModTilesCommand.Usage">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.CleanupModTilesCommand.Description">
            @private
        </member>
        <member name="M:HamstarHelpers.Commands.CleanupModTilesCommand.Action(Terraria.ModLoader.CommandCaller,System.String,System.String[])">
            @private
        </member>
        <member name="T:HamstarHelpers.Commands.ControlPanelOpenCommand">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ControlPanelOpenCommand.Type">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ControlPanelOpenCommand.Command">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ControlPanelOpenCommand.Usage">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ControlPanelOpenCommand.Description">
            @private
        </member>
        <member name="M:HamstarHelpers.Commands.ControlPanelOpenCommand.Action(Terraria.ModLoader.CommandCaller,System.String,System.String[])">
            @private
        </member>
        <member name="T:HamstarHelpers.Commands.GetItemIdByNameCommand">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.GetItemIdByNameCommand.Type">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.GetItemIdByNameCommand.Command">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.GetItemIdByNameCommand.Usage">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.GetItemIdByNameCommand.Description">
            @private
        </member>
        <member name="M:HamstarHelpers.Commands.GetItemIdByNameCommand.Action(Terraria.ModLoader.CommandCaller,System.String,System.String[])">
            @private
        </member>
        <member name="T:HamstarHelpers.Commands.ModCallCommand">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModCallCommand.Type">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModCallCommand.Command">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModCallCommand.Usage">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModCallCommand.Description">
            @private
        </member>
        <member name="M:HamstarHelpers.Commands.ModCallCommand.Action(Terraria.ModLoader.CommandCaller,System.String,System.String[])">
            @private
        </member>
        <member name="T:HamstarHelpers.Commands.ModConfigPrintCommand">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModConfigPrintCommand.Type">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModConfigPrintCommand.Command">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModConfigPrintCommand.Usage">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModConfigPrintCommand.Description">
            @private
        </member>
        <member name="M:HamstarHelpers.Commands.ModConfigPrintCommand.Action(Terraria.ModLoader.CommandCaller,System.String,System.String[])">
            @private
        </member>
        <member name="T:HamstarHelpers.Commands.ModIssueReportCommand">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModIssueReportCommand.Type">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModIssueReportCommand.Command">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModIssueReportCommand.Usage">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModIssueReportCommand.Description">
            @private
        </member>
        <member name="M:HamstarHelpers.Commands.ModIssueReportCommand.Action(Terraria.ModLoader.CommandCaller,System.String,System.String[])">
            @private
        </member>
        <member name="T:HamstarHelpers.Commands.ModListCommand">
            @private
        </member>
        <member name="M:HamstarHelpers.Commands.ModListCommand.GetBasicModInfo(Terraria.ModLoader.Mod,HamstarHelpers.Services.TML.BuildPropertiesViewer)">
            @private
        </member>
        <member name="M:HamstarHelpers.Commands.ModListCommand.GetVerboseModInfo(Terraria.ModLoader.Mod,HamstarHelpers.Services.TML.BuildPropertiesViewer)">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModListCommand.Type">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModListCommand.Command">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModListCommand.Usage">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModListCommand.Description">
            @private
        </member>
        <member name="M:HamstarHelpers.Commands.ModListCommand.Action(Terraria.ModLoader.CommandCaller,System.String,System.String[])">
            @private
        </member>
        <member name="T:HamstarHelpers.Commands.ModLockWorldToggleCommand">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModLockWorldToggleCommand.Type">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModLockWorldToggleCommand.Command">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModLockWorldToggleCommand.Usage">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.ModLockWorldToggleCommand.Description">
            @private
        </member>
        <member name="M:HamstarHelpers.Commands.ModLockWorldToggleCommand.Action(Terraria.ModLoader.CommandCaller,System.String,System.String[])">
            @private
        </member>
        <member name="T:HamstarHelpers.Commands.MyUserIdCommand">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.MyUserIdCommand.Type">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.MyUserIdCommand.Command">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.MyUserIdCommand.Usage">
            @private
        </member>
        <member name="P:HamstarHelpers.Commands.MyUserIdCommand.Description">
            @private
        </member>
        <member name="M:HamstarHelpers.Commands.MyUserIdCommand.Action(Terraria.ModLoader.CommandCaller,System.String,System.String[])">
            @private
        </member>
        <member name="T:HamstarHelpers.ModHelpersPrivilegedUserConfig">
            <summary>
            Defines config settings for a specific "privileged user" entry (used by assorted APIs).
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersPrivilegedUserConfig.Instance">
            <summary>
            Gets the singleton instance of this config file.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersPrivilegedUserConfig.Mode">
            @private
        </member>
        <member name="F:HamstarHelpers.ModHelpersPrivilegedUserConfig.PrivilegedUserId">
            <summary>
            User ID of a designated privileged (admin) player. Refers to the internal player UID used by Mod Helpers.
            </summary>
        </member>
        <member name="M:HamstarHelpers.ModHelpersPrivilegedUserConfig.OnChanged">
            @private
        </member>
        <member name="T:HamstarHelpers.ModHelpersConfig">
            <summary>
            Defines Mod Helpers config settings.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.Instance">
            <summary>
            Gets the stack-merged singleton instance of this config file.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.Mode">
            @private
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DebugModeHelpersInfo">
            <summary>
            Outputs (to log) debug information relevant to specific Helpers functions (where applicable). Developers only.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DebugModeNetInfo">
            <summary>
            Outputs (to log) network message information (sends and receives of PacketProtocol).
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DebugModeUnhandledExceptionLogging">
            <summary>
            Catches and logs unhandled exceptions (before crash).
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DebugModeDumpAlsoServer">
            <summary>
            Allows users to invoke 'data dumps' (see DataDump service) on behalf of the server (without being the 'privileged' user).
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DebugModeDisableSilentLogging">
            <summary>
            Disables logging of "silenced" exceptions.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DebugModePacketInfo">
            <summary>
            Logs PacketProtocol payload content.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DebugModeMenuInfo">
            <summary>
            Displays the current menu's ID in bottom right.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DebugModeEntityGroupDisplay">
            <summary>
            Displays all entity groups in the log on mod load.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DisableControlPanel">
            <summary>
            Disables control panel outright.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.ControlPanelIconX">
            <summary>
            Control panel icon's X coordinate on screen. Negative values align the button from the right edge.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.ControlPanelIconY">
            <summary>
            Control panel icon's Y coordinate on screen. Negative values align the button from the bottom edge.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.InboxIconX">
            <summary>
            Horizontal X coordinate of in-game inbox icon. Negative values align the button from the right edge.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.InboxIconY">
            <summary>
            Horizontal Y coordinate of in-game inbox icon. Negative values align the button from the bottom edge.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.ModIssueReportErrorLogMaxLines">
            <summary>
            Quantity of the latest log entries to pass along with issue reports.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.WorldModLockEnable">
            <summary>
            Enables mod locking per world (prevents playing a world with missing mods).
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.WorldModLockMinimumOnly">
            <summary>
            Sets mod locking to expect only the exact set of mods it was locked with, and no more.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.CustomPlayerDataAsText">
            <summary>
            Save custom player data as (json) text.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DisableAllInternetFeatures">
            <summary>
            Shorthand for disabling all internet functions
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.ModCallCommandEnabled">
            <summary>
            Allows calling `Mod.Call(...)` via. chat/console commands. Use at your own risk!
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.PacketRequestRetryDuration">
            <summary>
            Duration (in game ticks) to wait in expectation of a reply before a retry attempt of a given packet is made.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.IsServerGaugingAveragePing">
            <summary>
            Server occasionally pings clients to guage their latency.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.PingUpdateDelay">
            <summary>
            Duration between latency pings per client.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DisableModMenuTweaks">
            <summary>
            Disables mod tags UI for mod browser and mod info.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DisableModTags">
            <summary>
            Disables mod tags UI for mod browser and mod info.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DisableJudgmentalTags">
            <summary>
            Disable 'judgmental' mod tags.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DisableModMenuUpdates">
            <summary>
            Disables mod version updates overlay display in the mod menu.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.DisableOwnIPCheck">
            <summary>
            Disables IP address checks from checkip.dyndns.org.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.GeoResonantOrbSoldByDryad">
            <summary>
            Adds Geo-Resonant Orbs to Dryad's shop.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.MagiTechScrapMechBossDropsEnabled">
            <summary>
            Magi-Tech Scrap items drop from mech bosses.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.CoalAsTile">
            <summary>
            Coal items can be placed like tiles.
            </summary>
        </member>
        <member name="P:HamstarHelpers.ModHelpersConfig.AddCrimsonLeatherRecipe">
            <summary>
            Adds crimson biome alternatve recipe for leather.
            </summary>
        </member>
        <member name="M:HamstarHelpers.ModHelpersConfig.AcceptClientChanges(Terraria.ModLoader.Config.ModConfig,System.Int32,System.String@)">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.Buffs.BuffAttributesHelpers">
            <summary>
            Assorted static "helper" functions pertaining to buff attributes.
            </summary>
            @private
        </member>
        <member name="P:HamstarHelpers.Helpers.Buffs.BuffAttributesHelpers.DisplayNamesToIds">
            <summary>
            A map of buff names to their Terraria IDs.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Buffs.BuffAttributesHelpers.GetBuffDisplayName(System.Int32)">
            <summary>
            Alias for `Lang.GetBuffName(int)`.
            
            Credit: Jofairden @ Even More Modifiers
            </summary>
            <param name="buffType"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Buffs.BuffHelpers">
            <summary>
            Assorted static "helper" functions pertaining to buffs.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Buffs.BuffHelpers.AddPermaBuff(Terraria.Player,System.Int32)">
            <summary>
            Adds a permanent buff to a player. Will persist across saves.
            </summary>
            <param name="player">Player to apply buff to.</param>
            <param name="buffId">ID of buff.</param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Buffs.BuffHelpers.RemovePermaBuff(Terraria.Player,System.Int32)">
            <summary>
            Removes a permanent buff from a player.
            </summary>
            <param name="player">Player to remove buff from.</param>
            <param name="buffId">ID of buff.</param>
        </member>
        <member name="T:HamstarHelpers.Helpers.Collisions.CollisionHelpers">
            <summary>
            Assorted static "helper" functions pertaining to general collision detecting and handling.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Collisions.CollisionHelpers.CastRay(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,System.Func{Microsoft.Xna.Framework.Vector2,System.Boolean},System.Func{System.Int32,System.Int32,System.Boolean})">
            <summary>
            Casts a ray from a given world point along a given heading.
            </summary>
            <param name="worldPosition"></param>
            <param name="direction"></param>
            <param name="maxWorldDistance"></param>
            <param name="checkPerUnit"></param>
            <param name="checkPerTile"></param>
            <returns>`true` if the checker function reports a collision (itself returns `true`).</returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Collisions.TileCollisionHelpers">
            <summary>
            Assorted static "helper" functions pertaining to collisions between objects and/or tiles.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Collisions.TileCollisionHelpers.MeasureWorldDistanceToTile(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean@,System.Collections.Generic.List{System.Tuple{System.Int32,System.Int32}})">
            <summary>
            Measures world distance to the nearest tile from a given point and heading.
            </summary>
            <param name="position"></param>
            <param name="direction"></param>
            <param name="maxDistance"></param>
            <param name="notFound"></param>
            <param name="ignoredTiles">A list of tile X and Y points to ignore.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Collisions.TileCollisionHelpers.FindPathSimple(System.ValueTuple{System.Int32,System.Int32},System.ValueTuple{System.Int32,System.Int32},System.Int32,System.Collections.Generic.IList{System.ValueTuple{System.Int32,System.Int32}}@)">
            <summary>
            Attempts to find a path between 2 points using a simple brute force method.
            </summary>
            <param name="tilePointA"></param>
            <param name="tilePointB"></param>
            <param name="maxTilesCovered"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Debug.DebugHelpers">
            <summary>
            Assorted static "helper" functions pertaining to debugging and debug outputs.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to debugging and debug outputs.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to debugging and debug outputs.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.DebugHelpers.GetContextSlice(System.Int32,System.Boolean,System.Int32,System.String)">
            <summary>
            Gets a slice of the current method call (context) stack trace beginning at the specified frame (stack
            depth).
            </summary>
            <param name="stackFrameIdx">Depth within the current call stack.</param>
            <param name="omitNamespace"></param>
            <param name="max"></param>
            <param name="until"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.DebugHelpers.GetCurrentContext(System.Int32)">
            <summary>
            Gets the current method call (context) of a stack trace at the specified frame (stack depth).
            </summary>
            <param name="stackFrameIdx">Depth within the current call stack.</param>
            <returns>Method, class, and namespace of the given frame of the current call stack.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.DebugHelpers.Print(System.String)">
            <summary>
            Prints a message to the screen for the given tick duration. Message overlaps chat area. Repeat calls to display a message of a
            given label merely update that existing message.
            </summary>
            <param name="labelAndMsg">Identifier and message to display. Identifier is delineated by first occurrence of `.` in the
            string. Calling `Print(...)` with this same identifier replaces any existing displayed message of this identifier.</param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.DebugHelpers.Print(System.String,System.String)">
            <summary>
            Prints a message to the screen for the given tick duration. Message overlaps chat area. Repeat calls to display a message of a
            given label merely update that existing message.
            </summary>
            <param name="msgLabel">Identifier of the given message. Calling `Print(...)` with this same identifier replaces any existing
            displayed message of this identifier.</param>
            <param name="msg">Message to display.</param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.DebugHelpers.Print(System.String,System.String,System.Int32)">
            <summary>
            Prints a message to the screen for the given tick duration. Message overlaps chat area. Repeat calls to display a message of a
            given label merely update that existing message.
            </summary>
            <param name="msgLabel">Identifier of the given message. Calling `Print(...)` with this same identifier replaces any existing
            displayed message of this identifier.</param>
            <param name="msg">Message to display.</param>
            <param name="tickDuration">Tick duration to display the given message.</param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.DebugHelpers.DrawRect(System.String,Microsoft.Xna.Framework.Rectangle,System.Boolean,System.Int32)">
            <summary>
            Draws a rectangle to screen.
            </summary>
            <param name="id">Unique identifier.</param>
            <param name="rect"></param>
            <param name="isWorldPos"></param>
            <param name="duration"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.Debug.LogHelpers">
            <summary>
            Assorted static "helper" functions pertaining to log outputs.
            </summary>
            @private
            <summary>
            Assorted static "helper" functions pertaining to log outputs.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to log outputs.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.FormatMessage(System.String,System.Int32)">
            <summary>
            Formats a given message as it would appear in the log output.
            </summary>
            <param name="msg"></param>
            <param name="contextDepth">Indicates whether to also output the callstack context at the specified depth.
            No output if -1 is set.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.FormatMessageFull(System.String,System.Int32)">
            <summary>
            Formats a given message as it would appear in the log output.
            </summary>
            <param name="msg"></param>
            <param name="contextDepth">Indicates whether to also output the callstack context at the specified depth.
            No output if -1 is set.</param>
            <returns>Calling context, global info, and full (chained together) output.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.Info(System.String)">
            <summary>
            Outputs a plain log message without added fluff (wraps `Mod.Logger.Info(...)`).
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.Info(Terraria.ModLoader.Mod,System.String)">
            <summary>
            Outputs a plain log message without added fluff (wraps `Mod.Logger.Info(...)`).
            </summary>
            <param name="mod"></param>
            <param name="msg"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.Log(System.String)">
            <summary>
            Outputs a plain log message.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.Alert(System.String)">
            <summary>
            Outputs an "alert" log message (TML considers it an error-type message).
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.Warn(System.String)">
            <summary>
            Outputs a warning log message (TML considers it a fatal-type message).
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.LogContext(System.String,System.Boolean,System.Int32,System.String,System.String)">
            <summary>
            Outputs a log message indicating the current context.
            </summary>
            <param name="msg"></param>
            <param name="omitNamespace"></param>
            <param name="max"></param>
            <param name="separator"></param>
            <param name="spacer"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.LogOnce(System.String)">
            <summary>
            Outputs a plain log message "once" (or rather, once every log10 % 1 == 0 times).
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.AlertOnce(System.String)">
            <summary>
            Outputs an "alert" log message "once" (or rather, once every log10 % 1 == 0 times).
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.WarnOnce(System.String)">
            <summary>
            Outputs a "warning" log message "once" (or rather, once every log10 % 1 == 0 times).
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.LogAndPrintOnce(System.String,System.Nullable{Microsoft.Xna.Framework.Color})">
            <summary>
            Outputs a plain log message "once" (or rather, once every log10 % 1 == 0 times).
            </summary>
            <param name="msg"></param>
            <param name="color"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.AlertAndPrintOnce(System.String,System.Nullable{Microsoft.Xna.Framework.Color})">
            <summary>
            Outputs an "alert" log message "once" (or rather, once every log10 % 1 == 0 times).
            </summary>
            <param name="msg"></param>
            <param name="color"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.WarnAndPrintOnce(System.String,System.Nullable{Microsoft.Xna.Framework.Color})">
            <summary>
            Outputs a "warning" log message "once" (or rather, once every log10 % 1 == 0 times).
            </summary>
            <param name="msg"></param>
            <param name="color"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Debug.LogHelpers.ResetOnceMessage(System.String)">
            <summary>
            Resets a given "once" log, alert, or warn messages.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.DotNetHelpers">
            <summary>
            Assorted static "helper" functions pertaining to .NET/C# functionality.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.DotNET.DotNetHelpers.RadDeg">
            <summary>
            Radians-to-degrees.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.DotNET.DotNetHelpers.DegRed">
            <summary>
            Degrees-to-radians.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.DotNetHelpers.StringifyDict``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Processes a dictionary into a string with some condensed formatting.
            </summary>
            <typeparam name="TKey">Dictionary key.</typeparam>
            <typeparam name="TValue">Dictionary value.</typeparam>
            <param name="dict">Dictionary.</param>
            <returns>Dictionary processed into a string.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.DotNetHelpers.Stringify(System.Object,System.Int32)">
            <summary>
            Processes an object as a (JSON) string. Applies a character limit, if specified.
            </summary>
            <param name="obj">Object to process.</param>
            <param name="charLimit">Size of string. Leave as -1 for no limit.</param>
            <returns>Object processed into a string.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.DotNetHelpers.ParseToInferredPrimitiveType(System.String)">
            <summary>
            Parses a string into a primive type based on a best guess.
            </summary>
            <param name="value">Value to parse.</param>
            <returns>Parsed value object. Use `getType()` to know what it is.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.DotNetHelpers.FlagsToCollection``1(System.Int32)">
            <summary>
            Separates each bit of a 32-bit int into a collection.
            </summary>
            <typeparam name="T">Enum type to represent flags.</typeparam>
            <param name="flags">Input bit flags as an int.</param>
            <returns>Collection of flags as enums.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.DotNetHelpers.IsSubclassOfRawGeneric(System.Type,System.Type)">
            <summary>
            Reports if a type is a subtype of another type using generics.
            </summary>
            <param name="parentTypeWithGenericParams">Parent class type (implicitly as a generic type) to check against.</param>
            <param name="givenType">Type to check with.</param>
            <returns>`true` if given type is a subclass of the parent type.</returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.Encoding.HashHelpers">
            <summary>
            Assorted static "helper" functions pertaining to hash codes.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Encoding.HashHelpers.ComputeSHA256Hash(System.String)">
            <summary>
            Produces a SHA256 hash from a given input string.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.Encoding.SimpleStringCipher">
            <summary>
            Simple string cipher encrypting and decrypting.
            
            Credit: https://stackoverflow.com/a/10177020/6269494
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Encoding.SimpleStringCipher.Encrypt(System.String,System.String)">
            <summary>
            Encrypts a given plain text string upon a hidden given pass phrase.
            </summary>
            <param name="plainText"></param>
            <param name="passPhrase"></param>
            <returns>Encrypted string.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Encoding.SimpleStringCipher.Decrypt(System.String,System.String)">
            <summary>
            Decrypts a given cipher text into its original plain text form.
            </summary>
            <param name="cipherText"></param>
            <param name="passPhrase"></param>
            <returns>Plain text string.</returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.Extensions.ArrayExtensions">
            <summary>
            Assorted static extension "helper" functions pertaining to arrays.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.ArrayExtensions.RemoveAt``1(``0[],System.Int32)">
            <summary>
            Removes an item at a given point in a source array.
            </summary>
            <typeparam name="T">Array type.</typeparam>
            <param name="source">Source array.</param>
            <param name="index">Index of item to remove from the array.</param>
            <returns>New array with removed item.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.ArrayExtensions.Copy``1(``0[],System.Int32,System.Int32)">
            <summary>
            Makes a copy of a portion of an array.
            </summary>
            <typeparam name="T">Array type.</typeparam>
            <param name="source">Source array.</param>
            <param name="sourceIndex">Start index to begin copying.</param>
            <param name="destinationIndex">End position in source array to copy up to.</param>
            <returns>Resulting copied slice of the source array.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.ArrayExtensions.Copy``1(``0[],System.Int32)">
            <summary>
            Makes a copy of a slice of a given array.
            </summary>
            <typeparam name="T">Array type.</typeparam>
            <param name="source">Source array.</param>
            <param name="length">Amount of array to copy.</param>
            <returns>Resulting copied slice of the source array.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.ArrayExtensions.Copy``1(``0[])">
            <summary>
            Makes a full copy of a given array.
            </summary>
            <typeparam name="T">Array type.</typeparam>
            <param name="source">Source array.</param>
            <returns>Resulting copy of the source array.</returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.Extensions.BinaryReaderExtensions">
            <summary>
            Extension methods for BinaryReader.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.BinaryReaderExtensions.ReadAllBytes(System.IO.BinaryReader)">
            <summary>
            Implement a safe way to read all bytes in a stream as a correctly-sized byte array.
            </summary>
            <param name="reader">Source stream.</param>
            <returns>All bytes in the stream.</returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions">
            <summary>
            Assorted static extension "helper" functions pertaining to dictionaries.
            </summary>
            <summary>
            Assorted static extension "helper" functions pertaining to dictionaries.
            </summary>
            <summary>
            Assorted static extension "helper" functions pertaining to dictionaries.
            </summary>
            <summary>
            Assorted static extension "helper" functions pertaining to dictionaries.
            </summary>
            <summary>
            Assorted static extension "helper" functions pertaining to dictionaries.
            </summary>
            <summary>
            Assorted static extension "helper" functions pertaining to dictionaries.
            </summary>
            <summary>
            Assorted static extension "helper" functions pertaining to dictionaries.
            </summary>
            <summary>
            Assorted static extension "helper" functions pertaining to dictionaries.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Gets a value from a dictionary by a given key, or else the value type's default, if none found.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.AddOrSet``1(System.Collections.Generic.IDictionary{``0,System.Int32},``0,System.Int32)">
            <summary>
            Adds to a given value (or sets it, if not present) in a dictionary at a given key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.AddOrSet``1(System.Collections.Generic.IDictionary{``0,System.Single},``0,System.Single)">
            <summary>
            Adds to a given value (or sets it, if not present) in a dictionary at a given key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.AddOrSet``1(System.Collections.Generic.IDictionary{``0,System.Double},``0,System.Double)">
            <summary>
            Adds to a given value (or sets it, if not present) in a dictionary at a given key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.AddToValue2D``1(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.List{System.Int16}},``0,System.Int32,System.Int16)">
            <summary>
            Adds to a value to a nested collection in the given dictionary at the given key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="idx"></param>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.AddToValue2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IDictionary{``1,System.Int16}},``0,``1,System.Int16)">
            <summary>
            Adds to a value to a nested dictionary in the given dictionary at the given key.
            </summary>
            <typeparam name="TKey1"></typeparam>
            <typeparam name="TKey2"></typeparam>
            <param name="dict"></param>
            <param name="key1"></param>
            <param name="key2"></param>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.AddToValue2D``1(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.List{System.Int32}},``0,System.Int32,System.Int32)">
            <summary>
            Adds to a value to a nested collection in the given dictionary at the given key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="idx"></param>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.AddToValue2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IDictionary{``1,System.Int32}},``0,``1,System.Int32)">
            <summary>
            Adds to a value to a nested dictionary in the given dictionary at the given key.
            </summary>
            <typeparam name="TKey1"></typeparam>
            <typeparam name="TKey2"></typeparam>
            <param name="dict"></param>
            <param name="key1"></param>
            <param name="key2"></param>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.AddToValue2D``1(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.List{System.Single}},``0,System.Int32,System.Single)">
            <summary>
            Adds to a value to a nested collection in the given dictionary at the given key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="idx"></param>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.AddToValue2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IDictionary{``1,System.Single}},``0,``1,System.Single)">
            <summary>
            Adds to a value to a nested dictionary in the given dictionary at the given key.
            </summary>
            <typeparam name="TKey1"></typeparam>
            <typeparam name="TKey2"></typeparam>
            <param name="dict"></param>
            <param name="key1"></param>
            <param name="key2"></param>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.AddToValue2D``1(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.List{System.Double}},``0,System.Int32,System.Double)">
            <summary>
            Adds to a value to a nested collection in the given dictionary at the given key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="idx"></param>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.AddToValue2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IDictionary{``1,System.Double}},``0,``1,System.Double)">
            <summary>
            Adds to a value to a nested dictionary in the given dictionary at the given key.
            </summary>
            <typeparam name="TKey1"></typeparam>
            <typeparam name="TKey2"></typeparam>
            <param name="dict"></param>
            <param name="key1"></param>
            <param name="key2"></param>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Append2D``2(System.Collections.Generic.IDictionary{``0,``1[]},``0,``1)">
            <summary>
            Appends a value to a nested collection in the given dictionary at the given key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Append2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IList{``1}},``0,``1)">
            <summary>
            Appends a value to a nested collection in the given dictionary at the given key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Append2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.ISet{``1}},``0,``1)">
            <summary>
            Appends a value to a nested collection in the given dictionary at the given key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Count2D``3(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IDictionary{``1,``2}})">
            <summary>
            Counts all entries in a 2D dictionary.
            </summary>
            <typeparam name="TKey1"></typeparam>
            <typeparam name="TKey2"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Count2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Counts all entries in a 2D dictionary.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Count2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IList{``1}})">
            <summary>
            Counts all entries in a 2D dictionary.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Count2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.ISet{``1}})">
            <summary>
            Counts all entries in a 2D dictionary.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.TryGetValue2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IList{``1}},``0,System.Int32,``1@)">
            <summary>
            Safely attempts to get a value (akin to the usual TryGetValue) by index within a nested collection in a
            dictionary at a given key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="idx"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.TryGetValue2D``3(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IDictionary{``1,``2}},``0,``1,``2@)">
            <summary>
            Safely attempts to get a value (akin to the usual TryGetValue) by key within a nested dictionary in the parent
            dictionary at a given key.
            </summary>
            <typeparam name="TKey1"></typeparam>
            <typeparam name="TKey2"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key1"></param>
            <param name="key2"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Get2DOrDefault``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IList{``1}},``0,System.Int32)">
            <summary>
            Safely attempts to get a value (returning a default on failure) by index within a nested collection in a dictionary
            at a given key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Get2DOrDefault``3(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IDictionary{``1,``2}},``0,``1)">
            <summary>
            Safely attempts to get a value (returning a default on failure) by key within a nested dictionary in the parent
            dictionary at a given key.
            </summary>
            <typeparam name="TKey1"></typeparam>
            <typeparam name="TKey2"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key1"></param>
            <param name="key2"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Contains2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.ISet{``1}},``0,``1)">
            <summary>
            Safely attempts to determine if a given a value exists within the 2D collection.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Contains2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IList{``1}},``0,``1)">
            <summary>
            Safely attempts to determine if a given a value exists within the 2D collection.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Contains2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IEnumerable{``1}},``0,``1)">
            <summary>
            Safely attempts to determine if a given a value exists within the 2D collection.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Add2D``1(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.List{System.Int16}},``0,System.Int32,System.Int16)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Add2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IDictionary{``1,System.Int16}},``0,``1,System.Int16)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Add2D``1(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.List{System.Int32}},``0,System.Int32,System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Add2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IDictionary{``1,System.Int32}},``0,``1,System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Add2D``1(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.List{System.Single}},``0,System.Int32,System.Single)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Add2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IDictionary{``1,System.Single}},``0,``1,System.Single)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Add2D``1(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.List{System.Double}},``0,System.Int32,System.Double)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Add2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IDictionary{``1,System.Double}},``0,``1,System.Double)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Remove2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IList{``1}},``0,System.Int32)">
            <summary>
            Removes a value in a nested collection at a given dictionary key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Remove2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IList{``1}},``0,``1)">
            <summary>
            Removes a value in a nested collection at a given dictionary key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Remove2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.ISet{``1}},``0,``1)">
            <summary>
            Removes a value in a nested collection at a given dictionary key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Remove2D``3(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IDictionary{``1,``2}},``0,``1)">
            <summary>
            Removes a value in a nested dictionary at a given dictionary key.
            </summary>
            <typeparam name="TKey1"></typeparam>
            <typeparam name="TKey2"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key1"></param>
            <param name="key2"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Set2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.List{``1}},``0,System.Int32,``1)">
            <summary>
            Sets a value in a nested collection at a given dictionary key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="idx"></param>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Set2D``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.ISet{``1}},``0,``1)">
            <summary>
            Sets a value in a nested collection at a given dictionary key.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Set2D``3(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IDictionary{``1,``2}},``0,``1,``2)">
            <summary>
            Sets a value in a nested dictionary at a given dictionary key.
            </summary>
            <typeparam name="TKey1"></typeparam>
            <typeparam name="TKey2"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key1"></param>
            <param name="key2"></param>
            <param name="value"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.DictionaryExtensions.Set2DSorted``3(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IDictionary{``1,``2}},``0,``1,``2)">
            <summary>
            Sets a value in a nested (sorted) dictionary at a given dictionary key.
            </summary>
            <typeparam name="TKey1"></typeparam>
            <typeparam name="TKey2"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key1"></param>
            <param name="key2"></param>
            <param name="value"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.Extensions.KeyValuePairExtensions">
            <summary>
            Extensions for `KeyValuePair`.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.KeyValuePairExtensions.Deconstruct``2(System.Collections.Generic.KeyValuePair{``0,``1},``0@,``1@)">
            <summary>
            Enables value tuples `foreach` for dictionaries, rather than just `KeyValuePair`.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="this"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.Extensions.PrimitiveExtensions">
            <summary>
            Extensions for general types.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.PrimitiveExtensions.Clamp``1(``0@,``0,``0)">
            <summary>
            Clamps most primitive value types.
            Credit to absoluteAquarian
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.Extensions.StringExtensions">
            <summary>
            Extensions for strings.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.StringExtensions.Trunc(System.String,System.Int32)">
            <summary>
            Safely truncates an input string.
            </summary>
            <param name="value"></param>
            <param name="maxLength"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.Extensions.Vector2StringExtensions">
            <summary>
            Extensions for Vector2 to output shorter strings.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.Vector2StringExtensions.ToShortString(Microsoft.Xna.Framework.Vector2)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.Extensions.XNAExtensions">
            <summary>
            Assorted static extension "helper" functions pertaining to XNA data structures.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.XNAExtensions.ToVector2(System.ValueTuple{System.Int32,System.Int32})">
            <summary>
            Converts a value tuple to a Vector2.
            </summary>
            <param name="tuple"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.XNAExtensions.ToVector2(System.ValueTuple{System.Single,System.Single})">
            <summary>
            Converts a value tuple to a Vector2.
            </summary>
            <param name="tuple"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.XNAExtensions.ToVector2(Microsoft.Xna.Framework.Point)">
            <summary>
            Converts a Point to a Vector2.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.XNAExtensions.ToTuple(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Converts a Vector2 to a value tuple.
            </summary>
            <param name="vec"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Extensions.XNAExtensions.ToTuple(Microsoft.Xna.Framework.Point)">
            <summary>
            Converts a Point to a value tuple.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.FileHelpers">
            <summary>
            Assorted static "helper" functions pertaining to basic file IO.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to basic file IO.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to basic file IO.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.FileHelpers.SanitizePath(System.String)">
            <summary>
            Sanitizes a string to work correctly as a file path.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.FileHelpers.SaveBinaryFile(System.Byte[],System.String,System.Boolean,System.Boolean)">
            <summary>
            Outputs a byte array to file as binary data.
            </summary>
            <param name="data">Object to output.</param>
            <param name="fullPath">System path to the file.</param>
            <param name="isCloud">Stores the file on the cloud.</param>
            <param name="backupOld">Writes any existing file to a .bak backup file, but still overrides the current file.</param>
            <returns>Returns `true` if file wrote successfully.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.FileHelpers.SaveBinaryFile(System.Byte[],System.String,System.Boolean,System.Boolean,System.String@)">
            <summary>
            Outputs a byte array to file as binary data.
            </summary>
            <param name="data">Object to output.</param>
            <param name="fullPath">System path to the file.</param>
            <param name="isCloud">Stores the file on the cloud.</param>
            <param name="backupOld">Writes any existing file to a .bak backup file, but still overrides the current file.</param>
            <param name="status">Reports specific information on IO result's status.</param>
            <returns>Returns `true` if file wrote successfully.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.FileHelpers.LoadBinaryFile(System.String,System.Boolean)">
            <summary>
            Loads a binary file into the given object type.
            </summary>
            <param name="fullPath">System path to the file.</param>
            <param name="isCloud">Stores the file on the cloud.</param>
            <returns>A byte array of the input file's data. `null` if file does not exist, or error.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.FileHelpers.LoadBinaryFile(System.String,System.Boolean,System.String@)">
            <summary>
            Loads a binary file into the given object type.
            </summary>
            <param name="fullPath">System path to the file.</param>
            <param name="isCloud">Stores the file on the cloud.</param>
            <param name="status">Reports specific information on IO result's status.</param>
            <returns>A byte array of the input file's data. `null` if file does not exist, or error.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.FileHelpers.SaveTextFile(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Saves string data to a text file.
            </summary>
            <param name="data">Text file's data.</param>
            <param name="fullPath">System path to file.</param>
            <param name="isCloud">Indicates to save on the cloud.</param>
            <param name="backupOld">Performs a backup of any existing file (with .bak extension).</param>
            <returns>`true` on success.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.FileHelpers.LoadTextFile(System.String,System.Boolean)">
            <summary>
            Gets a text file.
            </summary>
            <param name="fullPath">System path to text file.</param>
            <param name="isCloud">Indicates to look on the cloud.</param>
            <returns>String data of text file encoded as UTF8.</returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.Formatting.StringFormattingHelpers">
            <summary>
            Assorted static "helper" functions pertaining to formatting string data.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Formatting.StringFormattingHelpers.SanitizeMarkdown(System.String)">
            <summary>
            Escapes common markdown formatting characters.
            </summary>
            <param name="input"></param>
            <returns>String sanitized for markdown use with no formatting.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Formatting.StringFormattingHelpers.ConvertDecimalToRadix(System.Int64,System.Int32)">
            <summary>
            Converts the given decimal number to the numeral system with the specified radix (in the range [2, 36]).
            </summary>
            <param name="number">The number to convert.</param>
            <param name="radix">The radix of the destination numeral system (in the range [2, 36]).</param>
            <returns>Converted number.</returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.LINQHelpers">
            <summary>
            Assorted static "helper" functions pertaining to LINQ.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.LINQHelpers.SafeSelect``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Wraps a LINQ `Select(...)` call with an exception catcher that both pipes the exception as a log error, and returns an
            empty collection to not interrupt program flow.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.LINQHelpers.SafeSelect``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
            <summary>
            Wraps a LINQ `Select(...)` call with an exception catcher that both pipes the exception as a log error, and returns an
            empty collection to not interrupt program flow.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.LINQHelpers.SafeSelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Wraps a LINQ `SelectMany(...)` call with an exception catcher that both pipes the exception as a log error, and returns an
            empty collection to not interrupt program flow.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.LINQHelpers.SafeSelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
            <summary>
            Wraps a LINQ `SelectMany(...)` call with an exception catcher that both pipes the exception as a log error, and returns an
            empty collection to not interrupt program flow.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TCollection"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="collectionSelector"></param>
            <param name="resultSelector"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.LINQHelpers.SafeSelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
            <summary>
            Wraps a LINQ `SelectMany(...)` call with an exception catcher that both pipes the exception as a log error, and returns an
            empty collection to not interrupt program flow.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TCollection"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="collectionSelector"></param>
            <param name="resultSelector"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.LINQHelpers.SafeSelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Wraps a LINQ `SelectMany(...)` call with an exception catcher that both pipes the exception as a log error, and returns an
            empty collection to not interrupt program flow.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.LINQHelpers.SafeWhere``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
            <summary>
            Wraps a LINQ `Where(...)` call with an exception catcher that both pipes the exception as a log error, and returns an
            empty collection to not interrupt program flow.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.LINQHelpers.SafeWhere``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Wraps a LINQ `Where(...)` call with an exception catcher that both pipes the exception as a log error, and returns an
            empty collection to not interrupt program flow.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.LINQHelpers.SafeOrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Wraps a LINQ `OrderBy(...)` call with an exception catcher that both pipes the exception as a log error, and returns an
            empty collection to not interrupt program flow.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.LINQHelpers.SafeOrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Wraps a LINQ `OrderBy(...)` call with an exception catcher that both pipes the exception as a log error, and returns an
            empty collection to not interrupt program flow.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.Reflection.NullableAttribute">
            <summary>
            Attribute for indicating reference parameters that must be expected to sometimes occur as null
            </summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers">
            <summary>
            Assorted static "helper" functions pertaining to reflection
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to reflection
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to reflection
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to reflection
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to reflection
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to reflection
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.MostAccess">
            <summary>
            Handy preset for accessing any member of the given name (regardless of access restrictions).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.GetMainAssembly">
            <summary>
            Returns the "main" assembly of tModLoader/Terraria.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.GetAssembly(System.String)">
            <summary>
            Gets an assembly by the given name. Caches result for quicker future retrievals.
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.Get``1(System.Object,System.String,``0@)">
            <summary>
            General use getter for fields or properties.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance">Instance of the object to get the member value of.</param>
            <param name="fieldOrPropName"></param>
            <param name="result"></param>
            <returns>`true` if field or property exist.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.Get``1(System.Type,System.Object,System.String,``0@)">
            <summary>
            General use getter for fields or properties. Accepts a `Type` parameter for static members.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="classType">Type of the object bearing the member to be set.</param>
            <param name="instance">Instance of the object to set the member value of. Use `null` for static.</param>
            <param name="fieldOrPropName"></param>
            <param name="result"></param>
            <returns>`true` if field or property exist.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.Set(System.Object,System.String,System.Object)">
            <summary>
            Sets field or property.
            </summary>
            <param name="instance">Instance of the object to set the member value of.</param>
            <param name="fieldOrPropName"></param>
            <param name="value"></param>
            <returns>`true` if member exists.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.Set(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Sets field or property. Accepts a `Type` parameter for static members.
            </summary>
            <param name="classType">Type of the object bearing the member to be set.</param>
            <param name="instance">Instance of the object to set the member value of. Use `null` for static.</param>
            <param name="fieldOrPropName"></param>
            <param name="newValue"></param>
            <returns>`true` if member exists.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.GetDeep``1(System.Object,System.String,``0@)">
            <summary>
            Digs through a nested succession of (non-static) fields or properties of a given class to get a member's value.
            </summary>
            <typeparam name="T">Type of the value to obtain.</typeparam>
            <param name="instance">Top level class to start digging through.</param>
            <param name="concatenatedNames">Succession of member names at each level of the dig.</param>
            <param name="result">Deepest member's value.</param>
            <returns>`true` if member is found.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.GetDeep``1(System.Object,System.String[],``0@)">
            <summary>
            Digs through a nested succession of (non-static) fields or properties of a given class to get a member's value.
            </summary>
            <typeparam name="T">Type of the value to obtain.</typeparam>
            <param name="instance">Top level class to start digging through.</param>
            <param name="nestedNames">Succession of member names at each level of the dig.</param>
            <param name="result">Deepest member's value.</param>
            <returns>`true` if member is found.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.SetDeep(System.Object,System.String,System.Object)">
            <summary>
            Digs through a nested succession of (non-static) fields or properties of a given class to set a member's value.
            </summary>
            <param name="instance">Top level class to start digging through.</param>
            <param name="concatenatedNames">Succession of member names at each level of the dig.</param>
            <param name="value"></param>
            <returns>`true` if member is found.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.SetDeep(System.Object,System.String[],System.Object)">
            <summary>
            Digs through a nested succession of (non-static) fields or properties of a given class to set a member's value.
            </summary>
            <param name="instance">Top level class to start digging through.</param>
            <param name="nestedNames">Succession of member names at each level of the dig.</param>
            <param name="newValue"></param>
            <returns>`true` if member is found.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.SafeCall(System.Reflection.MethodInfo,System.Object,System.Object[])">
            <summary>
            Invokes a method, first validating the supplied parameters for type consistency.
            </summary>
            <param name="method">Reflected method to invoke.</param>
            <param name="methodContext">Object instance containing of the given method. Use `null` for static methods.</param>
            <param name="args">Parameters to pass to the given method.</param>
            <returns>Results from invoking the method.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.RunMethod``1(System.Object,System.String,System.Object[],``0@)">
            <summary>
            Invokes a method of a given class.
            </summary>
            <typeparam name="T">Invoked method's return value type.</typeparam>
            <param name="instance">Class instance of class of method.</param>
            <param name="methodName">Method's name.</param>
            <param name="args">Method's arguments (will be validated before invoking).</param>
            <param name="returnVal">Return value of method.</param>
            <returns>`true` if method found and invoked successfully.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.RunMethod``1(System.Type,System.Object,System.String,System.Object[],``0@)">
            <summary>
            Invokes a method of a given class. May invoke static methods if the given `instance` parameter is `null`.
            </summary>
            <typeparam name="T">Invoked method's return value type.</typeparam>
            <param name="classType">Class type of method.</param>
            <param name="instance">Class instance of class of method. Use `null` for static methods.</param>
            <param name="methodName">Method's name.</param>
            <param name="args">Method's arguments (will be validated before invoking).</param>
            <param name="returnVal">Return value of method.</param>
            <returns>`true` if method found and invoked successfully.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.RunMethod``1(System.Type,System.Object,System.String,System.Object[],System.Type[],``0@)">
            <summary>
            Invokes a method of a given class. May invoke static methods if the given `instance` parameter is `null`.
            </summary>
            <typeparam name="T">Invoked method's return value type.</typeparam>
            <param name="classType">Class type of method.</param>
            <param name="instance">Class instance of class of method. Use `null` for static methods.</param>
            <param name="methodName">Method's name.</param>
            <param name="args">Method's arguments (will be validated before invoking).</param>
            <param name="generics">Generic type parameters (if applicable).</param>
            <param name="returnVal">Return value of method.</param>
            <returns>`true` if method found and invoked successfully.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.GetTypeFromAssembly(System.String,System.String)">
            <summary>
            Gets a class's type by it's proper name from a given assembly.
            </summary>
            <param name="assemblyName"></param>
            <param name="namespaceAndClassName"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.GetTypesFromAssembly(System.String,System.String)">
            <summary>
            Gets all types from a given assembly using a given class name.
            </summary>
            <param name="assemblyName"></param>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.GetTypesFromAssembly(System.Reflection.Assembly,System.String)">
            <summary>
            Gets all types from a given assembly using a given class name.
            </summary>
            <param name="assembly"></param>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
            <summary>
            Gets all types from a given assembly using a given (namespaced) class name.
            </summary>
            <param name="assembly"></param>
            <param name="namespacedType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.GetAllAvailableSubTypesFromMods(System.Type)">
            <summary>
            Gets all available sub-types (immediate sub-classes) of a given parent type from each loaded mod.
            </summary>
            <param name="parentType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Reflection.ReflectionHelpers.GetAllAvailableSubTypesFromAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Type)">
            <summary>
            Gets all available sub-types (immedaite sub-classes) of a given parent type from each assembly.
            </summary>
            <param name="asses"></param>
            <param name="parentType"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.StreamHelpers">
            <summary>
            Assorted static "helper" functions pertaining to basic stream IO.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.StreamHelpers.ToStream(System.Byte[],System.IO.Stream)">
            <summary>
            Pumps a byte array to a stream (with compression).
            </summary>
            <param name="src"></param>
            <param name="destStream"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.StreamHelpers.ToStream(System.String,System.IO.Stream)">
            <summary>
            Pumps a string to a stream (with compression).
            </summary>
            <param name="src"></param>
            <param name="destStream"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.StreamHelpers.FromStreamToBytes(System.IO.Stream)">
            <summary>
            Pulls a byte array from a compressed stream.
            </summary>
            <param name="srcStream"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.StreamHelpers.FromStreamToString(System.IO.Stream)">
            <summary>
            Pulls a string from a compressed stream.
            </summary>
            <param name="srcStream"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.SystemHelpers">
            <summary>
            Assorted static "helper" functions pertaining to system-level functions.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.SystemHelpers.TimeStamp">
            <summary>
            Returns a timestamp spanning between 1970 and the present.
            </summary>
            <returns>The time span.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.SystemHelpers.TimeStampInSeconds">
            <summary>
            Returns a timestamp measured in seconds spanning between 1970 and the present.
            </summary>
            <returns>Seconds of the time span.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.SystemHelpers.OpenUrl(System.String)">
            <summary>
            Opens a given URL with the OS default program (typically your default web browser).
            </summary>
            <param name="url">URL to open.</param>
        </member>
        <member name="T:HamstarHelpers.Helpers.DotNET.Threading.TaskLauncher">
            <summary>
            Assorted static "helper" functions pertaining to threading.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.DotNET.Threading.TaskLauncher.Run(System.Action{System.Threading.CancellationToken})">
            <summary>
            Runs a given function (via. Task.Run), supplying it with the cancellation token used when mods are unloaded. Also handles
            waiting for the thread to close on mod unload.
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Draw.DrawHelpers">
            <summary>
            Assorted static "helper" functions pertaining to drawing to the screen. 
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to drawing to the screen. 
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Draw.DrawHelpers.DrawBorderedRect(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32)">
            <summary>
            Draws a bordered rectangle.
            </summary>
            <param name="sb">The spriteBatch to draw to. Typically `Main.spriteBatch`.</param>
            <param name="bgColor">Fill color.</param>
            <param name="borderColor"></param>
            <param name="position"></param>
            <param name="size"></param>
            <param name="borderWidth"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Draw.DrawHelpers.DrawBorderedRect(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Rectangle,System.Int32)">
            <summary>
            Draws a bordered rectangle.
            </summary>
            <param name="sb">The spriteBatch to draw to. Typically `Main.spriteBatch`.</param>
            <param name="bgColor">Fill color.</param>
            <param name="borderColor"></param>
            <param name="rect">Position and dimensions of rectangle.</param>
            <param name="borderWidth"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Draw.DrawHelpers.DrawBorderedRect(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{Microsoft.Xna.Framework.Color},System.Nullable{Microsoft.Xna.Framework.Color},Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32)">
            <summary>
            Draws a rectangle with an optional border or optional fill color.
            </summary>
            <param name="sb">The spriteBatch to draw to. Typically `Main.spriteBatch`.</param>
            <param name="bgColor">Fill color. Use `null` for transparent.</param>
            <param name="borderColor">Border color. User `null for transparent.</param>
            <param name="position"></param>
            <param name="size"></param>
            <param name="borderWidth"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Draw.DrawHelpers.DrawBorderedRect(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{Microsoft.Xna.Framework.Color},System.Nullable{Microsoft.Xna.Framework.Color},Microsoft.Xna.Framework.Rectangle,System.Int32)">
            <summary>
            Draws a rectangle with an optional border or optional fill color.
            </summary>
            <param name="sb">The spriteBatch to draw to. Typically `Main.spriteBatch`.</param>
            <param name="bgColor">Fill color. Use `null` for transparent.</param>
            <param name="borderColor">Border color. User `null for transparent.</param>
            <param name="rect">Position and dimensions of rectangle.</param>
            <param name="borderWidth"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Draw.DrawHelpers.DrawTerrariaString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Draws a "Terraria style" string, complete with pulsing and black border.
            </summary>
            <param name="sb"></param>
            <param name="text"></param>
            <param name="pos"></param>
            <param name="scale"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Draw.DrawHelpers.AddPostDrawTilesAction(System.Func{System.Boolean})">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.Dusts.DustHelpers">
            <summary>
            Assorted static "helper" functions pertaining to dusts.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Dusts.DustHelpers.IsActive(System.Int32)">
            <summary>
            Indicates if the given dust (in `Main.dust`) is active.
            </summary>
            <param name="who"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Dusts.DustHelpers.GetActive">
            <summary>
            Gets all active dusts (from `Main.dust`).
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Entities.EntityHelpers">
            <summary>
            Assorted static "helper" functions pertaining to `Entity`s (parent class of Item, NPC, Player, and Projectile).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Entities.EntityHelpers.GetVanillaSnapshotHash(Terraria.Entity,System.Boolean)">
            <summary>
            Gets a hash value to attempt to uniquely identify a given entity. Not recommended if the specific entity's
            `GetVanillaSnapshotHash(...)` (via. the respective Helper) is available.
            </summary>
            <param name="ent">Entity to attempt to identify.</param>
            <param name="noContext">Omits `whoAmI`.</param>
            <returns>The identifying hash of the entity.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Entities.EntityHelpers.ApplyForce(Terraria.Entity,Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean)">
            <summary>
            Applies a given amount of force to the given entity from a given outside point.
            </summary>
            <param name="ent">Entity being acted upon.</param>
            <param name="worldPosFrom">Source of force.</param>
            <param name="force">Amount of force.</param>
            <param name="sync">Indicates whether to sync the entity in multiplayer.</param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Entities.EntityHelpers.SimpleLineOfSight(Microsoft.Xna.Framework.Vector2,Terraria.Entity,HamstarHelpers.Classes.Tiles.TilePattern.TilePattern)">
            <summary>
            Attempts a basic trace to see if a given entity is visible from a given point by line of sight (no obstructing tiles).
            </summary>
            <param name="position"></param>
            <param name="ent"></param>
            <param name="blockingTilePatten"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Entities.EntityHelpers.GetQualifiedName(Terraria.Entity)">
            <summary>
            Gets the "qualified" name (the name the player sees) of a given entity.
            </summary>
            <param name="ent"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Entities.EntityInfoHelpers">
            <summary>
            Assorted static "helper" functions pertaining to entity info.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Entities.EntityInfoHelpers.GetNpcInfo(System.Int32)">
            <summary>
            Generates a table of field and property defaults of a given NPC type.
            </summary>
            <param name="npcType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Entities.EntityInfoHelpers.GetItemInfo(System.Int32)">
            <summary>
            Generates a table of field and property defaults of a given Item type.
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Entities.EntityInfoHelpers.GetProjectileInfo(System.Int32)">
            <summary>
            Generates a table of field and property defaults of a given Projectile type.
            </summary>
            <param name="projType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Entities.EntityInfoHelpers.GetAllNpcInfo">
            <summary>
            Generates a table of tables of field and property defaults of each given NPC type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Entities.EntityInfoHelpers.GetAllItemInfo">
            <summary>
            Generates a table of tables of field and property defaults of each given Item type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Entities.EntityInfoHelpers.GetAllProjectileInfo">
            <summary>
            Generates a table of tables of field and property defaults of each given Projectile type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Fx.CameraHelpers">
            <summary>
            Assorted static "helper" functions pertaining to basic camera movement.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Fx.CameraHelpers.ApplyOffset(System.Int32,System.Int32)">
            <summary>
            Shifts the camers from its current position by the given offset.
            </summary>
            <param name="offsetX"></param>
            <param name="offsetY"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Fx.CameraHelpers.GetOffset">
            <summary>
            Gets any camera shift offset amount.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Fx.CameraHelpers.ApplyShake(System.Single,System.Int32)">
            <summary>
            Applies a shaking motion to the camera.
            </summary>
            <param name="magnitude"></param>
            <param name="tickDuration"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Fx.CameraHelpers.GetShakeDuration">
            <summary>
            Gets the duration of any current shaking.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Fx.CameraHelpers.MoveTo(System.Int32,System.Int32)">
            <summary>
            Positions the camera statically somewhere in the world.
            </summary>
            <param name="worldLeft"></param>
            <param name="worldTop"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Fx.CameraHelpers.HamstarHelpers#Classes#Loadable#ILoadable#OnModsLoad">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Fx.CameraHelpers.HamstarHelpers#Classes#Loadable#ILoadable#OnModsUnload">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Fx.CameraHelpers.HamstarHelpers#Classes#Loadable#ILoadable#OnPostModsLoad">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.Fx.LightningFxHelpers">
            <summary>
            Assorted static "helper" functions pertaining to visual effects.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Fx.LightningFxHelpers.DrawLightning(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a lightning effect. Must be called in a Draw function.
            </summary>
            <param name="wldStartPos"></param>
            <param name="wldEndPos"></param>
            <param name="scale"></param>
            <param name="color"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Fx.LightningFxHelpers.DrawScreenLightning(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a lightning effect relative to the screen. Must be called in a Draw function.
            </summary>
            <param name="screenStartPos"></param>
            <param name="screenEndPos"></param>
            <param name="scale"></param>
            <param name="color"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.Fx.ParticleFxHelpers">
            <summary>
            Assorted static "helper" functions pertaining to visual particle and dust effects.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Fx.ParticleFxHelpers.MakeDustCloud(Microsoft.Xna.Framework.Vector2,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a dust cloud.
            </summary>
            <param name="position"></param>
            <param name="quantity">Dust particles.</param>
            <param name="sprayAmount">Outward spray velocity.</param>
            <param name="scale"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Fx.ParticleFxHelpers.MakeFireEmbers(Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Creates fire embers.
            </summary>
            <param name="position"></param>
            <param name="smallEmbers"></param>
            <param name="largeEmbers"></param>
            <param name="pouringEmbers"></param>
            <param name="floaters"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="scale"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Fx.ParticleFxHelpers.MakeTeleportFx(Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Creates teleportation particles.
            </summary>
            <param name="position"></param>
            <param name="quantity">Dust particles.</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="scale"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.ParticleFx.ParticleFxHelpers">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.ParticleFx.ParticleFxHelpers.MakeDustCloud(Microsoft.Xna.Framework.Vector2,System.Int32,System.Single,System.Single)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.ParticleFx.ParticleFxHelpers.MakeFireEmbers(Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.ParticleFx.ParticleFxHelpers.MakeTeleportFx(Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Int32,System.Single)">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.HUD.HUDElementHelpers">
            <summary>
            Assorted static "helper" functions pertaining to in-game HUD elements. 
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDElementHelpers.GetVanillaHealthDisplayScreenPosition">
            <summary>
            Top left screen position of player's health.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDElementHelpers.GetVanillaAccessorySlotScreenPosition(System.Int32)">
            <summary>
            Top left screen position of player's accessories.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.HUD.HUDHealthBarHelpers">
            <summary>
            Assorted static "helper" functions pertaining to the HUD health bar. 
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDHealthBarHelpers.GetTopHeartPosition(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Gets the screen coordinates of the last non-empty heart in the vanilla life bar.
            </summary>
            <param name="life">Life value of the life bar.</param>
            <param name="x">Horizontal screen coordinate.</param>
            <param name="y">Vertical screen coordinate.</param>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDHealthBarHelpers.GetHealthBarColor(System.Int32,System.Int32,System.Single)">
            <summary>
            Color of an entity's health bar with the given HP and max HP.
            </summary>
            <param name="hp"></param>
            <param name="maxHp"></param>
            <param name="alpha">Alpha value. Multiplies RGBA for multiply-based opacity.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDHealthBarHelpers.MeasureHealthText(System.String)">
            <summary>
            Returns dimensions of a string representing a health value.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDHealthBarHelpers.DrawHealthText(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,System.Single,System.Int32,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a given health value at a given position and color.
            </summary>
            <param name="sb">The spriteBatch to draw to. Typically `Main.spriteBatch`.</param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="hp"></param>
            <param name="color"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDHealthBarHelpers.DrawHealthBar(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,System.Single,System.Int32,System.Int32,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws a health bar at a given position, color, and scale.
            </summary>
            <param name="sb">The spriteBatch to draw to. Typically `Main.spriteBatch`.</param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="hp"></param>
            <param name="maxHp"></param>
            <param name="color"></param>
            <param name="scale"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.HUD.HUDHelpers">
            <summary>
            Assorted static "helper" functions pertaining to general HUD. 
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDHelpers.DrawBorderedRect(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDHelpers.DrawBorderedRect(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Rectangle,System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDHelpers.DrawBorderedRect(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{Microsoft.Xna.Framework.Color},System.Nullable{Microsoft.Xna.Framework.Color},Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDHelpers.DrawBorderedRect(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{Microsoft.Xna.Framework.Color},System.Nullable{Microsoft.Xna.Framework.Color},Microsoft.Xna.Framework.Rectangle,System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDHelpers.DrawTerrariaString(System.String,Microsoft.Xna.Framework.Vector2,System.Single)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDHelpers.DrawTerrariaString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Vector2,System.Single)">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.HUD.HUDMapHelpers">
            <summary>
            Assorted static "helper" functions pertaining to the HUD map. 
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDMapHelpers.GetFullMapScreenPosition(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Returns a screen position of a given world position as if projected onto the fullscreen map.
            </summary>
            <param name="worldPosition"></param>
            <returns>A tuple indicating the screen-relative position and whether the point is within the screen
            boundaries.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDMapHelpers.GetFullMapScreenPosition(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Returns a screen position of a given world position as if projected onto the fullscreen map.
            </summary>
            <param name="worldPosition"></param>
            <returns>A tuple indicating the screen-relative position and whether the point is within the screen
            boundaries.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDMapHelpers.GetOverlayMapScreenPosition(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Returns a screen position of a given world position as if projected onto the overlay map.
            </summary>
            <param name="worldPosition"></param>
            <returns>A tuple indicating the screen-relative position and whether the point is within the screen
            boundaries.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDMapHelpers.GetOverlayMapScreenPosition(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Returns a screen position of a given world position as if projected onto the overlay map.
            </summary>
            <param name="worldPosition"></param>
            <returns>A tuple indicating the screen-relative position and whether the point is within the screen
            boundaries.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDMapHelpers.GetMiniMapScreenPosition(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Returns a screen position of a given world position as if projected onto the mini-map.
            </summary>
            <param name="worldPosition"></param>
            <returns>A tuple indicating the screen-relative position and whether the point is within the screen
            boundaries.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDMapHelpers.GetMiniMapScreenPosition(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Returns a screen position of a given world position as if projected onto the mini-map.
            </summary>
            <param name="worldPosition"></param>
            <returns>A tuple indicating the screen-relative position and whether the point is within the screen
            boundaries.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDMapHelpers.GetSizeOnFullMap(System.Single,System.Single)">
            <summary>
            Gets the scaled dimensions of a given width and height as if projectected onto the full screen map.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDMapHelpers.GetSizeOnOverlayMap(System.Single,System.Single)">
            <summary>
            Gets the scaled dimensions of a given width and height as if projectected onto the overlay map.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDMapHelpers.GetSizeOnMinimap(System.Single,System.Single)">
            <summary>
            Gets the scaled dimensions of a given width and height as if projectected onto the mini-map.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.HUD.HUDMapHelpers.GetFullscreenMapTileOfScreenPosition(System.Int32,System.Int32,System.ValueTuple{System.Int32,System.Int32}@)">
            <summary>
            Outputs the world tile position of a given screen position in the fullscreen map.
            </summary>
            <param name="scrPosX"></param>
            <param name="scrPosY"></param>
            <param name="tilePos"></param>
            <returns>`true` if the tile is within world bounds.</returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Info.FormattedGameInfoHelpers">
            <summary>
            Assorted static "helper" functions pertaining to game information formatted for output
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to game information formatted for output.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Info.FormattedGameInfoHelpers.GetFormattedGameInfo(System.Collections.Generic.IEnumerable{Terraria.ModLoader.Mod})">
            <summary>
            Gets a list of assorted game data statistics, formatted for (markdown) output.
            </summary>
            <param name="mods">Mods to display in this list. Typically only the set of loaded mods (ModLoader.Mods`).</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Info.FormattedGameInfoHelpers.RenderMarkdownModTable(System.String[])">
            <summary>
            Renders a list of mod names into a markdown table.
            </summary>
            <param name="mods"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Info.FormattedGameInfoHelpers.RenderMarkdownPlayersTable">
            <summary>
            Renders a list of players into a markdown table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Info.FormattedGameInfoHelpers.RenderMarkdownPlayerEquipsTable(Terraria.Player)">
            <summary>
            Renders a list of players with their body equips into a markdown table.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Info.GameInfoHelpers">
            <summary>
            Assorted static "helper" functions pertaining to game information.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Info.GameInfoHelpers.GetVanillaProgress">
            <summary>
            Gets the current world's (vanilla) progress stage in human-readable form.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Info.GameInfoHelpers.GetVanillaProgressList">
            <summary>
            Gets a list of all (vanilla) bosses killed in a human-readable form.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Info.GameInfoHelpers.GetCurrentVanillaEvents">
            <summary>
            Gets a list of currently active (vanilla) world events.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Info.GameInfoHelpers.GetPlayerInfo(Terraria.Player)">
            <summary>
            Gets a formatted collection of basic player statistics.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Info.GameInfoHelpers.GetPlayerEquipment(Terraria.Player)">
            <summary>
            Gets a formatted collection of a player's body equipment.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Info.GameInfoHelpers.GetAveragePingOfServer">
            <summary>
            Gets the server's current (averaged) ping.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Info.GameInfoHelpers.GetErrorLog(System.Int32)">
            <summary>
            Gets the most recent error logs into a list.
            </summary>
            <param name="maxLines">Highest amount of lines of the log to return.</param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Items.Attributes.ItemAttributeHelpers">
            <summary>
            Assorted static "helper" functions pertaining to gameplay attributes of items.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to gameplay attributes of items.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.Attributes.ItemAttributeHelpers.DisplayNamesToIds">
            <summary>
            Table of item ids by qualified names.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.Attributes.ItemAttributeHelpers.GetQualifiedName(Terraria.Item)">
            <summary>
            Gets an item's qualified (human readable) name.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.Attributes.ItemAttributeHelpers.GetQualifiedName(System.Int32)">
            <summary>
            Gets an item's qualified (human readable) name.
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.Attributes.ItemAttributeHelpers.IsPenetrator(Terraria.Item)">
            <summary>
            Indicates an item produces a penetrating projectile.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.Attributes.ItemAttributeHelpers.IsTool(Terraria.Item)">
            <summary>
            Indicates an item is a tool.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.Attributes.ItemAttributeHelpers.IsArmor(Terraria.Item)">
            <summary>
            Indicates an item is an armor piece.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.Attributes.ItemAttributeHelpers.IsGrapple(Terraria.Item)">
            <summary>
            Indicates an item is a grapple item.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.Attributes.ItemAttributeHelpers.IsYoyo(Terraria.Item)">
            <summary>
            Indicates an item is a type of yoyo.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.Attributes.ItemAttributeHelpers.IsGameplayRelevant(Terraria.Item,System.Boolean,System.Boolean)">
            <summary>
            Indicates an item is "gameplay relevant" (not vanity, passive, or purely cosmetic).
            </summary>
            <param name="item"></param>
            <param name="toysRelevant">"Toy" items are counted as gameplay relevant.</param>
            <param name="junkRelevant">"Junk" items are counted as gameplay relevant.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.Attributes.ItemAttributeHelpers.LooselyAppraise(Terraria.Item)">
            <summary>
            "Appraises" an item's "value" based on its sell value and rarity, as if to rank items by a general metric (loosely).
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.Attributes.ItemAttributeHelpers.GetVanillaContainerContext(Terraria.Item)">
            <summary>
            Gets the context name of a container item (bag, box, present, etc.).
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.Attributes.ItemAttributeHelpers.FindItemsByValue(System.Int64,System.Boolean)">
            <summary>
            Finds all item types of a given sell value.
            </summary>
            <param name="buyValue"></param>
            <param name="includeCoins">Includes coin items (defaults to `false`).</param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName">
            <summary>
            A type of common vanilla tooltip.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.ItemName">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Favorite">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.FavoriteDesc">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Social">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.SocialDesc">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Damage">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.CritChance">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Speed">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Knockback">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.FishingPower">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.NeedsBait">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.BaitPower">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Equipable">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.WandConsumes">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Quest">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Vanity">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Defense">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.PickPower">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.AxePowe">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.HammerPower">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.TileBoost">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.HealLife">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.HealMana">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.UseMana">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Placeable">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Ammo">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Consumable">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Material">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Tooltip">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.EtherianManaWarning">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.WellFedExpert">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.BuffTime">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.OneDropLogo">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.PrefixDamage">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.PrefixSpeed">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.PrefixCritChance">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.PrefixUseMana">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.PrefixSize">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.PrefixShootSpeed">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.PrefixKnockback">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.PrefixAccDefense">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.PrefixAccMaxMana">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.PrefixAccCritChance">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.PrefixAccDamage">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.PrefixAccMoveSpeed">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.PrefixAccMeleeSpeed">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.SetBonus">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Expert">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.SpecialPrice">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName.Price">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.Items.Attributes.ItemInformationAttributeHelpers">
            <summary>
            Assorted static "helper" functions pertaining to information attributes of items (e.g. tooltips).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.Attributes.ItemInformationAttributeHelpers.ApplyTooltipAt(System.Collections.Generic.IList{Terraria.ModLoader.TooltipLine},Terraria.ModLoader.TooltipLine,HamstarHelpers.Helpers.Items.Attributes.VanillaTooltipName,System.Boolean)">
            <summary>
            Convenience function (meant to be called in any ModifyTooltips hook) add a tooltip to an item in a specific
            position. Adapts to item context.
            </summary>
            <param name="tooltips"></param>
            <param name="tip"></param>
            <param name="insertAt"></param>
            <param name="insertAfter"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.Attributes.ItemInformationAttributeHelpers.ApplyTooltipAt(System.Collections.Generic.IList{Terraria.ModLoader.TooltipLine},Terraria.ModLoader.TooltipLine,System.String,System.Boolean)">
            <summary>
            Convenience function (meant to be called in any ModifyTooltips hook) add a tooltip to an item in a specific
            position. Adapts to item context.
            </summary>
            <param name="tooltips"></param>
            <param name="tip"></param>
            <param name="insertAt"></param>
            <param name="insertAfter"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Items.Attributes.ItemRarityAttributeHelpers">
            <summary>
            Assorted static "helper" functions pertaining to the "rarity" attribute of items.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.ItemRarityAttributeHelpers.HighestVanillaRarity">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.ItemRarityAttributeHelpers.JunkRarity">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.ItemRarityAttributeHelpers.QuestItemRarity">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.ItemRarityAttributeHelpers.RarityColor">
            <summary>
            The color values corresponding to each vanilla rarity type.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.ItemRarityAttributeHelpers.RarityColorText">
            <summary>
            The color name of each vanilla rarity type.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Items.Attributes.ItemRarityAttributeHelpers.RarityLabel">
            <summary>
            The game context of each vanilla rarity.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.Items.ItemFinderHelpers">
            <summary>
            Assorted static "helper" functions pertaining to finding items in collections.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemFinderHelpers.FindIndexOfFirstOfItemInCollection(Terraria.Item[],System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Finds index of the first valid item of a set of item types within a given collection.
            </summary>
            <param name="collection"></param>
            <param name="itemTypes"></param>
            <returns>Index within the given collection.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemFinderHelpers.FindIndexOfEach(Terraria.Item[],System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Finds each valid item of a set of item types within a given collection.
            </summary>
            <param name="collection"></param>
            <param name="itemTypes"></param>
            <returns>Set of indices within the given collection.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemFinderHelpers.FindIndexOfEach(System.Collections.Generic.IDictionary{System.Int32,Terraria.Item},System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Finds each valid item of a set of item types within a given collection.
            </summary>
            <param name="indexedCollection"></param>
            <param name="itemTypes"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemFinderHelpers.CountTotalOfEach(Terraria.Item[],System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Counts total valid items of a set of item types within a given collection.
            </summary>
            <param name="collection"></param>
            <param name="itemTypes"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemFinderHelpers.FilterByTypes(System.Collections.Generic.IDictionary{System.Int32,System.Collections.Generic.KeyValuePair{System.Int32,System.Int32}},System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Filters a given collection of item types (mapped typically to inventory indices) by a set of filter types.
            </summary>
            <param name="entries">Collection to build a filtered collection from. Keys are typically inventory indices, values are
            item types and stack sizes.</param>
            <param name="types">Item types to filter by.</param>
            <returns>A new collection (of the same format as the parameter), filtered by the given filter set.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemFinderHelpers.FindFirstPlayerItemOfType(Terraria.Player,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Finds first item of a given type belonging to a player (including their bank storage).
            </summary>
            <param name="player"></param>
            <param name="itemType"></param>
            <param name="skipArmors"></param>
            <param name="skipBanks"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemFinderHelpers.FindChanges(Terraria.Item[],Terraria.Item[],System.Boolean)">
            <summary>
            Finds changes between 2 same-sized arrays of items.
            </summary>
            <param name="prevItems"></param>
            <param name="currItems"></param>
            <param name="skipCoins"></param>
            <returns>Set of array indices of changed items between the 2 collections. Mapped to a "direction" indicator of
            changes.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemFinderHelpers.FindPossiblePurchaseTypes(Terraria.Item[],System.Int64)">
            <summary>
            Finds all items of a given array with a given buy value.
            </summary>
            <param name="items"></param>
            <param name="buyValue"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Items.ItemGroupDefinition">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupDefinition.GroupName">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupDefinition.Group">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemGroupDefinition.#ctor(System.String,System.Collections.Generic.ISet{System.Int32})">
            <summary></summary>
            <param name="groupName"></param>
            <param name="group"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers">
            <summary>
            Assorted static "helper" functions pertaining to item identification.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.GetCommonItemGroups">
            <summary>
            Gets a set of "common" item groups (i.e. for RecipeGroup use).
            </summary>
            <returns>Group names mapped to group description and a set of item ids.</returns>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.MobBanners">
            <summary>
            All NPC banner items.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.VanillaRecordedMusicBoxes">
            <summary>
            All vanilla recorded music boxes.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.EvilBiomeBossDrops">
            <summary>
            The special drops of each "evil" biome (Eater of Worlds and Brain of Cthulhu).
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.EvilBiomeLightPets">
            <summary>
            Each type of "evil" biome-originating light-emitting pet (Crimson Heart and Shadow Orb).
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.MagicMirrors">
            <summary>
            Each vanilla variant of a Magic Mirror.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.WarpPotions">
            <summary>
            Each potion that performs non-random player warping.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.VanillaAnimals">
            <summary>
            Each vanilla passive animal type.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.VanillaBugs">
            <summary>
            Each vanilla passive bug type (including the Truffle Worm).
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.VanillaButterflies">
            <summary>
            Each banilla butterfly type.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.VanillaGoldCritters">
            <summary>
            Each vanilla gold critter variant.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.VanillaAlchemyHerbs">
            <summary>
            Each vanilla alchemy herb.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.VanillaStrangePlants">
            <summary>
            Each vanilla 'strange plant'.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.AllPressurePlates">
            <summary>
            All pressure plates.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.WeightPressurePlates">
            <summary>
            All weighted pressure plates.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.ConveyorBeltPair">
            <summary>
            All conveyor belts.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.Paints">
            <summary>
            All paints cans.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.VanillaDyes">
            <summary>
            All vanilla dyes.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemGroupIdentityHelpers.GetVanillaContainerItemTypes(System.String)">
            <summary>
            Gets all vanilla item types of a given "container context".
            </summary>
            <param name="context">Contexts include: bossBag, crate, herbBag, goodieBag, lockBox, present</param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Items.ItemHelpers">
            <summary>
            Assorted static functions pertaining to general use of item.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemHelpers.GetActive">
            <summary>
            Get all active items found lying around in the world.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemHelpers.CreateItem(Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a world item and ensures it syncs.
            </summary>
            <param name="pos"></param>
            <param name="type"></param>
            <param name="stack"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemHelpers.DestroyItem(Terraria.Item)">
            <summary>
            Destroyes an item (turns it to air). No sync.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemHelpers.DestroyWorldItem(System.Int32)">
            <summary>
            Destroys a world item (ensures sync).
            </summary>
            <param name="idx"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemHelpers.ReduceStack(Terraria.Item,System.Int32)">
            <summary>
            Reduces an item's stack, accommodating if it's held in the mouse, if the stack becomes 0, and any needed sync.
            </summary>
            <param name="item"></param>
            <param name="amt"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemHelpers.ReduceWorldItemStack(System.Int32,System.Int32)">
            <summary>
            Reduces a world item's stack.
            </summary>
            <param name="idx">Index (`whoAmI`) of item in `Main.item`.</param>
            <param name="amt"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemHelpers.ConsumeItems(System.Collections.Generic.IEnumerable{Terraria.Item},System.Collections.Generic.IDictionary{System.Int32,System.Int32},System.Boolean)">
            <summary>
            Consumes a quantity of items (by type) from a given item source. Does not sync item changes.
            </summary>
            <param name="sourceItems"></param>
            <param name="consumeAmounts"></param>
            <param name="allOrNothing">Consumes the given amount of items only if all of them are present.</param>
            <returns>`true` if all items consumed in full.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemHelpers.CalculateStandardUseTime(Terraria.Item)">
            <summary>
            Calculates the "use time" of an item, accounting for non-melee `reuseDelay` and items that incur "reuse" via.
            animations instead of the internal `useTime` value.
            </summary>
            <param name="item"></param>
            <returns>Tick duration between reuses.</returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Items.ItemIdentityHelpers">
            <summary>
            Assorted static "helper" functions pertaining to item identification.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to item identification.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemIdentityHelpers.GetUniqueKeySegs(System.Int32)">
            <summary>
            Gets a (human readable) unique key (as segments) from a given item type.
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemIdentityHelpers.GetVanillaSnapshotHash(Terraria.Item,System.Boolean,System.Boolean)">
            <summary>
            Generates a hash value to uniquely identify a (vanilla) item instance by its field values.
            </summary>
            <param name="item"></param>
            <param name="noContext">Omits `owner`, `netID`, and `favorited` fields.</param>
            <param name="minimal">Uses only the item's unique ID (`GetUniqueKey(...)`), `prefix`, and `stack`.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.ItemIdentityHelpers.GetItemDefinition(System.String)">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.Items.MusicBoxHelpers">
            <summary>
            Assorted static "helper" functions pertaining to music box items.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.MusicBoxHelpers.GetVanillaMusicBoxItemIds">
            <summary>
            Gets a set of all vanilla music box item ids.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Items.MusicBoxHelpers.GetMusicTypeOfVanillaMusicBox(System.Int32)">
            <summary>
            Gets the "music type" (internal identifier) of a given vanilla music box by its item id.
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Misc.MiscHelpers">
            <summary>
            Assorted static "helper" misc. functions.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Misc.MiscHelpers.RenderMoney(System.Int32)">
            <summary>
            Generates an English-formatted string indicating an amount of money.
            </summary>
            <param name="money"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Misc.ModCustomDataFileHelpers">
            <summary>
            Assorted static "helper" functions pertaining to file IO for mod custom data.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to file IO for mod custom data.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to file IO for mod custom data.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Misc.ModCustomDataFileHelpers.BaseFolder">
            <summary>
            ModLoader subfolder where custom mod data is stored.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Misc.ModCustomDataFileHelpers.GetRelativeDirectoryPath(Terraria.ModLoader.Mod)">
            <summary>
            Gets the custom data folder of a mod, relative to the ModLoader folder.
            </summary>
            <param name="mod"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Misc.ModCustomDataFileHelpers.GetFullDirectoryPath(Terraria.ModLoader.Mod)">
            <summary>
            Gets the full system directory of a mod's custom data folder.
            </summary>
            <param name="mod"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Misc.ModCustomDataFileHelpers.GetFullPath(Terraria.ModLoader.Mod,System.String)">
            <summary>
            Gets the full system directory and path of a given custom data file of a mod.
            </summary>
            <param name="mod"></param>
            <param name="fileNameHasExt"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Misc.ModCustomDataFileHelpers.LoadJson``1(Terraria.ModLoader.Mod,System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Loads a custom data JSON file of a given mod.
            </summary>
            <typeparam name="T">Object type to deserialize from JSON into.</typeparam>
            <param name="mod"></param>
            <param name="fileNameNoExt"></param>
            <param name="jsonSettings"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Misc.ModCustomDataFileHelpers.LoadJson``1(Terraria.ModLoader.Mod,System.String)">
            <summary>
            Loads a custom data JSON file of a given mod.
            </summary>
            <typeparam name="T">Object type to deserialize from JSON into.</typeparam>
            <param name="mod"></param>
            <param name="fileNameNoExt"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Misc.ModCustomDataFileHelpers.LoadBinaryJson``1(Terraria.ModLoader.Mod,System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Loads a binary custom data JSON file of a given mod.
            </summary>
            <typeparam name="T">Object type to deserialize from JSON into.</typeparam>
            <param name="mod"></param>
            <param name="fileNameWithExt"></param>
            <param name="jsonSettings"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Misc.ModCustomDataFileHelpers.LoadBinaryJson``1(Terraria.ModLoader.Mod,System.String)">
            <summary>
            Loads a binary custom data JSON file of a given mod.
            </summary>
            <typeparam name="T">Object type to deserialize from JSON into.</typeparam>
            <param name="mod"></param>
            <param name="fileNameHasExt"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Misc.ModCustomDataFileHelpers.SaveAsJson``1(Terraria.ModLoader.Mod,System.String,Newtonsoft.Json.JsonSerializerSettings,System.Boolean,``0)">
            <summary>
            Saves a custom mod data JSON file.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mod"></param>
            <param name="fileNameNoExt"></param>
            <param name="jsonSettings"></param>
            <param name="overrides">Replaces any existing files.</param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Misc.ModCustomDataFileHelpers.SaveAsJson``1(Terraria.ModLoader.Mod,System.String,System.Boolean,``0)">
            <summary>
            Saves a custom mod data JSON file.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mod"></param>
            <param name="fileNameNoExt"></param>
            <param name="overrides">Replaces any existing files.</param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Misc.ModCustomDataFileHelpers.SaveAsBinaryJson``1(Terraria.ModLoader.Mod,System.String,Newtonsoft.Json.JsonSerializerSettings,System.Boolean,``0)">
            <summary>
            Saves a custom mod data JSON file in binary form.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mod"></param>
            <param name="fileNameWithExt"></param>
            <param name="jsonSettings"></param>
            <param name="overrides">Replaces any existing files.</param>
            <param name="data"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Misc.ModCustomDataFileHelpers.SaveAsBinaryJson``1(Terraria.ModLoader.Mod,System.String,System.Boolean,``0)">
            <summary>
            Saves a custom mod data JSON file in binary form.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mod"></param>
            <param name="fileNameWithExt"></param>
            <param name="overrides">Replaces any existing files.</param>
            <param name="data"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.Misc.MusicHelpers">
            <summary>
            Assorted static "helper" functions pertaining to game music.
            </summary>
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Misc.MusicHelpers.SetVolumeScale(System.Single)">
            <summary>
            Adjusts the volume scale for the currently playing music.
            </summary>
            <param name="scale"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.Misc.PaintHelpers">
            <summary>
            Assorted static "helper" functions pertaining to game music.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Misc.PaintHelpers.GetNearestPaintType(Microsoft.Xna.Framework.Color)">
            <summary>
            Gets a paint type of the color with the nearest approximation of the given color.
            </summary>
            <param name="color"></param>
            <returns>Internal paint id (not item id).</returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.ModHelpers.ModFeaturesHelpers">
            <summary>
            Assorted static "helper" functions pertaining to Mod Helpers control panel features.
            </summary>
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.ModHelpers.ModFeaturesHelpers.HasGithub(Terraria.ModLoader.Mod)">
            <summary>
            Indicates if a given `Mod` references a github repo via. `GithubProjectName` and `GithubUserName` static properties.
            </summary>
            <param name="mod"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.ModHelpers.ModFeaturesHelpers.GetGithubUserName(Terraria.ModLoader.Mod)">
            <summary>
            Gets a mod's github user name, if defined.
            </summary>
            <param name="mod"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.ModHelpers.ModFeaturesHelpers.GetGithubProjectName(Terraria.ModLoader.Mod)">
            <summary>
            Gets a mod's github project (source code) name, if defined.
            </summary>
            <param name="mod"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Net.NetPlayHelpers">
            <summary>
            Assorted static "helper" functions pertaining to network play.
            </summary>
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Net.NetPlayHelpers.GetPublicIP">
            <summary>
            Gets the internet-facing IP address of the current machine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Net.NetPlayHelpers.JoinServer(System.String,System.Int32)">
            <summary>
            Connects the current machine to a server to begin a game. Meant to be called from the main menu.
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Net.NetPlayHelpers.GetServerPing">
            <summary>
            Gets the most recent gauging of server ping.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Net.WebConnectionHelpers">
            <summary>
            Assorted static "helper" functions pertaining to connecting to the web.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to connecting to the web.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Net.WebConnectionHelpers.MakePostRequestAsync(System.String,System.String,System.Action{System.Exception},System.Action{System.Boolean,System.String})">
            <summary>
            Sends a POST request to a website asynchronously. 
            </summary>
            <param name="url">Website URL.</param>
            <param name="jsonData">JSON-formatted string data.</param>
            <param name="onError">Called on error. Receives an `Exception`.</param>
            <param name="onCompletion">Called regardless of success. Receives a boolean indicating if the site request succeeded,
            and the output (if any).</param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Net.WebConnectionHelpers.MakeGetRequestAsync(System.String,System.Action{System.Exception},System.Action{System.Boolean,System.String})">
            <summary>
            Makes a GET request to a website.
            </summary>
            <param name="url">Website URL.</param>
            <param name="onError">Called on error. Receives an `Exception`.</param>
            <param name="onCompletion">Called regardless of success. Receives a boolean indicating if the site request succeeded,
            and the output (if any).</param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Net.WebConnectionHelpers.MakePostRequestAsync(System.String,System.String,System.Action{System.Exception,System.String},System.Action{System.Boolean,System.String})">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Net.WebConnectionHelpers.MakeGetRequestAsync(System.String,System.Action{System.Exception,System.String},System.Action{System.Boolean,System.String})">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.Net.WebHelpers">
            <summary>
            Assorted static "helper" functions pertaining to the web.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Net.WebHelpers.UrlShortenerList">
            <summary>
            List of known popular(?) URL shorteners.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.NPCs.Attributes.NPCAttributeHelpers">
            <summary>
            Assorted static "helper" functions pertaining to gameplay attributes of NPCs.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to gameplay attributes of NPCs.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.NPCs.Attributes.NPCAttributeHelpers.DisplayNamesToIds">
            <summary>
            Table of NPC ids by qualified names.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.Attributes.NPCAttributeHelpers.GetQualifiedName(Terraria.NPC)">
            <summary>
            Gets an NPC's qualified (human readable) name.
            </summary>
            <param name="npc"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.Attributes.NPCAttributeHelpers.GetQualifiedName(System.Int32)">
            <summary>
            Gets an NPC's qualified (human readable) name.
            </summary>
            <param name="netid"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.NPCs.NPCBannerHelpers">
            <summary>
            Assorted static "helper" functions pertaining to NPC-dropped banners.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to NPC-dropped banners.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCBannerHelpers.GetNpcToBannerItemTypes">
            <summary>
            Gets table of npc types to their respective banner item types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCBannerHelpers.GetBannerItemTypes">
            <summary>
            Gets all banner item types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCBannerHelpers.GetBannerItemTypeOfNpcType(System.Int32)">
            <summary>
            Gets the banner item type of a given NPC type.
            </summary>
            <param name="npcType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCBannerHelpers.GetNpcTypesOfBannerItemType(System.Int32)">
            <summary>
            Gets all NPC types of a given banner item type.
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.NPCs.NPCDrawHelpers">
            <summary>
            Assorted static "helper" functions pertaining to NPC drawing.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCDrawHelpers.DrawSimple(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.NPC,System.Int32,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,Microsoft.Xna.Framework.Color,System.Boolean)">
            <summary>
            Draws an NPC.
            </summary>
            <param name="sb">SpriteBatch to draw to. Typically `Main.spriteBatch`.</param>
            <param name="npc">NPC to draw.</param>
            <param name="frame">Frame of the NPC's animation to draw.</param>
            <param name="position"></param>
            <param name="rotation"></param>
            <param name="scale"></param>
            <param name="color"></param>
            <param name="applyZoom">Whether to convert to current zoom amount or draw it directly.</param>
        </member>
        <member name="T:HamstarHelpers.Helpers.NPCs.NPCFinderHelpers">
            <summary>
            Assorted static "helper" functions pertaining to finding world NPCs.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCFinderHelpers.FindFirstNpcByType(System.Int32)">
            <summary>
            Finds first active, world NPC of the given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.NPCs.NPCGroupIdentityHelpers">
            <summary>
            Assorted static "helper" functions pertaining to identifying common groups of NPCs.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.NPCGroupIdentityHelpers.VanillaBloodMoonTypes">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.NPCGroupIdentityHelpers.VanillaGoblinArmyTypes">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.NPCGroupIdentityHelpers.VanillaFrostLegionTypes">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.NPCGroupIdentityHelpers.VanillaPirateTypes">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.NPCGroupIdentityHelpers.VanillaMartianTypes">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.NPCGroupIdentityHelpers.VanillaSolarEclipseTypes">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.NPCGroupIdentityHelpers.VanillaPumpkingMoonTypes">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.NPCGroupIdentityHelpers.VanillaFrostMoonTypes">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.NPCGroupIdentityHelpers.VanillaOldOnesArmyTypes">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.NPCGroupIdentityHelpers.VanillaSolarPillarTypes">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.NPCGroupIdentityHelpers.VanillaNebulaPillarTypes">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.NPCGroupIdentityHelpers.VanillaVortexPillarTypes">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.NPCGroupIdentityHelpers.VanillaStardustPillarTypes">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.NPCs.NPCHelpers">
            <summary>
            Assorted static "helper" functions pertaining to NPCs.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCHelpers.GetActive">
            <summary>
            Gets all active NPCs in the world.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCHelpers.RawHurt(Terraria.NPC,System.Int32)">
            <summary>
            Applies damage to an NPC, killing it if need be. Synced.
            </summary>
            <param name="npc"></param>
            <param name="damage"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCHelpers.Kill(Terraria.NPC)">
            <summary>
            Kills an NPC. Synced.
            </summary>
            <param name="npc"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCHelpers.Remove(Terraria.NPC)">
            <summary>
            Removes a given NPC. Synced.
            </summary>
            <param name="npc"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCHelpers.GetKnockbackVector(Terraria.NPC,System.Int32,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Predicts the knockback travel vector (velocity) of a given knockback-inducing hit, according to vanilla Terraria's
            expected behavior.
            </summary>
            <param name="npc"></param>
            <param name="dir"></param>
            <param name="knockback"></param>
            <param name="crit"></param>
            <param name="isKillingBlow">Adds power.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCHelpers.LooselyAssessThreat(Terraria.NPC)">
            <summary>
            Makes an (unsophisticated) attempt at assessing an NPC's threat level. Factors include damage, defense, life, tile
            collide, knockback resist, and 'value' (money dropped).
            </summary>
            <param name="npc"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCHelpers.CurrentPlayerKillsOfBannerNpc(System.Int32)">
            <summary>
            Kills counted towards earning banners for a given NPC type.
            </summary>
            <param name="npcType"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.NPCs.NPCIdentityHelpers">
            <summary>
            Assorted static "helper" functions pertaining to NPC identification.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to NPC identification.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCIdentityHelpers.GetUniqueKeySegs(System.Int32)">
            <summary>
            Gets a (human readable) unique key (as segments) from a given NPC type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCIdentityHelpers.GetNPCDefinition(System.String)">
            <summary>
            </summary>
            <param name="uniqueKey"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCIdentityHelpers.TypeFromUniqueKey(System.String)">
            <summary>
            Gets an NPC type from a given unique key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCIdentityHelpers.TypeFromUniqueKey(System.String,System.String)">
            <summary>
            Gets an NPC type from a given unique key.
            </summary>
            <param name="mod"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.NPCs.VanillaEventFlag">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.VanillaEventFlag.None">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.VanillaEventFlag.Goblins">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.VanillaEventFlag.FrostLegion">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.VanillaEventFlag.Pirates">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.VanillaEventFlag.Martians">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.VanillaEventFlag.BloodMoon">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.VanillaEventFlag.SlimeRain">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.VanillaEventFlag.Sandstorm">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.VanillaEventFlag.SolarEclipse">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.VanillaEventFlag.PumpkinMoon">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.VanillaEventFlag.FrostMoon">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.NPCs.VanillaEventFlag.LunarApocalypse">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.NPCs.NPCInvasionHelpers">
            <summary>
            Assorted static "helper" functions pertaining to NPC invasions
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCInvasionHelpers.GetEventTypeOfInvasionType(System.Int32)">
            <summary>
            Gets an enum flag type representing a given invasion type (internal code).
            </summary>
            <param name="which"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCInvasionHelpers.GetCurrentEventTypeSet">
            <summary>
            Gets an OR'd enum flag representing each vanilla event in session.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.NPCs.NPCResourceHelpers">
            <summary>
            Assorted static "helper" functions pertaining to players relative to NPC resources (e.g. textures).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCResourceHelpers.SafelyGetTexture(System.Int32)">
            <summary>
            Gets a NPC's texture. Loads NPC as needed.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.NPCs.NPCTownHelpers">
            <summary>
            Assorted static "helper" functions pertaining to NPC townsfolk.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCTownHelpers.Spawn(System.Int32,System.Int32,System.Int32)">
            <summary>
            Spawns a town NPC at a given position, alerting the world of their arrival.
            </summary>
            <param name="townNpcType"></param>
            <param name="tileX"></param>
            <param name="tileY"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCTownHelpers.Leave(Terraria.NPC,System.Boolean)">
            <summary>
            Makes a given town NPC leave, optionally alerting the world of their departure.
            </summary>
            <param name="npc"></param>
            <param name="announce"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCTownHelpers.GetCurrentShop">
            <summary>
            Gets the item array of the current shop being perused by the current player.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCTownHelpers.GetShop(System.Int32)">
            <summary>
            Gets the shop of a given NPC type.
            </summary>
            <param name="npcType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCTownHelpers.GetFemaleTownNpcTypes">
            <summary>
            Get female town NPC types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.NPCs.NPCTownHelpers.GetNonGenderedTownNpcTypes">
            <summary>
            Get non-gendered town NPC types.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Players.PlayerFileHelpers">
            <summary>
            Assorted static "helper" functions pertaining to player file data (.plr, .tplr).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerFileHelpers.ErasePlayer(Terraria.IO.PlayerFileData)">
            <summary>
            Erases a given player file.
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.Players.PlayerHeadDrawHelpers">
            <summary>
            Assorted static "helper" functions pertaining to player head drawing.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerHeadDrawHelpers.DrawPlayerHead(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.Player,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a player's head.
            </summary>
            <param name="sb">SpriteBatch to draw to. Typically `Main.spriteBatch`.</param>
            <param name="player"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="alpha"></param>
            <param name="scale"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.Players.PlayerHelpers">
            <summary>
            Assorted static "helper" functions pertaining to players.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerHelpers.InventorySize">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerHelpers.InventoryHotbarSize">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerHelpers.InventoryMainSize">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerHelpers.ComputeImpendingFallDamage(Terraria.Player)">
            <summary>
            Predicts impending fall damage amount for a given player at the current time (if any).
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerHelpers.LooselyAssessPower(Terraria.Player)">
            <summary>
            Loosely assesses player's relative level of power. Factors include appraisals of inventory items, player's defense,
            and player's life.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerHelpers.IsIncapacitated(Terraria.Player,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Indicates if player counts as 'incapacitated'.
            </summary>
            <param name="player"></param>
            <param name="freedomNeeded">Pulley, grappling, or minecarting count as incapacitation. Default `false`.</param>
            <param name="armsNeeded">Use of arms (e.g. no Cursed debuff) count as incapacitation. Default `false`.</param>
            <param name="sightNeeded">Visual occlusion (e.g. Blackout debuff) counts as incapacitation. Default `false`.</param>
            <param name="sanityNeeded">Control complications (e.g. Confused debuff) counts as incapacition. Default `false`.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerHelpers.RawHurt(Terraria.Player,Terraria.DataStructures.PlayerDeathReason,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Apply armor-bypassing damage to player, killing if needed (syncs via. Player.Hurt(...)).
            </summary>
            <param name="player"></param>
            <param name="deathReason"></param>
            <param name="damage"></param>
            <param name="direction"></param>
            <param name="pvp"></param>
            <param name="quiet"></param>
            <param name="crit"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerHelpers.KillWithPermadeath(Terraria.Player,System.String)">
            <summary>
            Kills a player permanently (as if hardcore mode).
            </summary>
            <param name="player"></param>
            <param name="deathMsg"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerHelpers.FullVanillaReset(Terraria.Player)">
            <summary>
            Resets a player back to (vanilla) factory defaults.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerHelpers.LockdownPlayerPerTick(Terraria.Player)">
            <summary>
            For just the current game tick, the player is under complete lockdown: No movement, actions, or damage taken.
            </summary>
            <param name="player"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.Players.PlayerIdentityHelpers">
            <summary>
            Assorted static "helper" functions pertaining to unique player identification.
            </summary>
            @private
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerIdentityHelpers.InventorySize">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerIdentityHelpers.InventoryHotbarSize">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerIdentityHelpers.InventoryMainSize">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerIdentityHelpers.GetUniqueId">
            <summary>
            Gets a code to uniquely identify the current player.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerIdentityHelpers.GetUniqueId(Terraria.Player)">
            <summary>
            Gets a code to uniquely identify a given player. These are synced to the server in multiplayer.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerIdentityHelpers.GetPlayerByUniqueId(System.String)">
            <summary>
            Gets an active player by a given unique id (if present).
            </summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerIdentityHelpers.GetVanillaSnapshotHash(Terraria.Player,System.Boolean,System.Boolean)">
            <summary>
            Gets a unique code for a player's current state. Useful for detecting state changes.
            </summary>
            <param name="player"></param>
            <param name="noContext">Omits team, pvp state, and name.</param>
            <param name="looksMatter">Includes appearance elements.</param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Players.PlayerInteractionHelpers">
            <summary>
            Assorted static "helper" functions pertaining to player interactions with game things.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerInteractionHelpers.IsWithinTilePlacementReach(System.ValueTuple{System.Int32,System.Int32})">
            <summary>
            Detects a given point exists within the player's reach.
            </summary>
            <param name="tilePos"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerInteractionHelpers.IsWithinTilePlacementReach(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Detects a given point exists within the player's reach.
            </summary>
            <param name="worldPos"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerInteractionHelpers.IsWithinTilePlacementReach(System.Int32,System.Int32)">
            <summary>
            Detects a given point exists within the player's reach.
            </summary>
            <param name="worldPosX"></param>
            <param name="worldPosY"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Players.PlayerItemFinderHelpers">
            <summary>
            Assorted static "helper" functions pertaining to unique player identification.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemFinderHelpers.FindFirstOfPossessedItemFor(Terraria.Player,System.Collections.Generic.ISet{System.Int32},System.Boolean)">
            <summary>
            Finds first of any of a set of item types currently in the player's position.
            </summary>
            <param name="player"></param>
            <param name="itemTypes"></param>
            <param name="includeBanks"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemFinderHelpers.FindInventoryChanges(Terraria.Player,System.Collections.Generic.KeyValuePair{System.Int32,System.Int32},System.Collections.Generic.IDictionary{System.Int32,System.Collections.Generic.KeyValuePair{System.Int32,System.Int32}})">
            <summary>
            Find item changes in a given player's inventory between a previous snapshot.
            </summary>
            <param name="player"></param>
            <param name="prevMouseInfo">Mouse item type and stack size.</param>
            <param name="prevInv">Map of inventory slots and their item types and sizes.</param>
            <returns>Map of inventory slots with changes and their item types and sizes. Mouse items count as the -1 slot.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemFinderHelpers.GetCurrentAmmo(Terraria.Player,Terraria.Item)">
            <summary>
            Gets the current ammo item of a given player expected to be in use by a given weapon item.
            </summary>
            <param name="player"></param>
            <param name="weapon"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemFinderHelpers.UnusedInventorySlots(Terraria.Player)">
            <summary>
            Gets all unoccupied inventory slot indices.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Players.PlayerItemHelpers">
            <summary>
            Assorted static "helper" functions pertaining to player inventory or equips.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerItemHelpers.VanillaInventorySize">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerItemHelpers.VanillaInventoryHotbarSize">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerItemHelpers.VanillaInventoryMainSize">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerItemHelpers.VanillaInventoryLastMainSlot">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerItemHelpers.VanillaInventoryLastCoinSlot">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerItemHelpers.VanillaInventoryLastAmmolot">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerItemHelpers.VanillaInventorySelectedSlot">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerItemHelpers.VanillaAccessorySlotFirst">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.GetCurrentVanillaMaxAccessories(Terraria.Player)">
            <summary>
            Gets a player's maximum allowed accessories, according to vanilla limits.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.RemoveInventoryItemQuantity(Terraria.Player,System.Int32,System.Int32)">
            <summary>
            Removes a quantity of a given item type from the player's inventory.
            </summary>
            <param name="player"></param>
            <param name="itemType"></param>
            <param name="quantity"></param>
            <returns>Amount removed.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.DropInventoryItem(Terraria.Player,System.Int32,System.Int32)">
            <summary>
            Drops a given inventory item to the ground.
            </summary>
            <param name="player"></param>
            <param name="slot"></param>
            <param name="noGrabDelay"></param>
            <returns>World item index (in `Main.item` array). -1 if none.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.DropEquippedArmorItem(Terraria.Player,System.Int32,System.Int32)">
            <summary>
            Drops a given armor item to the ground.
            </summary>
            <param name="player"></param>
            <param name="slot"></param>
            <param name="noGrabDelay"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.DropEquippedMiscItem(Terraria.Player,System.Int32,System.Int32)">
            <summary>
            Drops a given misc item to the ground.
            </summary>
            <param name="player"></param>
            <param name="slot"></param>
            <param name="noGrabDelay"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.UnhandItem(Terraria.Player)">
            <summary>
            Drops player's currently equipped item.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.IsPlayerNaked(Terraria.Player,System.Boolean,System.Boolean)">
            <summary>
            Indicates if player is not wearing any items.
            </summary>
            <param name="player"></param>
            <param name="alsoVanity"></param>
            <param name="canHide">Indicates items can be hidden to not count against being "naked".</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.CountMoney(Terraria.Player,System.Boolean)">
            <summary>
            Totals up player's money.
            </summary>
            <param name="player"></param>
            <param name="includeBanks"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.TipOfHeldItem(Terraria.Player)">
            <summary>
            Gets world position of the tip of a player's wielded item.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.TipOfHeldItem(Terraria.Player,Terraria.Item,System.Int32,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets world position of the tip of a player's wielded item.
            </summary>
            <param name="player"></param>
            <param name="item"></param>
            <param name="useStyle"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.GetGrappleItem(Terraria.Player)">
            <summary>
            Gets the player's grappling item.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.IsArmorSlot(System.Int32)">
            <summary>
            Indicates if a given slot position is an armor slot (in `player.armor`).
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.IsAccessorySlot(Terraria.Player,System.Int32)">
            <summary>
            Indicates if a given slot position is an accessory slot (in `player.armor`).
            </summary>
            <param name="player"></param>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.IsVanitySlot(Terraria.Player,System.Int32)">
            <summary>
            Indicates if a given slot position is a vanity slot (in `player.armor`).
            </summary>
            <param name="player"></param>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.GetFirstVanitySlot(Terraria.Player)">
            <summary>
            Gets first vanity slot for a given player (`player.armor`).
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerItemHelpers.GetCurrentlyOpenChest(Terraria.Player,System.Nullable{System.Boolean}@)">
            <summary>
            Accesses items of a player's currently opened chest.
            </summary>
            <param name="player"></param>
            <param name="isPersonalChest"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Players.PlayerModHelpers">
            <summary>
            Assorted static "helper" functions pertaining to mod compatibility for players.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerModHelpers.ModdedExtensionsReset(Terraria.Player,System.Collections.Generic.ISet{System.String})">
            <summary>
            Clears mod data for a player.
            </summary>
            <param name="player"></param>
            <param name="exemptMods">Names of mods to skip (internal names).</param>
        </member>
        <member name="T:HamstarHelpers.Helpers.Players.PlayerMovementHelpers">
            <summary>
            Assorted static "helper" functions pertaining to player movement.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerMovementHelpers.IsRelaxed(Terraria.Player,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Indicates if player is "relaxed".
            </summary>
            <param name="player"></param>
            <param name="notMounted"></param>
            <param name="notGrappled"></param>
            <param name="notPulleyed"></param>
            <param name="notHurting"></param>
            <param name="notCCed">Player is not webbed, stoned, or frozen.</param>
            <param name="notInverted"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerMovementHelpers.IsFlying(Terraria.Player)">
            <summary>
            Indicates if a given player is "flying" (using rocket boots or wings).
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerMovementHelpers.IsOnFloor(Terraria.Player)">
            <summary>
            Indicates if a player is on a floor.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerMovementHelpers.IsJumpPrimed(Terraria.Player)">
            <summary>
            Indicates if a player has a jump "primed" for use (including double, triple, etc. jumps).
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerMovementHelpers.CanPlayerJump(Terraria.Player)">
            <summary>
            Indicates if a player can jump.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerMovementHelpers.MinimumRunSpeed(Terraria.Player)">
            <summary>
            Minimum speed before player begins "running" (shoes kick up dirt, scuffing sounds begin, etc.).
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Players.PlayerNPCHelpers">
            <summary>
            Assorted static "helper" functions pertaining to players relative to NPCs.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerNPCHelpers.IsPlayerNearBoss(Terraria.Player)">
            <summary>
            Indicates if a player is 'near' a boss (5000 radius).
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerNPCHelpers.HasUsedNurse(Terraria.Player)">
            <summary>
            Indicates if a player has just healed with a nurse (via. chat message).
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Players.PlayerTeamName">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerTeamName.White">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerTeamName.Red">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerTeamName.Green">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerTeamName.Cyan">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerTeamName.Yellow">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerTeamName.Pink">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.Players.PlayerTeamHelpers">
            <summary>
            Assorted static "helper" functions pertaining to player multiplayer teams.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerTeamHelpers.GetTeamName(System.Int32,Microsoft.Xna.Framework.Color@)">
            <summary>
            Gets the team name and color by a given player team code number.
            </summary>
            <param name="team"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Players.PlayerWarpHelpers">
            <summary>
            Assorted static "helper" functions pertaining to player warping/teleporting/spawn return.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerWarpHelpers.MagicMirrorWarpStyle">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerWarpHelpers.DiscordWarpStyle">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerWarpHelpers.RecallPotionWarpStyle">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerWarpHelpers.WormholePotionWarpStyle">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Players.PlayerWarpHelpers.PortalWarpStyle">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerWarpHelpers.Evac(Terraria.Player)">
            <summary>
            "Evacs" a player back to their bed or default spawn.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerWarpHelpers.Teleport(Terraria.Player,Microsoft.Xna.Framework.Vector2,System.Int32)">
            <summary>
            Teleports a player to a given position.
            </summary>
            <param name="player"></param>
            <param name="pos"></param>
            <param name="style">"Style" of teleportation (visual, sound, etc.).</param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerWarpHelpers.GetSpawnPoint(Terraria.Player)">
            <summary>
            Gets the position of the player's spawn point.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Players.PlayerWarpHelpers.SetSpawnPoint(Terraria.Player,System.Int32,System.Int32)">
            <summary>
            Sets a player's spawn point to a given arbitrary tile position.
            </summary>
            <param name="player"></param>
            <param name="tileX"></param>
            <param name="tileY"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.Projectiles.Attributes.ProjectileAttributeHelpers">
            <summary>
            Assorted static "helper" functions pertaining to projectile attributes.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to gameplay attributes of NPCs.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Projectiles.Attributes.ProjectileAttributeHelpers.GetQualifiedName(Terraria.Projectile)">
            <summary>
            Gets the "qualified" (human readable) name of a given projectile.
            </summary>
            <param name="proj"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Projectiles.Attributes.ProjectileAttributeHelpers.GetQualifiedName(System.Int32)">
            <summary>
            Gets the "qualified" (human readable) name of a given projectile.
            </summary>
            <param name="projType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Projectiles.Attributes.ProjectileAttributeHelpers.GetVanillaProjectileDimensions(Terraria.Projectile)">
            <summary>
            Gets the (vanilla) dimensions of a projectile, adjusted by specific projectile idiosyncracies or AIs.
            </summary>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Projectiles.Attributes.ProjectileAttributeHelpers.DoesVanillaProjectileHitPlatforms(Terraria.Projectile,System.Boolean@)">
            <summary>
            Indicates if a given vanilla projectile collides with a platform.
            </summary>
            <param name="projectile"></param>
            <param name="onlySometimes">Indicates if AI behavior can override collisions occasionally.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Projectiles.Attributes.ProjectileAttributeHelpers.IsExplosive(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Indicates if a given projectile is explosive, including by how much.
            </summary>
            <param name="projectileType"></param>
            <param name="radius">Returns explosive radius.</param>
            <param name="damage">Returns explosive damage.</param>
            <returns></returns>
        </member>
        <member name="P:HamstarHelpers.Helpers.Projectiles.Attributes.ProjectileAttributeHelpers.DisplayNamesToIds">
            <summary>
            Table of NPC ids by qualified names.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.Projectiles.ProjectileIdentityHelpers">
            <summary>
            Assorted static "helper" functions pertaining to players relative to projectile identification
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to players relative to projectile identification
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Projectiles.ProjectileIdentityHelpers.GetProjectileDefinition(System.String)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Projectiles.ProjectileIdentityHelpers.GetUniqueKeySegs(System.Int32)">
            <summary>
            Gets a (human readable) unique key (as segments) from a given projectile type.
            </summary>
            <param name="projType"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Projectiles.ProjectileHelpers">
            <summary>
            Assorted static "helper" functions pertaining to players relative to projectiles.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to players relative to projectiles.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Projectiles.ProjectileHelpers.Hit(Terraria.Projectile)">
            <summary>
            Applies projectile "hits", as if to make the effect of impacting something (including consuming penetrations).
            </summary>
            <param name="projectile"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Projectiles.ProjectileHelpers.DrawSimple(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.Projectile,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Color,System.Single,System.Boolean)">
            <summary>
            Draws a given projectile
            </summary>
            <param name="sb"></param>
            <param name="proj"></param>
            <param name="pos"></param>
            <param name="rot"></param>
            <param name="color"></param>
            <param name="scale"></param>
            <param name="applyZoom">Whether to convert to current zoom amount of the screen.</param>
        </member>
        <member name="T:HamstarHelpers.Helpers.Projectiles.ProjectileResourceHelpers">
            <summary>
            Assorted static "helper" functions pertaining to players relative to projectile resources (e.g. textures).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Projectiles.ProjectileResourceHelpers.SafelyGetTexture(System.Int32)">
            <summary>
            Gets a projectile's texture. Loads projectiles as needed.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Recipes.RecipeFinderHelpers">
            <summary>
            Assorted static "helper" functions pertaining to recipe finding.
            </summary>
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Recipes.RecipeFinderHelpers.GetRecipeIndexesOfItem(System.Int32)">
            <summary>
            Gets the `Main.recipe` indexes of each recipe that crafts a given item.
            </summary>
            <param name="itemNetID"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Recipes.RecipeFinderHelpers.GetRecipesOfItem(System.Int32)">
            <summary>
            Gets each `Recipe` that crafts a given item.
            </summary>
            <param name="itemNetID"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Recipes.RecipeFinderHelpers.GetRecipeIndexesUsingIngredient(System.Int32)">
            <summary>
            Gets each `Main.recipe` index of each recipe that uses a given item as an ingredient.
            </summary>
            <param name="itemNetID"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Recipes.RecipeGroupHelpers">
            <summary>
            Assorted static "helper" functions pertaining to common recipe groups.
            </summary>
            @private
        </member>
        <member name="P:HamstarHelpers.Helpers.Recipes.RecipeGroupHelpers.EvilBiomeBossDrops">
            <summary>
            Recipe group of items of an "evil" biome boss's drops (Shadow Scale and Tissue Sample).
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Recipes.RecipeGroupHelpers.EvilBiomeLightPet">
            <summary>
            Recipe group of light pet items of an "evil" biome (Shadow Orb and Crimson Heart).
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Recipes.RecipeGroupHelpers.VanillaButterfly">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Recipes.RecipeGroupHelpers.VanillaGoldCritter">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Recipes.RecipeGroupHelpers.PressurePlates">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Recipes.RecipeGroupHelpers.WeightedPressurePlates">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Recipes.RecipeGroupHelpers.ConveyorBelts">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Recipes.RecipeGroupHelpers.NpcBanners">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Recipes.RecipeGroupHelpers.RecordedMusicBoxes">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Recipes.RecipeGroupHelpers.Groups">
            <summary>
            A map of common recipe groups to their internal names.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.Recipes.RecipeCraftFailReason">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Recipes.RecipeCraftFailReason.NeedsNearbyWater">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Recipes.RecipeCraftFailReason.NeedsNearbyHoney">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Recipes.RecipeCraftFailReason.NeedsNearbyLava">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Recipes.RecipeCraftFailReason.NeedsNearbySnowBiome">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Recipes.RecipeCraftFailReason.MissingTile">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Recipes.RecipeCraftFailReason.MissingItem">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.Recipes.RecipeHelpers">
            <summary>
            Assorted static "helper" functions pertaining to recipes.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Recipes.RecipeHelpers.GetRecipeFailReasons(Terraria.Player,Terraria.Recipe,System.Int32[]@,System.Collections.Generic.IDictionary{System.Int32,System.Int32}@,System.Collections.Generic.IEnumerable{Terraria.Item})">
            <summary>
            Reports all the reasons a given recipe for a givne player will fail with a given set of ingredients (defaults to
            the player's inventory).
            </summary>
            <param name="player"></param>
            <param name="recipe"></param>
            <param name="missingTile">Returns the tile IDs (crafting stations) needed for the recipe.</param>
            <param name="missingItemTypesStacks">Returns the missing item ids and amounts for the recipe.</param>
            <param name="availableIngredients"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Recipes.RecipeHelpers.GetAvailableRecipesOfIngredients(Terraria.Player,System.Collections.Generic.IEnumerable{Terraria.Item})">
            <summary>
            Gets available recipes of a given set of ingredient items for a given player.
            </summary>
            <param name="player"></param>
            <param name="ingredients"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Recipes.RecipeHelpers.ItemHasIngredients(System.Int32,System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
            <summary>
            Indicates if a given item type has the ingredients it needs to be crafted from any of its recipes. Does not check
            tile requirements.
            </summary>
            <param name="itemType">Item type to find recipes for.</param>
            <param name="ingredients">Ingredient item types and their stack sizes.</param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Recipes.RecipeIdentityHelpers">
            <summary>
            Assorted static "helper" functions pertaining to recipe identification.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Recipes.RecipeIdentityHelpers.Equals(Terraria.Recipe,Terraria.Recipe)">
            <summary>
            Indicates if any 2 recipes are identical.
            </summary>
            <param name="recipe1"></param>
            <param name="recipe2"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Recipes.RecipeIdentityHelpers.GetRecipeIndexesOfItem(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Recipes.RecipeIdentityHelpers.GetRecipesOfItem(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Recipes.RecipeIdentityHelpers.GetRecipeIndexesUsingIngredient(System.Int32)">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.Steam.SteamHelpers">
            <summary>
            Assorted static "helper" functions pertaining to the Steam platform.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Steam.SteamHelpers.GetSteamID">
            <summary>
            Attempts to get the current Steam user's Steam ID.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.Attributes.TileAttributeHelpers">
            <summary>
            Assorted static "helper" functions pertaining to tile attributes.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to tile attributes.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Attributes.TileAttributeHelpers.IsObject(System.Int32)">
            <summary>
            Indicates if a given tile type is an "object" (container, sign, station, etc.).
            </summary>
            <param name="tileType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Attributes.TileAttributeHelpers.IsBreakable(System.Int32,System.Int32,Terraria.Enums.TileCuttingContext)">
            <summary>
            Indicates if a given specific tile is "breakable" (typically to normal attacks).
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Attributes.TileAttributeHelpers.IsNotVanillaBombable(System.Int32,System.Int32)">
            <summary>
            Indicates if a given tile cannot be destroyed by vanilla explosives.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Attributes.TileAttributeHelpers.IsNotVanillaBombableType(System.Int32)">
            <summary>
            Indicates if a given tile type cannot be destroyed by vanilla explosives.
            </summary>
            <param name="tileType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Attributes.TileAttributeHelpers.GetDamageScale(Terraria.Tile,System.Single,System.Boolean@)">
            <summary>
            Gets the damage scale (amount to multiply a pickaxe hit by) of a given tile.
            </summary>
            <param name="tile"></param>
            <param name="baseDamage">Amount of damage (e.g. pickaxe power) applied to the tile.</param>
            <param name="isAbsolute">Returns indication that tile will guarantee destruction on this hit.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Attributes.TileAttributeHelpers.GetChestTypeCode(System.Int32)">
            <summary>
            Gets a chest's internal type code.
            </summary>
            <param name="tileType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Attributes.TileAttributeHelpers.GetVanillaTileDisplayNames(System.Int32)">
            <summary>
            Gets all vanilla tile names of each subtype of a given tile type.
            </summary>
            <param name="tileType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Attributes.TileAttributeHelpers.GetVanillaTileDisplayName(System.Int32,System.Int32)">
            <summary>
            Gets the specific tile name of a given type type and subtype.
            </summary>
            <param name="tileType"></param>
            <param name="subType"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition">
            <summary>
            Defines a basic tile.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition.TileType">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition.WallType">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition.TileStyle">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition.Direction">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition.Slope">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition.IsHalfBrick">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition.LiquidVolume">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition.IsLava">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition.IsHoney">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition.Place(System.Int32,System.Int32)">
            <summary>
            Places the current tile. Applies `WorldGen.SquareTileFrame(...)`.
            </summary>
            <param name="leftTileX"></param>
            <param name="bottomTileY"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.Draw.TileDrawFillHelpers">
            <summary>
            Assorted static "helper" functions pertaining to fill-'drawing' tiles into the world.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Draw.TileDrawFillHelpers.Fill(HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,System.Int32,System.Int32,System.Boolean,System.Func{System.Int32,System.Int32,HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition})">
            <summary>
            Fills an area (of the given pattern) with the given tile type.
            </summary>
            <param name="filter"></param>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="fillDiagonal"></param>
            <param name="place">Return `null` to skip tile placing.</param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.Draw.TileDrawPrimitivesHelpers">
            <summary>
            Assorted static "helper" functions pertaining to 'drawing' primitive tile structures into the world.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Draw.TileDrawPrimitivesHelpers.DrawRectangle(HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,Microsoft.Xna.Framework.Rectangle,System.Nullable{Microsoft.Xna.Framework.Rectangle},System.Func{System.Int32,System.Int32,HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition})">
            <summary>
            Draws a rectangle (from top to bottom) of a given tile type (where the filter allows).
            </summary>
            <param name="filter"></param>
            <param name="area"></param>
            <param name="hollow"></param>
            <param name="place">Return `null` to skip tile placing.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Draw.TileDrawPrimitivesHelpers.DrawCircle(HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,System.Int32,System.Int32,System.Single,System.Single,System.Func{System.Int32,System.Int32,HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition})">
            <summary>
            Draws a circle of a given tile type (where the filter allows).
            </summary>
            <param name="filter"></param>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="minRadius"></param>
            <param name="maxRadius"></param>
            <param name="place">Return `null` to skip tile placing.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Draw.TileDrawPrimitivesHelpers.DrawBlob(HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,System.Int32,System.Int32,System.Single,System.Single,System.Func{System.Int32,System.Int32,HamstarHelpers.Helpers.Tiles.Draw.TileDrawDefinition})">
            <summary>
            Draws a blob of a given tile type (where the filter allows).
            </summary>
            <param name="filter"></param>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="minSize"></param>
            <param name="maxSize"></param>
            <param name="place">Return `null` to skip tile placing.</param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileAttributeHelpers">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileAttributeHelpers.IsObject(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileAttributeHelpers.IsBreakable(System.Int32,System.Int32,System.Nullable{Terraria.Enums.TileCuttingContext})">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileAttributeHelpers.IsNotVanillaBombable(System.Int32,System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileAttributeHelpers.IsNotVanillaBombableType(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileAttributeHelpers.GetDamageScale(Terraria.Tile,System.Single,System.Boolean@)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileAttributeHelpers.GetVanillaTileDisplayNames(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileAttributeHelpers.GetVanillaTileDisplayName(System.Int32,System.Int32)">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers">
            <summary>
            Assorted static "helper" functions pertaining to tiles as relevant to biomes.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaHolyTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaCorruptionTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaCrimsonTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaSnowTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaJungleTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaShroomTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaMeteorTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaDungeonTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaDesertTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaLihzahrdTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaHolyMinTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaCorruptionMinTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaCrimsonMinTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaMeteorMinTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaJungleMinTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaSnowMinTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaDesertMinTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaShroomMinTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaDungeonMinTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.VanillaLihzahrdMinTiles">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.GetVanillaBiomePercentsNear(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Gets percent values indicating how much of each vanilla biome type is near a given tile position. See
            `GetPlayerRangeTilesAt(...)` for the specification of the tile checking range. Percent values indicate
            how much of the *minimum* percent of tiles exist nearby to count as being within the given biome.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="totalTiles">Returns a count of non-air tiles in total.</param>
            <param name="unidenfiedTiles">Returns all non-air tiles not identified with a specific biome.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.GetVanillaBiomePercentsOf(System.Collections.Generic.IDictionary{System.Int32,System.Int32}@,System.Int32@,System.Int32@)">
            <summary>
            Gets percent values indicating how much of each vanilla biome type of a set of tiles. See
            `GetPlayerRangeTilesAt(...)` for the specification of the tile checking range. Percent values indicate
            how much of the *minimum* percent of tiles exist nearby to count as being within the given biome.
            </summary>
            <param name="tiles">Counts of tiles by type.</param>
            <param name="totalTiles">Returns a count of non-air tiles in total.</param>
            <param name="unidenfiedTiles">Returns all non-air tiles not identified with a specific biome.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileBiomeHelpers.GetVanillaBiomePercentsOf(System.Int32[],System.Int32@,System.Int32@)">
            <summary>
            Gets percent values indicating how much of each vanilla biome type of a set of tiles. See
            `GetPlayerRangeTilesAt(...)` for the specification of the tile checking range. Percent values indicate
            how much of the *minimum* percent of tiles exist nearby to count as being within the given biome.
            </summary>
            <param name="allTilesSnapshot">Counts of tiles by type.</param>
            <param name="totalTiles">Returns a count of non-air tiles in total.</param>
            <param name="unidenfiedTiles">Returns all non-air tiles not identified with a specific biome.</param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileChunkHelpers">
            <summary>
            Assorted static "helper" functions pertaining to tile chunks (multiplayer only).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileChunkHelpers.IsTileSyncedForCurrentClient(System.Int32,System.Int32)">
            <summary>
            Reports whether a given tile is part of a synced chunk.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileFinderHelpers">
            <summary>
            Assorted static "helper" functions pertaining to tile finding.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to tile finding.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to tile finding.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to tile finding.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileFinderHelpers.GetPlayerRangeTilesAt(System.Int32,System.Int32)">
            <summary>
            Counts tile types within the player's vicinity (used for checking biomes and stuff).
            </summary>
            <param name="midTileX"></param>
            <param name="midTileY"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileFinderHelpers.FindNearbyRandomMatch(HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Attempts to randomly search within a spherical area (via. `radius`) for any matching tiles (via. `pattern`).
            Checks for non-zero tile "brightness" to skip over unloaded tiles.
            </summary>
            <param name="pattern"></param>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="radius"></param>
            <param name="retries"></param>
            <param name="skipDarkness"></param>
            <param name="foundX">Returns found X tile coordinate.</param>
            <param name="foundY">Returns found Y tile coordinate.</param>
            <returns>`true` if tile match found.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileFinderHelpers.FindTopLeftOfSquare(HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,System.Int32,System.Int32,System.Int32,System.ValueTuple{System.Int32,System.Int32}@)">
            <summary>
            Finds the top left tile of a given area of a given pattern. Assumes the area is square (checks left first).
            </summary>
            <param name="pattern"></param>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="maxDistance"></param>
            <param name="coords"></param>
            <returns>Returns tile coordinates, or else `null` if not found within the given max amounts.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileFinderHelpers.GetFloorWidth(HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Traces downwards from a given tile coordinate to the nearest floor, and then measures the contiguous width.
            </summary>
            <param name="nonFloorPattern"></param>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="maxFallRange">Max distance to trace downwards to a floor before giving up.</param>
            <param name="floorX">Leftmost tile of the contiguous floor.</param>
            <param name="floorY">Last matching tile before hitting the floor.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileFinderHelpers.GetCeilingWidth(HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Traces upwards from a given tile coordinate to the nearest ceiling, and then measures the contiguous width.
            </summary>
            <param name="nonCeilingPattern"></param>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="maxRiseRange">Max distance to trace upwards to a ceiling before giving up.</param>
            <param name="ceilX">Leftmost tile of the contiguous ceiling.</param>
            <param name="ceilY">Last matching tile before hitting the ceiling.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileFinderHelpers.GetAllContiguousMatchingTiles(HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,System.Int32,System.Int32,System.Collections.Generic.IList{System.ValueTuple{System.UInt16,System.UInt16}}@,System.Int32,System.Int32)">
            <summary>
            Gets a list of all contiguous tiles matching the given pattern.
            </summary>
            <param name="pattern"></param>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="unclosedTiles">All matched tiles that exceed `maxRadius` or `maxTile`, just beyond the outer edges of the result's matches.</param>
            <param name="maxRadius"></param>
            <param name="maxTiles"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileFinderHelpers.FindAreaMatchWithin(HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,Microsoft.Xna.Framework.Rectangle,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Attempts to find an area of contiguous matching tiles within a larger area.
            </summary>
            <param name="pattern"></param>
            <param name="within"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="foundX">Returns found X tile coordinate.</param>
            <param name="foundY">Returns found Y tile coordinate.</param>
            <returns>`true` if matching area found.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileFinderHelpers.GetTilesInWorldRectangle(Microsoft.Xna.Framework.Rectangle,HamstarHelpers.Classes.Tiles.TilePattern.TilePattern)">
            <summary>
            Gets all tiles of a given pattern within a given area.
            </summary>
            <param name="worldRect"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileFinderHelpers.GetTilesInWorldRectangle(Microsoft.Xna.Framework.Rectangle,HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,System.Func{System.Int32,System.Int32,System.Boolean,System.Boolean})">
            <summary>
            Gets all tiles of a given pattern within a given area. Calls a function for each.
            </summary>
            <param name="worldRect"></param>
            <param name="pattern"></param>
            <param name="forEach">Performs an action for each tile. 3rd bool parameter indicates a match. Returned bool to indicate a match.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileFinderHelpers.FindNearbyAreaFromCenter(HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,Microsoft.Xna.Framework.Rectangle,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Attempts to find an area of a given matching tile pattern within a larger area. Search begins from the
            center.
            </summary>
            <param name="tileType"></param>
            <param name="within"></param>
            <param name="patternWidth"></param>
            <param name="height"></param>
            <param name="foundX">Returns found X tile coordinate.</param>
            <param name="foundY">Returns found Y tile coordinate.</param>
            <returns>`true` if matching area found.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileFinderHelpers.GetNearestTile(Microsoft.Xna.Framework.Vector2,HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,System.Int32)">
            <summary>
            Gets the nearest matching tile to a given point (as a world coordinate).
            </summary>
            <param name="worldPos"></param>
            <param name="pattern"></param>
            <param name="maxWorldRadius"></param>
            <returns>Tile position of match. `null` if none.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileFinderHelpers.GetNearestTile(System.Int32,System.Int32,HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,System.Int32)">
            <summary>
            Gets the nearest matching tile to a given point.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="pattern"></param>
            <param name="maxTileRadius"></param>
            <returns>Tile position of match. `null` if none.</returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileFrameHelpers">
            <summary>
            Assorted static "helper" functions pertaining to tile frames.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileFrameHelpers.VanillaChestTypeNamesByFrame">
            <summary>
            Gets chest type names by frame.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileFrameHelpers.VanillaChestFramesByTypeName">
            <summary>
            Gets chest frame by type names.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileGroupIdentityHelpers">
            <summary>
            Assorted static "helper" functions pertaining to tile group identification.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Tiles.TileGroupIdentityHelpers.VanillaEarthTiles">
            <summary>
            Tile types that typically comprise "earth" (now includes underworld ash).
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Tiles.TileGroupIdentityHelpers.VanillaShrubTiles">
            <summary>
            Tile types that typically comprise greenery/shrubs.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileHelpers">
            <summary>
            Assorted static "helper" functions pertaining to tiles.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to tiles.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to tiles.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileHelpers.IsAir(Terraria.Tile,System.Boolean,System.Boolean)">
            <summary>
            Indicates if a given tile is "air" (including no walls).
            </summary>
            <param name="tile"></param>
            <param name="isWireAir"></param>
            <param name="isLiquidAir"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileHelpers.IsSolid(Terraria.Tile,System.Boolean,System.Boolean)">
            <summary>
            Indicates if a given tile is "solid".
            </summary>
            <param name="tile"></param>
            <param name="isPlatformSolid"></param>
            <param name="isActuatedSolid"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileHelpers.IsWire(Terraria.Tile)">
            <summary>
            Indicates if a given tile has wires.
            </summary>
            <param name="tile"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileHelpers.PlaceTileSynced(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Places a given tile of a given type. Synced.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="tileType"></param>
            <param name="placeStyle"></param>
            <param name="muted"></param>
            <param name="forced"></param>
            <param name="plrWho"></param>
            <returns>`true` if tile placement succeeded.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileHelpers.KillTileSynced(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Kills a given tile. Results are synced.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="effectOnly">Only a visual effect; tile is not actually killed (nothing to sync).</param>
            <param name="dropsItem"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileHelpers.Swap1x1Synced(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Swaps 1x1 tiles. Destructive.
            </summary>
            <param name="fromTileX"></param>
            <param name="fromTileY"></param>
            <param name="toTileX"></param>
            <param name="toTileY"></param>
            <param name="preserveWall"></param>
            <param name="preserveWire"></param>
            <param name="preserveLiquid"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileHelpers.PlaceTile(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileHelpers.KillTile(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileHelpers.Swap1x1(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileHelpers.IsNotVanillaBombable(System.Int32,System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileHelpers.IsNotVanillaBombableType(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileHelpers.GetDamageScale(Terraria.Tile,System.Single,System.Boolean@)">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers">
            <summary>
            Assorted static "helper" functions pertaining to tile placement (convenience bindings for WorldGen).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.PlaceObject(System.Int32,System.Int32,System.UInt16,System.Int32,System.SByte,System.Boolean)">
            <summary>
            Convenience binding to place a given tile object from its corner. Places from the bottom. Uses vanilla's
            object placement method. Applies `WorldGen.SquareTileFrame(...)`.
            </summary>
            <param name="leftX"></param>
            <param name="bottomY"></param>
            <param name="type"></param>
            <param name="style"></param>
            <param name="direction"></param>
            <param name="forced">Attempts to ignore anchor checks and place the tile regardless.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.TryPrecisePlace(System.Int32,System.Int32,System.UInt16,System.Int32,System.SByte)">
            <summary>
            Convenience binding to attempt to place the given tile from its corner. Places from the bottom. Not all
            tile dimensions supported.
            </summary>
            <param name="leftX"></param>
            <param name="bottomY"></param>
            <param name="type"></param>
            <param name="style"></param>
            <param name="direction"></param>
            <returns>`false` if no suitable Place binding found.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place1xX(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place2xX(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place1x2(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place2x1(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place2x2(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place3x1(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place3x2(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place3x3(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place3x4(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place4x2(System.Int32,System.Int32,System.UInt16,System.Int32,System.SByte)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="direction"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place5x4(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place6x3(System.Int32,System.Int32,System.UInt16,System.Int32,System.SByte)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="direction"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place1x2Top(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place2x2Horizontal(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place2x2Style(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place2x3Wall(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place3x2Wall(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place3x3Wall(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place4x3Wall(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TilePlacementHelpers.Place6x4Wall(System.Int32,System.Int32,System.UInt16,System.Int32)">
            <summary>
            Convenience binding for placing the given tile from its corner.
            </summary>
            <param name="leftX"></param>
            <param name="topY"></param>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileResourceHelpers">
            <summary>
            Assorted static "helper" functions pertaining to players relative to Tile resources (e.g. textures).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileResourceHelpers.SafelyGetTexture(System.Int32)">
            <summary>
            Gets a tile's texture. Loads tiles as needed.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileSlopeType">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileSlopeType.None">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileSlopeType.TopRightSlope">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileSlopeType.TopLeftSlope">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileSlopeType.BottomRightSlope">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileSlopeType.BottomLeftSlope">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileShapeType">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileShapeType.None">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileShapeType.Any">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileShapeType.TopRightSlope">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileShapeType.TopLeftSlope">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileShapeType.BottomRightSlope">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileShapeType.BottomLeftSlope">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileShapeType.TopSlope">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileShapeType.BottomSlope">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileShapeType.LeftSlope">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileShapeType.RightSlope">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileShapeType.HalfBrick">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType">
            <summary>
            Credit to https://tshock.readme.io/docs/multiplayer-packet-structure
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.KillTile">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.PlaceTile">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.KillWall">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.PlaceWall">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.KillTileNoItem">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.PlaceWire">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.KillWire">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.PoundTile">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.PlaceActuator">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.KillActuator">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.PlaceWire2">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.KillWire2">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.PlaceWire3">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.KillWire3">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.SlopeTile">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.FrameTrack">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.PlaceWire4">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.KillWire4">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.PokeLogicGate">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.Tiles.TileChangeNetMessageType.Actuate">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileStateHelpers">
            <summary>
            Assorted static "helper" functions pertaining to tile state (slope, actuation, etc.).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileStateHelpers.SmartSlope(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Attempts to "smartly" smooth a given tile against its adjacent tiles.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="isSynced"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileWallHelpers">
            @private
        </member>
        <member name="P:HamstarHelpers.Helpers.Tiles.TileWallHelpers.UnsafeDungeonWallTypes">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileWallHelpers.IsDungeon(Terraria.Tile,System.Boolean@)">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileWallResourceHelpers">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileWallResourceHelpers.SafelyGetTexture(System.Int32)">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileWallIdentityHelpers">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileWallIdentityHelpers.GetUniqueKey(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileWallIdentityHelpers.TypeFromUniqueKey(System.String)">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.TileWorldHelpers">
            <summary>
            Assorted static "helper" functions pertaining to tiles relative to the world.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileWorldHelpers.IsWithinMap(System.Int32,System.Int32)">
            <summary>
            Indicates if a given tiles is within the visible player-accessible world's boundaries.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.TileWorldHelpers.GaugeBrightnessWithin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gauges the overall light amount within an area.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.Walls.TileWallGroupIdentityHelpers">
            <summary>
            Assorted static "helper" functions pertaining to tile walls.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.Tiles.Walls.TileWallGroupIdentityHelpers.UnsafeDungeonWallTypes">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Walls.TileWallGroupIdentityHelpers.IsDungeon(Terraria.Tile,System.Boolean@)">
            <summary>
            Indicates if a given wall is dungeon or temple "biome" wall.
            </summary>
            <param name="tile"></param>
            <param name="isLihzahrd"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.Tiles.Walls.TileWallResourceHelpers">
            <summary>
            Assorted static "helper" functions pertaining to players relative to tile Wall resources (e.g. textures).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.Tiles.Walls.TileWallResourceHelpers.SafelyGetTexture(System.Int32)">
            <summary>
            Gets a wall's texture. Loads walls as needed.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.TileHelpers.TileIdentityHelpers">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.TileHelpers.TileIdentityHelpers.GetUniqueKey(System.Int32)">
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.TileHelpers.TileIdentityHelpers.TypeFromUniqueKey(System.String)">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Commands.CommandsHelpers">
            <summary>
            Assorted static "helper" functions pertaining to (chat or console) commands.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Commands.CommandsHelpers.GetQuotedStringFromArgsAt(System.String[],System.Int32,System.Int32@,System.String@)">
            <summary>
            Parses the next quote-wrapped input string from a sequence of input argument strings.
            </summary>
            <param name="args">Input arguments. Typically an array split by spaces.</param>
            <param name="argStartIdx">Position in the `args` array to begin parsing.</param>
            <param name="argNextIdx">Position after last checked argument.</param>
            <param name="output">Parsed argument (minus quotes).</param>
            <returns>`true` if a quote wrapped string was found and properly formed.</returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Configs.ConfigHelpers">
            <summary>
            Assorted static "helper" functions pertaining to configs (ModConfig, primarily).
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to configs (ModConfig, primarily).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Configs.ConfigHelpers.SyncConfig(Terraria.ModLoader.Config.ModConfig)">
            <summary>
            Syncs to everyone. Use with caution.
            </summary>
            <param name="config"></param>
            <returns>`false` if sync is diabled (client-only config).</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Configs.ConfigHelpers.MergeConfigs``1(``0,``0)">
            <summary>
            Combines one ModConfig instance into another, prioritizing non-default values of the latter.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="to">Config to push changed field/property values to. Any existing values are overridden, where changes found.</param>
            <param name="fro">Config to pull field/property values from. Only pulls non-default (changed) values.</param>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Configs.FullIntDefinition">
            <summary>
            Allows defining a "full" int value (furthest positive and negative values). Used for array/list/etc. entries.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Configs.FullIntDefinition.Amount">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Configs.PositiveIntDefinition">
            <summary>
            Allows defining a positive int value (furthest positive values only). Used for array/list/etc. entries.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Configs.PositiveIntDefinition.Amount">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Configs.FullPercentFloatDefinition">
            <summary>
            Allows defining a bi-directional "percent" float value (between -1 and 1). Used for array/list/etc. entries.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Configs.FullPercentFloatDefinition.Amount">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Configs.PercentFloatDefinition">
            <summary>
            Allows defining a "percent" float value (between 0 and 1). Used for array/list/etc. entries.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Configs.PercentFloatDefinition.Amount">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Configs.FullSingleDefinition">
            <summary>
            Allows defining a "full" float value (furthest negative and positive ranges). Used for array/list/etc. entries.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Configs.FullSingleDefinition.Amount">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Configs.PositiveSingleDefinition">
            <summary>
            Allows defining a positive float value (furthest positive range only). Used for array/list/etc. entries.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Configs.PositiveSingleDefinition.Amount">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Configs.FullScreenPercentPositionDefinition">
            <summary>
            Allows defining a coordinate value representing a possible screen position (as a percent). Negative values are
            meant to map from right-to-left, bottom-to-top, instead. Used for array/list/etc. entries.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Configs.FullScreenPercentPositionDefinition.X">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Configs.FullScreenPercentPositionDefinition.Y">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Configs.ScreenPercentPositionDefinition">
            <summary>
            Allows defining a coordinate value representing a possible screen position (as a percent).
            Used for array/list/etc. entries.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Configs.ScreenPercentPositionDefinition.X">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Configs.ScreenPercentPositionDefinition.Y">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Configs.FullScreenPositionDefinition">
            <summary>
            Allows defining a coordinate value representing a possible screen position (up to the theoretical largest
            resolution Terraria supports). Negative values are meant to map from right-to-left, bottom-to-top, instead.
            Used for array/list/etc. entries.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Configs.FullScreenPositionDefinition.X">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Configs.FullScreenPositionDefinition.Y">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Configs.ScreenPositionDefinition">
            <summary>
            Allows defining a coordinate value representing a possible screen position (up to the theoretical largest
            resolution Terraria supports). Used for array/list/etc. entries.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Configs.ScreenPositionDefinition.X">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Configs.ScreenPositionDefinition.Y">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.LoadHelpers">
            <summary>
            Assorted static "helper" functions pertaining to the state of the game.
            </summary>
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.LoadHelpers.IsModLoaded">
            <summary>
            Indicates if mods Mod Helpers is fully loaded (recipes, content, etc.).
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.LoadHelpers.IsCurrentPlayerInGame">
            <summary>
            Indicates if the player is playing a game.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.LoadHelpers.IsWorldLoaded">
            <summary>
            Indicates if the current world has finished loading, and is ready for play.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.LoadHelpers.IsWorldBeingPlayed">
            <summary>
            Indicates if a given world is being played at present (at least 1 active player).
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.LoadHelpers.IsWorldSafelyBeingPlayed">
            <summary>
            Indicates if a given world is being played (at least 1 active player), and that player has finished all of their
            own in-game "loading" stuff (attempts to account for any Terraria/mod hidden loading behaviors).
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Menus.MainMenuHelpers">
            <summary>
            Assorted static "helper" functions pertaining to the main menu.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Menus.MainMenuHelpers.GetMenuUI(HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition)">
            <summary>
            Gets a menu UI corresponding to a given menu definition.
            </summary>
            <param name="menuDef"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Menus.MainMenuHelpers.OpenModConfigListUI">
            <summary>
            Switches to the list of mod configs menu.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Menus.MainMenuHelpers.OpenModConfigUI(Terraria.ModLoader.Config.ModConfig)">
            <summary>
            Loads the UI for mod configs.
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Menus.MainMenuHelpers.OpenModBrowserMenu">
            <summary>
            Loads the mod browser menu.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Menus.MainMenuHelpers.OpenModBrowserWithDownloadList(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Loads the mod browser menu with a given set of mods to one-click bulk download
            (via. `ModMenuHelpers.ApplyModBrowserFilter(...)`).
            </summary>
            <param name="packTitle">Name of the set.</param>
            <param name="modNames">Mod (internal) names of the set.</param>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition">
            <summary>
            Mappings of menu UI classes to their respective `Main.menuMode` (or 888, if not relevant).
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UICharacterSelect">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIWorldSelect">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIManageControls">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIAchievementsMenu">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIMods">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIModSources">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UILoadModsProgress">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIBuildModProgress">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIErrorMessage">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIModBrowser">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIModInfo">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIManagePublished">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIUpdateMessage">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIInfoMessage">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIEnterPassphraseMenu">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIModPacks">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIEnterSteamIDMenu">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIExtractModProgress">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIDownloadProgress">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIUploadModProgress">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIDeveloperModeHelp">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIProgress">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIModConfig">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UIModConfigList">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition.UICreateMod">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs">
            <summary>
            Getters for menu UI objects (`UIstate` instances).
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UICharacterSelect">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIWorldSelect">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIManageControls">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIAchievementsMenu">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIMods">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UILoadModsProgress">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIModSources">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIBuildModProgress">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIErrorMessage">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIModBrowser">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIModInfo">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIManagePublished">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIUpdateMessage">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIInfoMessage">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIEnterPassphraseMenu">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIModPacks">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIEnterSteamIDMenu">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIExtractModProgress">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIUploadModProgress">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIDeveloperModeHelp">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIModConfig">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIModConfigList">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UICreateMod">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIProgress">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Menus.MenuUIs.UIDownloadProgress">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Menus.ModMenuHelpers">
            <summary>
            Assorted static "helper" functions pertaining to the mod list menu.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Menus.ModMenuHelpers.ApplyModBrowserFilter(System.String,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Filters the mod browser mod list to a specific set of mods, or none.
            </summary>
            <param name="filterName">Name of the filter (appears on the Download All button).</param>
            <param name="isFiltered">Indicates whether to simply clear the filter list and filtered state.</param>
            <param name="modNames">List of (internal) mod names to filter the list to.</param>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Menus.ModMenuHelpers.GetModFile(Terraria.UI.UIState)">
            <summary>
            Retrieves the file data for a given mod within a given mod-representing menu UI (typically the Mod Info menu page).
            </summary>
            <param name="ui"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Menus.ModMenuHelpers.GetModName(Terraria.UI.UIState,Terraria.UI.UIState)">
            <summary>
            Gets the mod name of a mod-representing menu UI (sometimes needs the previous UI for context).
            </summary>
            <param name="prevUi"></param>
            <param name="currUi"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Menus.ModMenuHelpers.GetModDescriptionFromCurrentMenuUI(System.String@)">
            <summary>
            Gets the shown description text from the given mod-representing UI, if applicable.
            </summary>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Mods.ModBoilerplateHelpers">
            <summary>
            Assorted static "helper" functions for alleviating tedious "boilerplate" code.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Mods.ModBoilerplateHelpers.HandleModCall(System.Type,System.Object[])">
            <summary>
            Allows using a class to bind its public static methods as `Mod.Call(...)` bindings (complete with parameter
            validations). Meant to be called within `Mod.Call(...)`.
            </summary>
            <param name="apiClassType">`Type` of class to use for defining API bindings.</param>
            <param name="args"></param>
            <returns>API binding call return result. Should be piped out from `Mod.Call(...)` in turn.</returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Mods.ModHelpers">
            <summary>
            Assorted static "helper" functions pertaining to mods.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Mods.ModHelpers.UnsafeLoadFileFromMod(Terraria.ModLoader.Core.TmodFile,System.String)">
            <summary>
            Loads a file contained within a given mod file (.tmod).
            </summary>
            <param name="tmod"></param>
            <param name="fileName"></param>
            <returns>Byte data of the file.</returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Mods.BasicModInfo">
            <summary>
            Very basic informational representation of a given mod.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Mods.BasicModInfo.DisplayName">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Mods.BasicModInfo.Authors">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Mods.BasicModInfo.Version">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Mods.BasicModInfo.Description">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Mods.BasicModInfo.Homepage">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.Mods.BasicModInfo.IsBadMod">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Mods.BasicModInfo.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.Version,System.String,System.String)">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Mods.ModIdentityHelpers">
            <summary>
            Assorted static "helper" functions pertaining to mod identification.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Mods.ModIdentityHelpers.IsLoadedModProperlyPresented(System.String)">
            <summary>
            Reports whether a given mod (by the given internal name) is "properly presented": Has a valid description,
            homepage, and any other needed checks (in future considerations).
            </summary>
            <param name="modName"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Mods.ModIdentityHelpers.IsListModProperlyPresented(System.String,System.Action{System.Boolean})">
            <summary>
            Reports whether a given mod (by the given internal name), once loaded, is "properly presented": Has a valid
            description, homepage, and any other needed checks (in future considerations).
            </summary>
            <param name="modName"></param>
            <param name="callback"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Mods.ModIdentityHelpers.IsProperlyPresented(HamstarHelpers.Helpers.TModLoader.Mods.BasicModInfo)">
            <summary>
            Reports whether a given mod (by the given mod information entry) is "properly presented": Has a valid description,
            homepage, and any other needed checks (in future considerations).
            </summary>
            <param name="modInfo"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.Mods.ModListHelpers">
            <summary>
            Assorted static "helper" functions pertaining to mod list building.
            </summary>
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Mods.ModListHelpers.GetAllLoadedModsPreferredOrder">
            <summary>
            Gets the "preferred" order of all loaded mods for listing use (subjective; not relevant to internal load order).
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Mods.ModListHelpers.GetLoadedModsAndBuildInfo">
            <summary>
            Gets a map of loaded mods with their build information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Mods.ModListHelpers.GetLoadedModNamesWithBuildProps">
            <summary>
            Gets a map of all loaded mods by name with their build information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.Mods.ModListHelpers.GetLoadedModsByAuthor">
            <summary>
            Gets a map of loaded mods with their authors.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.TModLoader.TmlHelpers">
            <summary>
            Assorted static "helper" functions pertaining to tModLoader.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to tModLoader.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.TModLoader.TmlHelpers.ConfigRelativeFolder">
            <summary>
            Path to config files.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.TmlHelpers.ExitToDesktop(System.Boolean)">
            <summary>
            Exits the game to desktop.
            </summary>
            <param name="save">Saves settings or world state.</param>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.TmlHelpers.ExitToMenu(System.Boolean)">
            <summary>
            Exits to the main menu.
            </summary>
            <param name="save">Saves settings or world state.</param>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.TmlHelpers.SafelyGetInstance``1">
            <summary>
            Gets the singleton instance of a given class type. If no such instance exists, one is created and registered.
            Warning: Avoid calling ContentInstance.Register(...) for this class. Use caution with tModLoader's singletons.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.TmlHelpers.SafelyGetInstanceForType(System.Type)">
            <summary>
            Gets the singleton instance of a given class type. If no such instance exists, one is created and registered.
            Note: Avoid calling ContentInstance.Register(...) for this class after.
            </summary>
            <param name="classType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.TmlHelpers.SafelyGetModPlayer(Terraria.Player,Terraria.ModLoader.Mod,System.String)">
            <summary>
            Provides an alternative to `Player.GetModPlayer(...)` to ensure the given player is properly loaded. Addresses some
            confusing types of errors.
            </summary>
            <param name="player"></param>
            <param name="mod"></param>
            <param name="modPlayerName"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.TmlHelpers.SafelyGetModPlayer``1(Terraria.Player)">
            <summary>
            Provides an alternative to `Player.GetModPlayer(...)` to ensure the given player is properly loaded. Addresses some
            confusing types of errors.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.TModLoader.TmlHelpers.SafelyGetRand">
            <summary>
            Ensures a valid randomizer. Typically returns `Main.rand`.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.UI.UIHelpers">
            <summary>
            Assorted static "helper" functions pertaining to the in-game UI (positions, interactions, etc.).
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.UI.UIHelpers.MinScreenWidth">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.UI.UIHelpers.MinScreenHeight">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.UI.UIHelpers.MaxScreenWidth">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.UI.UIHelpers.MaxScreenHeight">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.UI.UIHelpers.MinScreenWidthTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.UI.UIHelpers.MinScreenHeightTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.UI.UIHelpers.MaxScreenWidthTiles">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.UI.UIHelpers.MaxScreenHeightTiles">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.UI.UIHelpers.GetScreenSize">
            <summary>
            Gets the current screen size, factoring zoom.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.UI.UIHelpers.GetWorldFrameOfScreen">
            <summary>
            Gets the screen dimensions (factoring zoom) within world space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.UI.UIHelpers.ConvertToScreenPosition(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Converts a given screen position to world coordinates (factoring zoom).
            </summary>
            <param name="worldPos"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.UI.UIHelpers.GetWorldMousePosition">
            <summary>
            Converts the mouse to world coordinates (factoring screen zoom).
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.UI.UIHelpers.JustPressedKey(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Reports whether a given keyboard key was just pressed. Used primarily for text field inputs.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.UI.UIHelpers.GetHoverTipPosition(System.String)">
            <summary>
            Gets the position to use to display a given string of text near the mouse position so as to fit on screen.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.UI.UIHelpers.MouseInRectangle(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Indicates if the mouse is within a given screen rectangle.
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.User.UserHelpers">
            <summary>
            Assorted static "helper" functions pertaining to the concept of "users" (corrently supports only a single,
            config-defined "priviledged" user).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.User.UserHelpers.HasBasicServerPrivilege(Terraria.Player)">
            <summary>
            Indicates if the given player has special priviledge on a server. Currently, this is only defined by a config
            setting (`PrivilegedUserId`) using the user's internal unique ID (see `PlayerIdentityHelpers.GetUniqueId()`).
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.World.WorldRegionFlags">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldRegionFlags.Overworld">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldRegionFlags.Sky">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldRegionFlags.Ocean">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldRegionFlags.OceanEast">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldRegionFlags.OceanWest">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldRegionFlags.Cave">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldRegionFlags.CaveDirt">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldRegionFlags.CavePreRock">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldRegionFlags.CaveRock">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldRegionFlags.CaveLava">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldRegionFlags.Hell">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.World.VanillaBiome">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Forest">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Space">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Ocean">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Cave">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.RockCave">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Hell">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Desert">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Snow">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Cold">
            @private
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Mushroom">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Jungle">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Meteor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Corruption">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Crimson">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Hallow">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Granite">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Marble">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.SpiderNest">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Dungeon">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaBiome.Temple">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.World.VanillaSurfaceBiome">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSurfaceBiome.Forest">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSurfaceBiome.Desert">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSurfaceBiome.Cold">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSurfaceBiome.Mushroom">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSurfaceBiome.Jungle">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSurfaceBiome.Ocean">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSurfaceBiome.Space">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSurfaceBiome.Meteor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSurfaceBiome.Corruption">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSurfaceBiome.Crimson">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSurfaceBiome.Hallow">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.World.VanillaUndergroundBiome">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaUndergroundBiome.Cave">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaUndergroundBiome.Desert">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaUndergroundBiome.Cold">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaUndergroundBiome.Mushroom">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaUndergroundBiome.Granite">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaUndergroundBiome.Marble">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaUndergroundBiome.SpiderNest">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaUndergroundBiome.Dungeon">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaUndergroundBiome.Jungle">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaUndergroundBiome.Temple">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaUndergroundBiome.Corruption">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaUndergroundBiome.Crimson">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaUndergroundBiome.Hallow">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaUndergroundBiome.Hell">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.World.VanillaHardModeSurfaceBiome">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaHardModeSurfaceBiome.Corruption">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaHardModeSurfaceBiome.Crimson">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaHardModeSurfaceBiome.Hallow">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.World.VanillaHardModeUndergroundBiome">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaHardModeUndergroundBiome.Temple">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaHardModeUndergroundBiome.Corruption">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaHardModeUndergroundBiome.Crimson">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaHardModeUndergroundBiome.Hallow">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.World.VanillaHardModeConvertibleBiome">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaHardModeConvertibleBiome.Forest">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaHardModeConvertibleBiome.Cave">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaHardModeConvertibleBiome.Desert">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaHardModeConvertibleBiome.Cold">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.World.WorldSize">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldSize.SubSmall">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldSize.Small">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldSize.Medium">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldSize.Large">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldSize.SuperLarge">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Helpers.World.VanillaSectionalBiome">
            @private
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSectionalBiome.Forest">
            @private
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSectionalBiome.Space">
            @private
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSectionalBiome.Ocean">
            @private
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSectionalBiome.Cave">
            @private
        </member>
        <member name="F:HamstarHelpers.Helpers.World.VanillaSectionalBiome.Hell">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.World.WorldFileHelpers">
            <summary>
            Assorted static "helper" functions pertaining to world files (.wld or .twld).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldFileHelpers.EraseWorld(Terraria.IO.WorldFileData,System.Boolean)">
            <summary>
            Deletes a given world file. Use with care.
            </summary>
            <param name="data"></param>
            <param name="alsoBak"></param>
        </member>
        <member name="T:HamstarHelpers.Helpers.World.WorldHelpers">
            <summary>
            Assorted static "helper" functions pertaining to the current world.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to the current world.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.WorldSizeSmall">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.WorldSizeMedium">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.WorldSizeLarge">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.SurfaceLayerTopTileY">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.SurfaceLayerBottomTileY">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.DirtLayerTopTileY">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.DirtLayerBottomTileY">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.RockLayerTopTileY">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.RockLayerBottomTileY">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.SkyLayerTopTileY">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.SkyLayerBottomTileY">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.UnderworldLayerTopTileY">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.UnderworldLayerBottomTileY">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.BeachWestTileX">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.BeachEastTileX">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.GetUniqueIdForCurrentWorld(System.Boolean)">
            <summary>
            Gets a unique identifier for the current loaded world.
            </summary>
            <param name="asFileName"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.GetSize">
            <summary>
            Gets the size (range) of the current world.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.GetRegion(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets the identifiable region of a given point in the world.
            </summary>
            <param name="worldPos"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.IsSky(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Indicates if the given position is in the sky/space.
            </summary>
            <param name="worldPos"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.IsOverworld(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Indicates if the given position is above the world's surface, but not in the sky.
            </summary>
            <param name="worldPos"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.IsAboveWorldSurface(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Indicates if the given position is above the world's surface.
            </summary>
            <param name="worldPos"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.IsDirtLayer(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Indicates if the given position is within the underground dirt layer (beneath elevation 0, above the rock layer).
            </summary>
            <param name="worldPos"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.IsPreRockLayer(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Indicates if the given position is within the underground pre-rock layer (background appears like dirt,
            but the game recognizes the 'rockLayer' depth).
            </summary>
            <param name="worldPos"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.IsRockLayer(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Indicates if the given position is within the underground rock layer.
            </summary>
            <param name="worldPos"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.IsLavaLayer(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Indicates if the given position is within the underground lava layer.
            </summary>
            <param name="worldPos"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.IsWithinUnderworld(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Indicates if the given position is within the underworld (hell).
            </summary>
            <param name="worldPos"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.IsBeach(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Indicates if the given position is at a beach/ocean area.
            </summary>
            <param name="worldPos"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.IsBeachRegion(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Indicates if the given position is within the region of a beach (regardless of elevation).
            </summary>
            <param name="worldPos"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.DropToGround(Microsoft.Xna.Framework.Vector2,System.Boolean,HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Drops from a given point to the ground.
            </summary>
            <param name="worldPos"></param>
            <param name="invertGravity"></param>
            <param name="ground">Tile pattern checker to define what "ground" is.</param>
            <param name="groundPos"></param>
            <returns>`true` if a ground point was found within world boundaries.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldHelpers.DropToGround(Microsoft.Xna.Framework.Vector2,System.Boolean,HamstarHelpers.Classes.Tiles.TilePattern.TilePattern,System.Int32,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Drops from a given point to the ground.
            </summary>
            <param name="worldPos"></param>
            <param name="invertGravity"></param>
            <param name="ground">Tile pattern checker to define what "ground" is.</param>
            <param name="furthestTileY">Limit to check tiles down (or up) to before giving up.</param>
            <param name="groundPos"></param>
            <returns>`true` if a ground point was found within world boundaries.</returns>
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.SurfaceLayerTop">
            @private
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.SurfaceLayerBottom">
            @private
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.DirtLayerTop">
            @private
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.DirtLayerBottom">
            @private
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.RockLayerTop">
            @private
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.RockLayerBottom">
            @private
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.SkyLayerTop">
            @private
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.SkyLayerBottom">
            @private
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.UnderworldLayerTop">
            @private
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.UnderworldLayerBottom">
            @private
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.IsBeachWest">
            @private
        </member>
        <member name="P:HamstarHelpers.Helpers.World.WorldHelpers.IsBeachEast">
            @private
        </member>
        <member name="T:HamstarHelpers.Helpers.World.WorldLocationHelpers">
            <summary>
            Assorted static "helper" functions pertaining to locating things in the world.
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to locating things in the world.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldLocationHelpers.GetEastBeach(System.Int32@,System.Int32@)">
            <summary>
            Gets the first (sand) tile of the eastern beach.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldLocationHelpers.GetWestBeach(System.Int32@,System.Int32@)">
            <summary>
            Gets the first (sand) tile of the western beach.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldLocationHelpers.GetGiantTrees">
            <summary>
            Gets rectangles containing all giant trees in the world.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.World.WorldStateHelpers">
            <summary>
            Assorted static "helper" functions pertaining to the current world's state.
            </summary>
            @private
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldStateHelpers.VanillaDayDuration">
            <summary>
            Tick duration of a daytime period.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Helpers.World.WorldStateHelpers.VanillaNightDuration">
            <summary>
            Tick duration of a nighttime period.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldStateHelpers.IsBeingInvaded">
            <summary>
            Indicates if an invasion is in session.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldStateHelpers.GetElapsedPlayTime">
            <summary>
            Returns elapsed time having played the current world (current session).
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldStateHelpers.GetElapsedHalfDays">
            <summary>
            Returns elapsed "half" days (day and night cycles; not actual halfway points of full day cycles).
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.World.WorldStateHelpers.GetDayOrNightPercentDone">
            <summary>
            Returns percent of day or night completed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.XNA.XNAColorHelpers">
            <summary>
            Assorted static "helper" functions pertaining to XNA's Color struct. 
            </summary>
            <summary>
            Assorted static "helper" functions pertaining to XNA's Color struct. 
            </summary>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.Add(Microsoft.Xna.Framework.Color,System.Int32,System.Boolean)">
            <summary>
            Adds to the RGB(A) of a color by a fixed amount.
            </summary>
            <param name="c1"></param>
            <param name="amt"></param>
            <param name="alsoAlpha"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.Add(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Boolean)">
            <summary>
            Adds 2 colors together directly.
            </summary>
            <param name="c1"></param>
            <param name="c2"></param>
            <param name="alsoAlpha"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.Mul(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Multiplies 2 colors together, as if RGB(A) were percent values.
            </summary>
            <param name="c1"></param>
            <param name="c2"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.AddGlow(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Boolean)">
            <summary>
            Adds one color to another so as to make it glow by that amount.
            </summary>
            <param name="baseColor"></param>
            <param name="glowColor"></param>
            <param name="alsoAlpha"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.BrightnessRGB(Microsoft.Xna.Framework.Color)">
            <summary>
            Returns a percent value gauging the brightness of a given color (according to the human eye).
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.SubtractRGBA(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Subtracts 1 color from another as much as it will allow (including alpha channel).
            </summary>
            <param name="c1"></param>
            <param name="c2"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.SubtractRGB(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Subtracts 1 color from another as much as it will allow (minus alpha channel).
            </summary>
            <param name="c1"></param>
            <param name="c2"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.DistanceRGBA(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Produces a color representing how far apart each RGBA channel is between 2 given colors.
            </summary>
            <param name="c1"></param>
            <param name="c2"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.DistanceRGB(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Produces a color representing how far apart each RGB channel is between 2 given colors.
            </summary>
            <param name="c1"></param>
            <param name="c2"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.SumRGBA(Microsoft.Xna.Framework.Color)">
            <summary>
            Adds together a color's RGBA.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.SumRGB(Microsoft.Xna.Framework.Color)">
            <summary>
            Adds together a color's RGB.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.AvgRGBA(Microsoft.Xna.Framework.Color)">
            <summary>
            Gets the averaged value of a color's RGBA.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.AvgRGB(Microsoft.Xna.Framework.Color)">
            <summary>
            Gets the averaged value of a color's RGB.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.FlattenColor(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Shifts (lerps) a given color into another by the amount of the other's opacity.
            </summary>
            <param name="c1"></param>
            <param name="c2"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.DifferenceRGBA(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Gets the difference between 2 colors (including alpha channel).
            </summary>
            <param name="c1"></param>
            <param name="c2"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAColorHelpers.DifferenceRGB(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Get the difference between 2 colors (minus alpha channel).
            </summary>
            <param name="c1"></param>
            <param name="c2"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Helpers.XNA.XNAHelpers">
            <summary>
            Assorted static "helper" functions pertaining to XNA. 
            </summary>
            @private
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAHelpers.ScanRectangleWithout(System.Func{System.Int32,System.Int32,System.Boolean},Microsoft.Xna.Framework.Rectangle,System.Nullable{Microsoft.Xna.Framework.Rectangle})">
            <summary>
            "Scans" a rectangle with a provided custom function, returning on the function reporting success. Skips over
            another given rectangle, if overlapping.
            </summary>
            <param name="scanner"></param>
            <param name="rect"></param>
            <param name="notRect"></param>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAHelpers.IsMainSpriteBatchBegun(System.Boolean@)">
            <summary>
            Reports if `Main.SpriteBatch` has begun drawing.
            </summary>
            <param name="isBegun"></param>
            <returns>Could not determine one way or the other.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAHelpers.DrawBatch(System.Action{Microsoft.Xna.Framework.Graphics.SpriteBatch},System.Boolean@,System.Boolean)">
            <summary>
            Draws to the main SpriteBatch by way of a callback. Attempts to resolve when to draw based on the SpriteBatch's
            `Begun()` state.
            </summary>
            <param name="draw"></param>
            <param name="isBegun">Indicates that the SpriteBatch was already `Begun()`.</param>
            <param name="forceDraw">Forces drawing even when the SpriteBatch is already `Begun()`.</param>
            <returns>`true` if no issues occurred with the drawing.</returns>
        </member>
        <member name="M:HamstarHelpers.Helpers.XNA.XNAHelpers.DrawBatch(System.Action{Microsoft.Xna.Framework.Graphics.SpriteBatch},Microsoft.Xna.Framework.Graphics.SpriteSortMode,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Graphics.DepthStencilState,Microsoft.Xna.Framework.Graphics.RasterizerState,Microsoft.Xna.Framework.Graphics.Effect,Microsoft.Xna.Framework.Matrix,System.Boolean@,System.Boolean,System.Boolean)">
            <summary>
            Draws to the main SpriteBatch by way of a callback. Attempts to resolve when to draw based on the SpriteBatch's
            `Begun()` state. If the SpriteBatch needs to be begun anew, the given set of relevant parameters will be applied.
            </summary>
            <param name="draw"></param>
            <param name="sortMode"></param>
            <param name="blendState"></param>
            <param name="samplerState"></param>
            <param name="depthStencilState"></param>
            <param name="rasterizerState"></param>
            <param name="effect"></param>
            <param name="transformMatrix"></param>
            <param name="isBegun">Indicates that the SpriteBatch was already `Begun()`.</param>
            <param name="forceBeginAnew">Forces the SpriteBatch to `Begin()`.</param>
            <param name="forceDraw">Forces drawing even wehn the SpriteBatch is already `Begun()`.</param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Internals.ControlPanel.ModControlPanel.ModControlPanelLogic">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.ControlPanel.ModControlPanel.UIModControlPanelTab">
            @private
            @private
            @private
            @private
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.ControlPanel.UIControlPanel">
            @private
            @private
            @private
            @private
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.ControlPanel.UIControlPanelTab">
            @private
        </member>
        <member name="P:HamstarHelpers.Internals.ControlPanel.UIControlPanelTab.Theme">
            @private
        </member>
        <member name="P:HamstarHelpers.Internals.ControlPanel.UIControlPanelTab.IsInitialized">
            @private
        </member>
        <member name="M:HamstarHelpers.Internals.ControlPanel.UIControlPanelTab.OnInitialize">
            @private
        </member>
        <member name="M:HamstarHelpers.Internals.ControlPanel.UIControlPanelTab.OnInitializeMe">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.Inbox.InboxControl">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.Logic.PlayerLogic">
            @private
            @private
            @private
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.Logic.WorldLogic">
            @private
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.Menus.Menus">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.Menus.Support.SupportInfoDisplay">
            @private
            @private
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.ModTags.Base.MenuContext.ModTagsMenuContextBase">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.ModTags.Base.UI.Buttons.UICategoryMenuButton">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.ModTags.Base.UI.Buttons.UIResetTagsMenuButton">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.ModTags.Base.UI.Buttons.UITagMenuButton">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.ModTags.ModBrowser.Manager.ModTagsModBrowserManager">
            @private
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.ModTags.ModBrowser.Manager.ModTagsModBrowserManager.FilteredModsHandler">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.ModTags.ModBrowser.MenuContext.ModTagsModBrowserMenuContext">
            @private
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.ModTags.ModInfo.MenuContext.ModTagsEditorMenuContext">
            @private
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.ModTags.ModInfo.UI.Buttons.UIEditModeMenuButton">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.NetProtocols.DataDumpProtocol">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.NetProtocols.ItemNoGrabProtocol">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.NetProtocols.PingProtocol">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.NetProtocols.PlayerDataProtocol">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.NetProtocols.PlayerNewIdProtocol">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.NetProtocols.PlayerOldIdProtocol">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.NetProtocols.PlayerPermaDeathProtocol">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.NetProtocols.WorldDataProtocol">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.WebRequests.GlobalInboxLoadHookArguments">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.WebRequests.GetGlobalInbox">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.WebRequests.ModInfoListLoadHookArguments">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.WebRequests.GetModInfo">
            @private
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.WebRequests.ModTagsDatabase">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.WebRequests.ModTagsLoadHookArguments">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.WebRequests.GetModTags">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.WebRequests.GithubModIssueReportData">
            @private
        </member>
        <member name="F:HamstarHelpers.Internals.WebRequests.GithubModIssueReportData.githubuser">
            @private
        </member>
        <member name="F:HamstarHelpers.Internals.WebRequests.GithubModIssueReportData.githubproject">
            @private
        </member>
        <member name="F:HamstarHelpers.Internals.WebRequests.GithubModIssueReportData.title">
            @private
        </member>
        <member name="F:HamstarHelpers.Internals.WebRequests.GithubModIssueReportData.body">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.WebRequests.PostGithubModIssueReports">
            @private
        </member>
        <member name="T:HamstarHelpers.Internals.WebRequests.PostModTagsData">
            @private
        </member>
        <member name="F:HamstarHelpers.Internals.WebRequests.PostModTagsData.modname">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Internals.WebRequests.PostModTagsData.modtags">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Internals.WebRequests.PostModInfo">
            @private
        </member>
        <member name="T:HamstarHelpers.Items.GeoResonantOrbItem">
            <summary>
            Supplies an ingredient item meant to exist as the generic form of Orbs (e.g. Shadow Orbs). Another MacGuffin item.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Items.GeoResonantOrbItem.SetStaticDefaults">
            @private
        </member>
        <member name="M:HamstarHelpers.Items.GeoResonantOrbItem.SetDefaults">
            @private
        </member>
        <member name="T:HamstarHelpers.Items.MagiTechScrapItem">
            <summary>
            Supplies an item for use as an ingredient for any magic/technology recipe/consumable use. A MacGuffin item.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Items.MagiTechScrapItem.Create(Microsoft.Xna.Framework.Vector2,System.Int32)">
            <summary></summary>
            <param name="pos"></param>
            <param name="stack"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Items.MagiTechScrapItem.SetStaticDefaults">
            @private
        </member>
        <member name="M:HamstarHelpers.Items.MagiTechScrapItem.SetDefaults">
            @private
        </member>
        <member name="M:HamstarHelpers.Items.MagiTechScrapItem.AddRecipes">
            @private
        </member>
        <member name="T:HamstarHelpers.ModHelpersCustomPlayer">
            @private
        </member>
        <member name="T:HamstarHelpers.ModHelpersItem">
            @private
        </member>
        <member name="T:HamstarHelpers.ModHelpersMod">
            @private
            @private
            @private
            @private
            @private
            @private
            @private
        </member>
        <member name="T:HamstarHelpers.ModHelpersData">
            @private
        </member>
        <member name="T:HamstarHelpers.ModHelpersNPC">
            @private
            @private
        </member>
        <member name="T:HamstarHelpers.ModHelpersPlayer">
            @private
        </member>
        <member name="T:HamstarHelpers.ModHelpersRecipe">
            @private
        </member>
        <member name="T:HamstarHelpers.ModHelpersWorld">
            @private
        </member>
        <member name="T:HamstarHelpers.Services.AnimatedColor.AnimatedColors">
            <summary>
            Supplies a handy way to "animate" (lerp between) colors to make animations. Adjustable.
            </summary>
            <summary>
            Supplies a simple, handy way to "animate" (lerp between) colors to make animations. Adjustable.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedColor.AnimatedColors.Alert">
            <summary>
            Color animation preset for alert-type effects.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedColor.AnimatedColors.Ember">
            <summary>
            Color animation preset for glowing ember-like effect.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedColor.AnimatedColors.Strobe">
            <summary>
            Color animation preset to make a strobe-like effect.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedColor.AnimatedColors.Fire">
            <summary>
            Color animation preset to resemble fire.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedColor.AnimatedColors.Water">
            <summary>
            Color animation preset of something water-like.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedColor.AnimatedColors.Air">
            <summary>
            Color animation preset of something air-themed.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedColor.AnimatedColors.Ether">
            <summary>
            Color animation preset of something etherial.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedColor.AnimatedColors.Disco">
            <summary>
            Color animation preset of something disco-like.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedColor.AnimatedColors.DiscoFast">
            <summary>
            Color animation preset of something disco-like at high speed.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.AnimatedColor.AnimatedColors.Create(System.Int32,Microsoft.Xna.Framework.Color[])">
            <summary>
            Creates an animated color object.
            </summary>
            <param name="durationPerColor">Ticks of time to spend between each color.</param>
            <param name="colors">Sequence of colors to loop through.</param>
            <returns></returns>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedColor.AnimatedColors.ColorDuration">
            <summary>
            Duration (in ticks) to spend between each color.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedColor.AnimatedColors.Progress">
            <summary>
            Percent of duration elapsed between any given 2 colors.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedColor.AnimatedColors.CyclePosition">
            <summary>
            Which color in the cycle is being animated.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedColor.AnimatedColors.CurrentColor">
            @private
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedColor.AnimatedColors.Colors">
            <summary>
            Colors sequence to animate with.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.AnimatedColor.AnimatedColors.#ctor(System.Int32,Microsoft.Xna.Framework.Color[])">
            <summary></summary>
            <param name="colorDuration"></param>
            <param name="colors"></param>
        </member>
        <member name="T:HamstarHelpers.Services.AnimatedTexture.AnimatedTexture">
            <summary>
            Supplies a handy way to animate between frames within a given texture. Adjustable.
            </summary>
            <summary>
            Supplies a handy way to animate between frames within a given texture. Adjustable.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.AnimatedTexture.AnimatedTexture.Create(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Func{HamstarHelpers.Services.AnimatedTexture.AnimatedTexture,System.ValueTuple{System.Int32,System.Int32}})">
            <summary>
            Creates an animated texture object.
            </summary>
            <param name="frames"></param>
            <param name="maxFrames">Ticks of time to spend between each frame.</param>
            <param name="animator">Number of frames to cycle through.</param>
            <returns></returns>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedTexture.AnimatedTexture.FramesTexture">
            <summary>
            Frames texture.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedTexture.AnimatedTexture.MaxFrames">
            <summary>
            Max number of frames to animate.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedTexture.AnimatedTexture.Animator">
            <summary>
            Function controlling how frames animate.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedTexture.AnimatedTexture.CurrentFrameTicksElapsed">
            <summary>
            Elapsed ticks for the current frame.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.AnimatedTexture.AnimatedTexture.CurrentFrame">
            <summary>
            Which frame in the cycle is being animated.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.AnimatedTexture.AnimatedTexture.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Func{HamstarHelpers.Services.AnimatedTexture.AnimatedTexture,System.ValueTuple{System.Int32,System.Int32}})">
            <summary></summary>
            <param name="frameTex"></param>
            <param name="maxFrames"></param>
            <param name="animator"></param>
        </member>
        <member name="M:HamstarHelpers.Services.AnimatedTexture.AnimatedTexture.GetFrame">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Services.AnimatedTexture.AnimatedTexture.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Single,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{Microsoft.Xna.Framework.Vector2},System.Int32)">
            <summary>
            Draws the current animator at a given screen position.
            </summary>
            <param name="sb"></param>
            <param name="pos"></param>
            <param name="color"></param>
            <param name="rotation"></param>
            <param name="origin"></param>
            <param name="scale"></param>
            <param name="spriteFx"></param>
        </member>
        <member name="M:HamstarHelpers.Services.AnimatedTexture.AnimatedTexture.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Rectangle,System.Nullable{Microsoft.Xna.Framework.Color},System.Single,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Int32)">
            <summary>
            Draws the current animator at a given screen rectangle.
            </summary>
            <param name="sb"></param>
            <param name="destRect"></param>
            <param name="color"></param>
            <param name="rotation"></param>
            <param name="origin"></param>
            <param name="spriteFx"></param>
        </member>
        <member name="T:HamstarHelpers.Services.Configs.ModConfigStack">
            <summary>
            Supplies a method for programmatically applying config settings changes (internally as an overlaying stack) without
            affecting the user's own ModConfig.
            </summary>
            <summary>
            Supplies a method for programmatically applying config settings changes (internally as an overlaying stack) without
            affecting the user's own ModConfig.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Configs.ModConfigStack.GetStackedOrDefaultConfig``1">
            <summary>
            Gets either the merged stack of configs (not including the default), or else the default config (raw).
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.Configs.ModConfigStack.GetMergedConfigs``1">
            <summary>
            Downward merges the stack of a given config type. Includes the default ModConfig.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.Configs.ModConfigStack.GetMergedStackedConfigs``1">
            <summary>
            Downward merges the stack of a given config type. Excludes the default ModConfig itself.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.Configs.ModConfigStack.GetConfigAt``1(System.Int32)">
            <summary>
            Gets a config on the stack at the specified height (if present).
            </summary>
            <typeparam name="T"></typeparam>
            <param name="stackHeight"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.Configs.ModConfigStack.SetStackedConfig``1(``0,System.Int32)">
            <summary>
            Sets a config to exist on the stack at the specified height.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="config"></param>
            <param name="stackHeight"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Configs.ModConfigStack.SetStackedConfigChangesOnly``1(``0,System.Int32)">
            <summary>
            Sets a config to exist on the stack at the specified height. Any values of an existing config at the given stack
            height are preserved if they do not overlap with the latest changes.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="config"></param>
            <param name="stackHeight"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Configs.ModConfigStack.Uncache``1">
            <summary>
            Clears any cached merged stacks of the given config. Used when a config (or any of its stack) changes outside
            of SetConfig or SetAndMergeConfig.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:HamstarHelpers.Services.Configs.ModConfigStack.Uncache(System.Type)">
            <summary>
            Clears any cached merged stacks of the given config. Used when a config (or any of its stack) changes outside
            of SetConfig or SetAndMergeConfig.
            </summary>
            <param name="configType"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Configs.ModConfigStack.HamstarHelpers#Classes#Loadable#ILoadable#OnModsLoad">
            @private
        </member>
        <member name="M:HamstarHelpers.Services.Configs.ModConfigStack.HamstarHelpers#Classes#Loadable#ILoadable#OnPostModsLoad">
            @private
        </member>
        <member name="M:HamstarHelpers.Services.Configs.ModConfigStack.HamstarHelpers#Classes#Loadable#ILoadable#OnModsUnload">
            @private
        </member>
        <member name="T:HamstarHelpers.Services.Configs.StackableModConfig">
            <summary>
            Helps implement mod config stacking behavior. Replace your ModConfig classes with this class.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Configs.StackableModConfig.OnChanged">
            @private
        </member>
        <member name="M:HamstarHelpers.Services.Configs.StackableModConfig.OverlayChanges(HamstarHelpers.Services.Configs.StackableModConfig)">
            <summary>
            Convenience method for pulling changed settings from a given config instance into (the stack of) the current one.
            </summary>
            <param name="changes"></param>
        </member>
        <member name="T:HamstarHelpers.Services.DataStore.DataStore">
            <summary>
            Supplies a simple, global-use, object-based key-value dictionary for anyone to use. Nothing more.
            </summary>
            @private
        </member>
        <member name="M:HamstarHelpers.Services.DataStore.DataStore.Has(System.Object)">
            <summary>
            Indicates if data is stored with the given key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.DataStore.DataStore.Get``1(System.Object,``0@)">
            <summary>
            Gets data stored with the given key, if found.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="val"></param>
            <returns>`true` if found.</returns>
        </member>
        <member name="M:HamstarHelpers.Services.DataStore.DataStore.Set(System.Object,System.Object)">
            <summary>
            Sets data under a given key.
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:HamstarHelpers.Services.DataStore.DataStore.Remove(System.Object)">
            <summary>
            Removes data at a given key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.DataStore.DataStore.Add(System.Object,System.Double)">
            <summary>
            Adds the given amount to any data stored under the given key, if applicable (numeric).
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:HamstarHelpers.Services.DataStore.DataStore.Serialize">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Services.Debug.CustomHotkeys.CustomHotkeys">
            <summary>
            Provides a pair of hotkeys that may be dynamically bound with custom functions (mostly for debug use).
            </summary>
            @private
        </member>
        <member name="M:HamstarHelpers.Services.Debug.CustomHotkeys.CustomHotkeys.BindActionToKey1(System.String,System.Action)">
            <summary></summary>
            <param name="name"></param>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Debug.CustomHotkeys.CustomHotkeys.BindActionToKey2(System.String,System.Action)">
            <summary></summary>
            <param name="name"></param>
            <param name="action"></param>
        </member>
        <member name="T:HamstarHelpers.Services.Debug.DataDumper.DataDumper">
            <summary>
            Provides a service for supplying data sources that can be pulled from and collected into an on-demand dump as a file. Uses a dedicated
            folder at "ModLoader/Logs/Dumps". Primarily used for debugging.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Debug.DataDumper.DataDumper.DumpToLocalFile(System.String,System.String@)">
            <summary></summary>
            <param name="data"></param>
            <param name="fileNameWithExtension"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.Debug.DataDumper.DataDumper.GetRelativePath">
            <summary>
            Folder path of dump files relative to ModLoader: Logs/Dumps 
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.Debug.DataDumper.DataDumper.SetDumpSource(System.String,System.Func{System.String})">
            <summary>
            Sets a callback as a data source to output within the dump file with the given label (`name`).
            </summary>
            <param name="name"></param>
            <param name="dump"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Debug.DataDumper.DataDumper.DumpToFile(System.String@)">
            <summary>
            Dumps the outputs to a dump file.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Services.Debug.EntityData.EntityData">
            <summary>
            Provides functions for acquiring and dumping entity (NPC, Projectile, Item) data fields to file.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Debug.EntityData.EntityData.DumpAllNpcDataToJson">
            <summary>
            Dumps all NPC data to a JSON file in the ModLoader folder.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Debug.EntityData.EntityData.DumpAllItemDataToJson">
            <summary>
            Dumps all Item data to a JSON file in the ModLoader folder.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Debug.EntityData.EntityData.DumpAllProjectileDataToJson">
            <summary>
            Dumps all Projectile data to a JSON file in the ModLoader folder.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Services.EntityGroups.EntityGroupDependencies">
            <summary>
            Defines a set of entity groups.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Services.EntityGroups.EntityGroupMatcher`1">
            <summary>
            Wraps a function for matching entities for a given group.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.EntityGroupMatcher`1.MatcherFunc">
            <summary>
            Delegate for matching entity group entities. Receives an entity and the group's dependencies as parameters.
            Returns `true` if a match is found.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Services.EntityGroups.ItemGroupMatcher">
            <summary>
            An `EntityGroupMatcher` specifically for `Item`s.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.EntityGroups.ItemGroupMatcher.#ctor(System.Func{Terraria.Item,HamstarHelpers.Services.EntityGroups.EntityGroupDependencies,System.Boolean})">
            <summary></summary>
            <param name="matcherFun"></param>
        </member>
        <member name="T:HamstarHelpers.Services.EntityGroups.NPCGroupMatcher">
            <summary>
            An `EntityGroupMatcher` specifically for `NPC`s.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.EntityGroups.NPCGroupMatcher.#ctor(System.Func{Terraria.NPC,HamstarHelpers.Services.EntityGroups.EntityGroupDependencies,System.Boolean})">
            <summary></summary>
            <param name="matcherFun"></param>
        </member>
        <member name="T:HamstarHelpers.Services.EntityGroups.ProjectileGroupMatcher">
            An `EntityGroupMatcher` specifically for `Projectile`s.
        </member>
        <member name="M:HamstarHelpers.Services.EntityGroups.ProjectileGroupMatcher.#ctor(System.Func{Terraria.Projectile,HamstarHelpers.Services.EntityGroups.EntityGroupDependencies,System.Boolean})">
            <summary></summary>
            <param name="matcherFun"></param>
        </member>
        <member name="T:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs">
            <summary></summary>
            <summary></summary>
            <summary></summary>
            <summary></summary>
            <summary></summary>
            <summary></summary>
            <summary></summary>
            <summary></summary>
            <summary></summary>
            <summary></summary>
            <summary></summary>
            <summary></summary>
            <summary></summary>
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyWingAccessory">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanillaMovementAccessory">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanillaCombatAccessory">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanillaYoyoAccessory">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanillaHealthOrManaAccessory">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanillaConstructionAccessory">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanillaInformationAccessory">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanillaFishingAccessory">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanillaMusicBoxAccessory">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanillaExpertAccessory">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyWeapon">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyTool">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanillaExplosive">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyAccessory">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyArmor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyGarment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyPotion">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyAmmo">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyAmmoAmmo">
            <summary>Ammo that isn't weird (no gels, coins, bones, etc.)</summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyNotAmmo">
            <summary>Ammo that isn't ammo (gels, coins, bones, etc.)</summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanity">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanityAccessory">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanityGarment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyHeavyArmor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyOreBarEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyCactusEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyMeteorEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyJungleEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyBeeEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyBoneEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyHellstoneEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyFrostCoreEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyForbiddenEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyHallowEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyShellEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyLuminiteOreEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyWoodEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyCopperOrTinEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyIronOrLeadEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnySilverOrTungstenEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyGoldOrPlatinumEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyDemoniteOrCrimtaneEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyMeteorOrJungleOrBoneOrBeeEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyCobaltOrPalladiumEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyMythrilOrOrichalcumEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyAdamantiteOrTitaniumEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyFrostCoreOrForbiddenEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyChlorophyteOrShroomiteOrSpectreEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyCelestialEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyOreEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyNonOreCraftedEquipment">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyItem">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyPlaceable">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyTile">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyWall">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyWood">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyOreBar">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyWorkbench">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyAnvil">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyForge">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyTable">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyAlchemyStation">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyHardmodeCraftingStation">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanillaThemedCraftingStation">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyMiscCraftingStation">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyChest">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyWireComponent">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyTrapChest">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanillaWireTrap">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyVanillaWireSwitch">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyLight">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyCandle">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyWallTorch">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyCampfire">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ItemGroupIDs.AnyStatue">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Services.EntityGroups.Definitions.NPCGroupIDs">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.NPCGroupIDs.AnyFriendlyNPC">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.NPCGroupIDs.AnyHostileNPC">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.NPCGroupIDs.AnyTownNPC">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.NPCGroupIDs.AnyBoss">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.NPCGroupIDs.AnySlime">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Services.EntityGroups.Definitions.ProjectileGroupIDs">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.Definitions.ProjectileGroupIDs.AnyExplosive">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Services.EntityGroups.EntityGroups">
            <summary>
            Supplies collections of named entity groups based on traits shared between entities. Groups are either items, NPCs,
            or projectiles. Must be enabled on mod load to be used (note: collections may require memory).
            </summary>
            <summary>
            Supplies collections of named entity groups based on traits shared between entities. Groups are either items, NPCs,
            or projectiles. Must be enabled on mod load to be used (note: collections may require memory).
            </summary>
            <summary>
            Supplies collections of named entity groups based on traits shared between entities. Groups are either items, NPCs,
            or projectiles. Must be enabled on mod load to be used (note: collections may require memory).
            </summary>
            <summary>
            Supplies collections of named entity groups based on traits shared between entities. Groups are either items, NPCs,
            or projectiles. Must be enabled on mod load to be used (note: collections may require memory).
            </summary>
            <summary>
            Supplies collections of named entity groups based on traits shared between entities. Groups are either items, NPCs,
            or projectiles. Must be enabled on mod load to be used (note: collections may require memory).
            </summary>
            <summary>
            Supplies collections of named entity groups based on traits shared between entities. Groups are either items, NPCs,
            or projectiles. Must be enabled on mod load to be used (note: collections may require memory).
            </summary>
            <summary>
            Supplies collections of named entity groups based on traits shared between entities. Groups are either items, NPCs,
            or projectiles. Must be enabled on mod load to be used (note: collections may require memory).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.EntityGroups.EntityGroups.Enable">
            <summary>
            Enables entity groups. Must be called before all mod load and setup functions are called.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.EntityGroups.EntityGroups.AddCustomItemGroup(System.String,System.String[],HamstarHelpers.Services.EntityGroups.ItemGroupMatcher)">
            <summary>
            Defines a custom item group to add to the database. Must be called after entity groups loaded, but before mods
            finish loading (PostSetupContent, etc.).
            </summary>
            <param name="groupName"></param>
            <param name="groupDependencies">Other groups the current group references.</param>
            <param name="matcher">Function to use to match items for this group.</param>
        </member>
        <member name="M:HamstarHelpers.Services.EntityGroups.EntityGroups.AddCustomNPCGroup(System.String,System.String[],HamstarHelpers.Services.EntityGroups.NPCGroupMatcher)">
            <summary>
            Defines a custom NPC group to add to the database. Must be called after entity groups loaded, but before mods
            finish loading (PostSetupContent, etc.).
            </summary>
            <param name="groupName"></param>
            <param name="groupDependencies">Other groups the current group references.</param>
            <param name="matcher">Function to use to match NPCs for this group.</param>
        </member>
        <member name="M:HamstarHelpers.Services.EntityGroups.EntityGroups.AddCustomProjectileGroup(System.String,System.String[],HamstarHelpers.Services.EntityGroups.ProjectileGroupMatcher)">
            <summary>
            Defines a custom Projectile group to add to the database. Must be called after entity groups loaded, but
            before mods finish loading (PostSetupContent, etc.).
            </summary>
            <param name="groupName"></param>
            <param name="groupDependencies">Other groups the current group references.</param>
            <param name="matcher">Function to use to match NPCs for this group.</param>
        </member>
        <member name="M:HamstarHelpers.Services.EntityGroups.EntityGroups.TryGetItemGroup(System.String,HamstarHelpers.Classes.DataStructures.IReadOnlySet{System.Int32}@)">
            <summary>
            Retrieves an item group by its name.
            </summary>
            <param name="name"></param>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.EntityGroups.EntityGroups.TryGetNpcGroup(System.String,HamstarHelpers.Classes.DataStructures.IReadOnlySet{System.Int32}@)">
            <summary>
            Retrieves an NPC group by its name.
            </summary>
            <param name="name"></param>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.EntityGroups.EntityGroups.TryGetProjectileGroup(System.String,HamstarHelpers.Classes.DataStructures.IReadOnlySet{System.Int32}@)">
            <summary>
            Retrieves a projectile group by its name.
            </summary>
            <param name="name"></param>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.EntityGroups.EntityGroups.TryGetGroupsPerItem(System.Int32,HamstarHelpers.Classes.DataStructures.IReadOnlySet{System.String}@)">
            <summary>
            Retrieves all groups (names) of a given item (type).
            </summary>
            <param name="itemType"></param>
            <param name="groupNames"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.EntityGroups.EntityGroups.TryGetGroupsPerNPC(System.Int32,HamstarHelpers.Classes.DataStructures.IReadOnlySet{System.String}@)">
            <summary>
            Retrieves all groups (names) of a given NPC (type).
            </summary>
            <param name="npcType"></param>
            <param name="groupNames"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.EntityGroups.EntityGroups.TryGetGroupsPerProjectile(System.Int32,HamstarHelpers.Classes.DataStructures.IReadOnlySet{System.String}@)">
            <summary>
            Retrieves all groups (names) of a given projectile (type).
            </summary>
            <param name="projType"></param>
            <param name="groupNames"></param>
            <returns></returns>
        </member>
        <member name="F:HamstarHelpers.Services.EntityGroups.EntityGroups.LoadedAllValidator">
            <summary>
            Used as the identifier object for binding events (cusom load hooks) to entity group loading completion.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Services.GameData.BossDataEntry">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.GameData.BossDataEntry.Order">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossDataEntry.Name">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.GameData.BossDataEntry.IsHardmode">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.GameData.BossDataEntry.IsPostMechBoss">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.GameData.BossDataEntry.IsPostPlantera">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.GameData.BossDataEntry.IsPostGolem">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.GameData.BossDataEntry.IsPostMoonlord">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Services.GameData.BossDataEntry.GetNpcId(System.Int32@)">
            <summary>
            Gets the NPC id of a given boss.
            </summary>
            <param name="npcId"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Services.GameData.BossData">
            <summary>
            Supplies a table of all available bosses across vanilla Terraria and most major mods.
            
            IMPORTANT: Not finished; untested.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.GameData.BossData.BossOrder">
            <summary>
            Orders bosses by guesstimations of sequence.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.GameData.BossData.BossMap">
            <summary>
            Maps bosses (by name) to their (loosely) expected progression order.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.KingSlime">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.EyeOfCthulhu">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.EaterOfWorlds">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.BrainOfCthulhu">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.QueenBee">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.Skeletron">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.WallOfFlesh">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.TheDestroyer">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.Retinazer">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.Spazmatism">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.SkeletronPrime">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.Plantera">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.Golem">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.DukeFishron">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.Betsy">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.GameData.BossData.MoonLord">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Services.GameData.BossData.AddBoss(System.String,System.String,System.String)">
            <summary>
            Adds a boss definition relative to another boss in progression order.
            </summary>
            <param name="sourceMod"></param>
            <param name="bossName"></param>
            <param name="betterThanBossOfName"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.GameData.BossData.UpdateOrder">
            <summary>
            Refreshes boss progression order.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Services.Hooks.Draw.DrawHooks">
            <summary>
            Supplies custom tModLoader-like, delegate-based hooks for conveniently plugging into existing drawing layers.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.Draw.DrawHooks.AddPostDrawTilesHook(System.Func{System.Boolean})">
            <summary>
            Adds a function to call when ModWorld.PostTileDraw() is called. Main.SpriteBatch is 'Begun'.
            </summary>
            <param name="func">Returns `false` to stop being called.</param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.Draw.DrawHooksInternal.HamstarHelpers#Classes#Loadable#ILoadable#OnModsLoad">
            @ private
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.Draw.DrawHooksInternal.HamstarHelpers#Classes#Loadable#ILoadable#OnModsUnload">
            @ private
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.Draw.DrawHooksInternal.HamstarHelpers#Classes#Loadable#ILoadable#OnPostModsLoad">
            @ private
        </member>
        <member name="T:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedPlayerHooks">
            <summary>
            Supplies custom tModLoader-like, delegate-based hooks for player-relevant functions not currently available in
            tModLoader.
            </summary>
            @private
            <summary>
            Supplies custom tModLoader-like, delegate-based hooks for player-relevant functions not currently available in
            tModLoader.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedPlayerHooks.AddBuffExpireAction(System.String,System.Action{Terraria.Player,System.Int32})">
            <summary>
            Runs when a buff expires.
            </summary>
            <param name="hookName">Identifier of the hook.</param>
            <param name="action">Action to run. Includes the player and buff type id as parameters.</param>
            <returns>`false` if hook is already defined.</returns>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedPlayerHooks.AddArmorEquipAction(System.String,System.Action{Terraria.Player,System.Int32,Terraria.Item})">
            <summary>
            Runs when an armor item is equipped.
            </summary>
            <param name="hookName">Identifier of the hook.</param>
            <param name="action">Action to run. Includes the player, `player.armor` index, and the armor `Item` as
            parameters.</param>
            <returns>`false` if hook is already defined.</returns>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedPlayerHooks.AddArmorUnequipAction(System.String,System.Action{Terraria.Player,System.Int32,System.Int32})">
            <summary>
            Runs when an armor item is unequipped.
            </summary>
            <param name="hookName">Identifier of the hook.</param>
            <param name="action">Action to run. Includes the player, `player.armor` index, and the armor `Item` as
            parameters.</param>
            <returns>`false` if hook is already defined.</returns>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedPlayerHooks.AddNpcKillHook(System.Action{Terraria.Player,Terraria.NPC})">
            <summary>
            Declares an action to run when an NPC is killed by a given player.
            </summary>
            <param name="action">Action to run. Includes the Player (killer) and killed NPC as parameters.</param>
        </member>
        <member name="T:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedTileHooks">
            <summary>
            Supplies custom tModLoader-like, delegate-based hooks for tile-relevant functions not currently available in
            tModLoader.
            </summary>
            <summary>
            Supplies custom tModLoader-like, delegate-based hooks for tile-relevant functions not currently available in
            tModLoader.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedTileHooks.NonGameplayKillTileCondition">
            <summary>
            Supplies a condition to check for when to skip tile killing.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedTileHooks.AddSafeKillTileHook(HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedTileHooks.KillTileDelegate)">
            <summary>
            Allows binding actions to the `GlobalTile.KillTile(...)` hook in such a way as to avoid stack overflow exceptions.
            </summary>
            <param name="hook"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedTileHooks.AddSafeWallKillHook(HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedTileHooks.KillWallDelegate)">
            <summary>
            Allows binding actions to the `GlobalWall.KillWall(...)` hook in such a way as to avoid stack overflow exceptions.
            </summary>
            <param name="hook"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedTileHooks.AddKillMultiTileHook(HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedTileHooks.KillMultiTileDelegate)">
            <summary>
            Allows binding actions to `GlobalTile.KillTile(...)` calls for tiles larger than 1x1, and only for the top left
            tile.
            </summary>
            <param name="hook"></param>
        </member>
        <member name="T:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedTileHooks.KillTileDelegate">
            <summary>
            Represents a GlobalTile.KillTile hook binding.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="fail"></param>
            <param name="effectOnly"></param>
            <param name="noItem"></param>
            <param name="nonGameplay">Indicates this hook is being called for tile kills not directly from player actions (typically custom functions).</param>
        </member>
        <member name="T:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedTileHooks.KillWallDelegate">
            <summary>
            Represents a GlobalWall.KillWall hook binding.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="fail"></param>
            <param name="nonGameplay">Indicates this hook is being called for tile kills not directly from player actions (typically custom functions).</param>
        </member>
        <member name="T:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedTileHooks.KillMultiTileDelegate">
            <summary>
            Represents a GlobalTile.KillTile hook binding specifically for multi-tiles.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="nonGameplay">Indicates this hook is being called for tile kills not directly from player actions (typically custom functions).</param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedTileHooks.HamstarHelpers#Classes#Loadable#ILoadable#OnModsLoad">
            @private
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedTileHooks.HamstarHelpers#Classes#Loadable#ILoadable#OnModsUnload">
            @private
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.ExtendedHooks.ExtendedTileHooks.HamstarHelpers#Classes#Loadable#ILoadable#OnPostModsLoad">
            @private
        </member>
        <member name="T:HamstarHelpers.Services.Hooks.LoadHooks.ICustomLoadHookValidator">
            @private
        </member>
        <member name="T:HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHookValidator`1">
            <summary>
            Exists for use in validating custom load hooks.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHookValidator`1.#ctor(System.Object)">
            <summary></summary>
            <param name="validatorKey">Key to match for validation.</param>
        </member>
        <member name="T:HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHooks">
            <summary>
            Allows defining custom load hooks. Like the preset load hooks, these will activate when conditions are triggered
            for hooks that are later added.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHooks.CountHooks``1(HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHookValidator{``0})">
            <summary>
            Counts the total number of hooks of a given validator.
            </summary>
            <typeparam name="T">Hook's argument type.</typeparam>
            <param name="validator">Hook's argument type.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHooks.AreConditionsMet``1(HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHookValidator{``0})">
            <summary>
            Tests if conditions are met for a given hook type (by its validator).
            </summary>
            <typeparam name="T">Hook's argument type.</typeparam>
            <param name="validator"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHooks.AddHook``1(HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHookValidator{``0},System.Func{``0,System.Boolean})">
            <summary>
            Add a custom hook.
            </summary>
            <typeparam name="T">Hook's argument type.</typeparam>
            <param name="validator">Validator used to identify the hook and validate what can trigger it.</param>
            <param name="func">The hook. Accepts an object containing its arguments (type validated). Returns `true`
            if it's meant to be repeatably called (when the conditions clear up and then later come to pass).</param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHooks.TriggerHook``1(HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHookValidator{``0},System.Object,``0)">
            <summary>
            Triggers all of a given hook. A `validatorKey` must be provided matching the `validator`'s key (loosely
            guards against mis-triggering hooks).
            </summary>
            <typeparam name="T">Hook's argument type.</typeparam>
            <param name="validator">Validator used to identify the hook and validate what can trigger it.</param>
            <param name="validatorKey">A key that must match the `validator`'s own key.</param>
            <param name="args">Arguments passed to each hook. Must match the `validator`'s expected generic type.</param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHooks.TriggerHook(HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHookValidator{System.Object},System.Object)">
            <summary>
            Triggers all of a given hook. A `validatorKey` must be provided matching the `validator`'s key (loosely
            guards against mis-triggering hooks).
            </summary>
            <param name="validator">Validator used to identify the hook and validate what can trigger it.</param>
            <param name="validatorKey">A key that must match the `validator`'s own key.</param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHooks.UntriggerHook``1(HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHookValidator{``0},System.Object)">
            <summary>
            Untriggers all of a given hook, allowing for reuse. A `validatorKey` must be provided matching the
            `validator`'s key (loosely guards against mis-triggering hooks).
            </summary>
            <typeparam name="T">Hook's argument type.</typeparam>
            <param name="validator">Validator used to identify the hook and validate what can trigger it.</param>
            <param name="validatorKey">A key that must match the `validator`'s own key.</param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHooks.ClearHook``1(HamstarHelpers.Services.Hooks.LoadHooks.CustomLoadHookValidator{``0},System.Object)">
            <summary>
            Clears all of a given hook. A `validatorKey` must be provided matching the `validator`'s key (loosely guards
            against mis-triggering hooks).
            </summary>
            <typeparam name="T">Hook's argument type.</typeparam>
            <param name="validator">Validator used to identify the hook and validate what can trigger it.</param>
            <param name="validatorKey">A key that must match the `validator`'s own key.</param>
        </member>
        <member name="T:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks">
            <summary>
            Allows defining load hooks. These are of a set of hooks corresponding to important game code "load" events.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks.AddPostModLoadHook(System.Action)">
            <summary>
            Declares an action to run after mods are loaded (PostSetupContent, PostAddRecipes, AddRecipeGroups).
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks.AddModUnloadHook(System.Action)">
            <summary>
            Declares an action to run as mods are unloading.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks.AddWorldLoadOnceHook(System.Action)">
            <summary>
            Declares an action to run as the current world loads. Action does not run for subsequent world loads.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks.AddPostWorldLoadOnceHook(System.Action)">
            <summary>
            Declares an action to run after the current world loads. Action does not run for subsequent world loads.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks.AddWorldUnloadOnceHook(System.Action)">
            <summary>
            Declares an action to run as the current world unloads. Action does not run for subsequent world unloads.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks.AddPostWorldUnloadOnceHook(System.Action)">
            <summary>
            Declares an action to run after the current world unloads. Action does not run for subsequent world unloads.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks.AddWorldInPlayOnceHook(System.Action)">
            <summary>
            Declares an action to run once the current world is in play. Action does not run for subsequent worlds.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks.AddSafeWorldLoadOnceHook(System.Action)">
            <summary>
            Declares an action to run after the current world is "safely" loaded (waits a few seconds to help avoid confusing
            errors). Action does not run for subsequent worlds.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks.AddWorldLoadEachHook(System.Action)">
            <summary>
            Declares an action to run as the current world loads.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks.AddPostWorldLoadEachHook(System.Action)">
            <summary>
            Declares an action to run after the current world loads.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks.AddWorldUnloadEachHook(System.Action)">
            <summary>
            Declares an action to run as the current world unloads.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks.AddPostWorldUnloadEachHook(System.Action)">
            <summary>
            Declares an action to run after the current world unloads.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks.AddWorldInPlayEachHook(System.Action)">
            <summary>
            Declares an action to run once the current world is in play.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.LoadHooks.LoadHooks.AddSafeWorldLoadEachHook(System.Action)">
            <summary>
            Declares an action to run after the current world is "safely" loaded (waits a few seconds to help avoid confusing
            errors).
            </summary>
            <param name="action"></param>
        </member>
        <member name="T:HamstarHelpers.Services.Hooks.WorldHooks.WorldTimeHooks">
            <summary>
            Supplies custom tModLoader-like, delegate-based hooks for world-relevant functions not currently available in
            tModLoader.
            </summary>
            @private
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.WorldHooks.WorldTimeHooks.AddDayHook(System.String,System.Action)">
            <summary>
            Declares an action to run when day begins.
            </summary>
            <param name="hookName"></param>
            <param name="callback"></param>
            <returns>`false` if the given hook has already been claimed.</returns>
        </member>
        <member name="M:HamstarHelpers.Services.Hooks.WorldHooks.WorldTimeHooks.AddNightHook(System.String,System.Action)">
            <summary>
            Declares an action to run when day begins.
            </summary>
            <param name="hookName"></param>
            <param name="callback"></param>
            <returns>`false` if the given hook has already been claimed.</returns>
        </member>
        <member name="T:HamstarHelpers.Services.Messages.Inbox.InboxMessages">
            <summary>
            This service gives a way for mods to post persistent, non-obtrusive, in-game messages to players that can be
            re-read freely.
            </summary>
            <summary>
            This service gives a way for mods to post persistent, non-obtrusive, in-game messages to players that can be
            re-read freely.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Messages.Inbox.InboxMessages.SetMessage(System.String,System.String,System.Boolean,System.Action{System.Boolean})">
            <summary>
            Creates an inbox message. New unread messages will be visible by an inventory screen icon until opened.
            Past messages can be viewed.
            </summary>
            <param name="which">Identifier of a given message. Overrides messages with the given identifier.</param>
            <param name="msg">Message body. Plain text only, for now.</param>
            <param name="forceUnread">If the message has been read, this will force it to be "unread" again.</param>
            <param name="onRun">Code to activate when a given message is read. Parameter `true` if message is unread.</param>
        </member>
        <member name="M:HamstarHelpers.Services.Messages.Inbox.InboxMessages.CountUnreadMessages">
            <summary>
            Indicates total unread messages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.Messages.Inbox.InboxMessages.DequeueMessage">
            <summary>
            "Reads" latest message. Will trigger message's `onRun` function, if any.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.Messages.Inbox.InboxMessages.GetMessageAt(System.Int32,System.String@)">
            <summary>
            Retrieves a given message by it's order position. Does not "read" the message.
            </summary>
            <param name="pos"></param>
            <param name="msg">The message. Returns `null` if no message found.</param>
            <returns>`true` if unread.</returns>
        </member>
        <member name="M:HamstarHelpers.Services.Messages.Inbox.InboxMessages.ReadMessage(System.String,System.String@)">
            <summary>
            Reads a given message.
            </summary>
            <param name="which">Identifier of message to read.</param>
            <param name="msg">The message. Returns `null` if no message found.</param>
            <returns>`true` if unread.</returns>
        </member>
        <member name="T:HamstarHelpers.Services.Messages.Player.PlayerLabelText">
            <summary>
            Defines the parameters of a player message.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Services.Messages.Player.PlayerLabelText.Text">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.Messages.Player.PlayerLabelText.Color">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.Messages.Player.PlayerLabelText.StartDuration">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.Messages.Player.PlayerLabelText.Duration">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.Messages.Player.PlayerLabelText.Evaporates">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.Messages.Player.PlayerLabelText.Following">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Services.Messages.Player.PlayerMessages">
            <summary>
            Supplies a way to 'popup' informational text upon the player character in-game.
            </summary>
            <summary>
            Supplies a way to 'popup' informational text upon the player character in-game.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Messages.Player.PlayerMessages.AddPlayerLabel(Terraria.Player,System.String,Microsoft.Xna.Framework.Color,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Adds a player label popup.
            </summary>
            <param name="player"></param>
            <param name="text"></param>
            <param name="color"></param>
            <param name="duration"></param>
            <param name="evaporates"></param>
            <param name="following">Tracks with the player.</param>
        </member>
        <member name="T:HamstarHelpers.Services.Messages.Simple.SimpleMessage">
            <summary>
            A simple alternative to display centered text messages on-screen.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Services.Messages.Simple.SimpleMessage.MessageDuration">
            <summary>
            Tick duration of message.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Services.Messages.Simple.SimpleMessage.Message">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.Messages.Simple.SimpleMessage.SubMessage">
            <summary>
            Smaller message under the bigger message.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Messages.Simple.SimpleMessage.PostMessage(System.String,System.String,System.Int32)">
            <summary></summary>
            <param name="msg"></param>
            <param name="submsg"></param>
            <param name="duration">Tick duration.</param>
        </member>
        <member name="T:HamstarHelpers.Services.ModCompatibilities.ExtensibleInventoryCompat.ExtensibleInventoryCompatibilities">
            <summary>
            Defines functions for applying any needed inter-mod compatibility adjustments for the Extensible Inventory mod (if active).
            </summary>
            <summary>
            Defines functions for applying any needed inter-mod compatibility adjustments for the Extensible Inventory mod (if active).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.ModCompatibilities.ExtensibleInventoryCompat.ExtensibleInventoryCompatibilities.ApplyCompats">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Services.ModHelpers.ModLockService">
            <summary>
            Provides a way to lock the given current loaded mods with a given world. May also be accessed in-game via. the
            Mod Helpers control panel.
            </summary>
            <summary>
            Provides a way to lock the given current loaded mods with a given world. May also be accessed in-game via. the
            Mod Helpers control panel.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.ModHelpers.ModLockService.IsWorldLocked">
            <summary>
            Indicates if the current world is "locked".
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.ModHelpers.ModLockService.IsModMismatchFound">
            <summary>
            Indicates if the current mod loadout does not match the current world's "locked" set (or exceeds it, if
            the `WorldModLockMininmumOnly` setting is `true`).
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.ModHelpers.ModLockService.LockWorld">
            <summary>
            Locks the current world.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.ModHelpers.ModLockService.UnlockWorld">
            <summary>
            Unlocks the current world.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Services.ModTagDefinitions.ModTagDefinition">
            <summary>
            Describes a basic attribute of a given mod. Meant to be combined in sets to create a comprehensive
            categorical description of a mod.
            </summary>
            <summary>
            Describes a basic attribute of a given mod. Meant to be combined in sets to create a comprehensive
            categorical description of a mod.
            </summary>
        </member>
        <member name="F:HamstarHelpers.Services.ModTagDefinitions.ModTagDefinition.CategoryDescriptions">
            <summary>Descriptions of each tag category.</summary>
        </member>
        <member name="F:HamstarHelpers.Services.ModTagDefinitions.ModTagDefinition.TagMap">
            <summary>A map of tag definitions to their tags.</summary>
        </member>
        <member name="F:HamstarHelpers.Services.ModTagDefinitions.ModTagDefinition.Tags">
            <summary>An ordered list of the tag definitions.</summary>
        </member>
        <member name="F:HamstarHelpers.Services.ModTagDefinitions.ModTagDefinition.TagFlavorColors">
            <summary>
            Map of mod tag "flavors" to corresponding hues.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.ModTagDefinitions.ModTagDefinition.Tag">
            <summary>
            Descriptive tag.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.ModTagDefinitions.ModTagDefinition.Category">
            <summary>
            Category for the tag.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.ModTagDefinitions.ModTagDefinition.Description">
            <summary>
            Human-readable description of the given tag.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.ModTagDefinitions.ModTagDefinition.Flavor">
            <summary>
            Describes the "flavor" or practical signicance of the given tag.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.ModTagDefinitions.ModTagDefinition.ForcesTags">
            <summary>
            Tags that are forced to apply in tandem with the current.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.ModTagDefinitions.ModTagDefinition.ExcludesOnAdd">
            <summary>
            Tags that are mutually exclusive with the current.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.ModTagDefinitions.ModTagDefinition.#ctor(System.String,System.String,System.String,HamstarHelpers.Services.ModTagDefinitions.TagFlavor,System.Collections.Generic.ISet{System.String},System.Collections.Generic.ISet{System.String})">
            <summary></summary>
            <param name="tag"></param>
            <param name="category"></param>
            <param name="description"></param>
            <param name="flavor"></param>
            <param name="forcesTag"></param>
            <param name="excludesOnAdd"></param>
        </member>
        <member name="M:HamstarHelpers.Services.ModTagDefinitions.ModTagDefinition.GetFlavorColor">
            <summary>
            Gets the "flavor" color of the current tag.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Services.ModTagDefinitions.TagFlavor">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.ModTagDefinitions.TagFlavor.Mundane">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.ModTagDefinitions.TagFlavor.Specification">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.ModTagDefinitions.TagFlavor.Emphasis">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.ModTagDefinitions.TagFlavor.Important">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.ModTagDefinitions.TagFlavor.TechnicallyImportant">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.ModTagDefinitions.TagFlavor.Alert">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.ModTagDefinitions.TagFlavor.Warning">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.ModTagDefinitions.TagFlavor.Deficient">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.ModTagDefinitions.TagFlavor.Broken">
            <summary></summary>
        </member>
        <member name="F:HamstarHelpers.Services.ModTagDefinitions.TagFlavor.IllFavored">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Services.NPCChat.NPCChat">
            <summary>
            Provides a service for adding or removing town NPC chats (based on weight values).
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.NPCChat.NPCChat.GetChat(Terraria.NPC,System.String@,System.Single)">
            <summary>
            Gets a chat message for the given NPC. Pulls from its default pool and any added chats, also excludes any
            default chats matching any removal patterns.
            </summary>
            <param name="npc"></param>
            <param name="chat">Unless removal patterns specify otherwise, may either be untouched, or else a new chat from
            the added pool.</param>
            <param name="defaultChatsTotalWeight"></param>
            <returns>Returns `true` if a new chat message was picked, `false` if the no new chat was picked, or `null` if
            another attempt (`npc.GetChat()`) is needed to get a new chat message.</returns>
        </member>
        <member name="M:HamstarHelpers.Services.NPCChat.NPCChat.GetNewChat(System.Int32)">
            <summary>
            Gets a random chat only from the given NPC's added chats pool.
            </summary>
            <param name="npcType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.NPCChat.NPCChat.IsChatRemoved(System.Int32,System.String)">
            <summary>
            Indicates if a given chat messages is matched for removal by any of the removal patterns.
            </summary>
            <param name="npcType"></param>
            <param name="chat"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.NPCChat.NPCChat.GetAddedChats(System.Int32)">
            <summary>
            Gets all added chats (and their weights) for a given NPC.
            </summary>
            <param name="npcType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.NPCChat.NPCChat.RemoveAddedChat(System.Int32,System.String)">
            <summary>
            Removes a specific added chat.
            </summary>
            <param name="npcType"></param>
            <param name="chat"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.NPCChat.NPCChat.AddChatForNPC(System.Int32,System.String,System.Single)">
            <summary>
            Adds a new chat message for a given NPC.
            </summary>
            <param name="npcType"></param>
            <param name="chat"></param>
            <param name="weight">How much favor is given to this chat to be picked from the NPC's pool. Note: All of an
            NPC's default chats have a total weight of `1f`.</param>
        </member>
        <member name="M:HamstarHelpers.Services.NPCChat.NPCChat.AddChatRemoveFlatPatternForNPC(System.Int32,System.String)">
            <summary>
            Adds a pattern to match existing (non-pool added) chats.
            </summary>
            <param name="npcType"></param>
            <param name="chatFlatPattern"></param>
        </member>
        <member name="M:HamstarHelpers.Services.NPCChat.NPCChat.GetPriorityChat(System.Int32)">
            <summary>
            Retrieves the current priority chat message getter.
            </summary>
            <param name="npcType"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.NPCChat.NPCChat.SetPriorityChat(System.Int32,System.Func{System.String,System.String})">
            <summary>
            Sets the current priority chat message getter for a given NPC.
            </summary>
            <param name="npcType"></param>
            <param name="chatGet">Accepts an optional parameter of the current chat, and returns the priority chat.
            Return `null` if no priority chat exists.</param>
        </member>
        <member name="T:HamstarHelpers.Services.OverlaySounds.OverlaySound">
            <summary>
            Provides a way to create ambient sound effects that overlay existing game sounds and music.
            </summary>
            <summary>
            Provides a way to create ambient sound effects that overlay existing game sounds and music.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.OverlaySounds.OverlaySound.Create(Terraria.ModLoader.Mod,System.String,System.Int32,System.Int32,System.Func{System.ValueTuple{System.Single,System.Boolean}})">
            <summary></summary>
            <param name="sourceMod"></param>
            <param name="soundPath"></param>
            <param name="fadeTicks"></param>
            <param name="playDurationTicks">If -1, sound repeats until `customCondition` says otherwise.</param>
            <param name="customCondition">Returns a volume scale float and a boolean to indicate if the sound has ended.</param>
            <returns></returns>
        </member>
        <member name="P:HamstarHelpers.Services.OverlaySounds.OverlaySound.IsFadingOut">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.OverlaySounds.OverlaySound.IsEndlessLoop">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Services.OverlaySounds.OverlaySound.Play">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Services.OverlaySounds.OverlaySound.Stop">
            <summary>
            Begins sound loop fade out.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.OverlaySounds.OverlaySound.StopImmediately">
            <summary>Stops sound loop without fadeout.</summary>
        </member>
        <member name="T:HamstarHelpers.Services.RecipeHack.RecipeHack">
            <summary>
            Provides a method for forcing new recipes into the player's recipe selection list. May be unstable. Has known mod incompatibilities.
            </summary>
            <summary>
            Provides a way to lock the given current loaded mods with a given world. May also be accessed in-game via. the
            Mod Helpers control panel.
            </summary>
            <summary>
            Provides a way to lock the given current loaded mods with a given world. May also be accessed in-game via. the
            Mod Helpers control panel.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.RecipeHack.RecipeHack.ForceRecipeRefresh">
            @private
        </member>
        <member name="M:HamstarHelpers.Services.RecipeHack.RecipeHack.RegisterIngredientSource(System.String,System.Func{Terraria.Player,System.Collections.Generic.IEnumerable{Terraria.Item}})">
            @private
        </member>
        <member name="M:HamstarHelpers.Services.RecipeHack.RecipeHack.UnregisterIngredientSource(System.String)">
            @private
        </member>
        <member name="M:HamstarHelpers.Services.RecipeHack.RecipeHack.GetOutsourcedItems(Terraria.Player)">
            @private
        </member>
        <member name="M:HamstarHelpers.Services.RecipeHack.RecipeHack.GetAvailableRecipesOfIngredients(Terraria.Player,System.Collections.Generic.IEnumerable{Terraria.Item})">
            @private
        </member>
        <member name="T:HamstarHelpers.Services.Server.Server">
            <summary>
            Supplies assorted server informations and tools.
            </summary>
        </member>
        <member name="P:HamstarHelpers.Services.Server.Server.AveragePing">
            <summary></summary>
        </member>
        <member name="T:HamstarHelpers.Services.Timers.Timers">
            <summary>
            Provides a way to delay the onset of a given action by a set amount of ticks. As a secondary function,
            MainOnTickGet() provides a way to use Main.OnTick for running background tasks at 60FPS.
            </summary>
            <summary>
            Provides a way to delay the onset of a given action by a set amount of ticks. As a secondary function,
            MainOnTickGet() provides a way to use Main.OnTick for running background tasks at 60FPS.
            </summary>
            <summary>
            Provides a way to delay the onset of a given action by a set amount of ticks. As a secondary function,
            MainOnTickGet() provides a way to use Main.OnTick for running background tasks at 60FPS.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Timers.Timers.MainOnTickGet">
            <summary>
            Returns a delegate that returns true when at least 1/60th second (1 60FPS 'tick') has fully elapsed since
            the last time the delegate returned true.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.Timers.Timers.RunNow(System.Action)">
            <summary>
            Convenience method to run a given action 'now' (AKA a 0 delay timer).
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:HamstarHelpers.Services.Timers.Timers.SetTimer(System.String,System.Int32,System.Boolean,System.Func{System.Boolean})">
            <summary>
            Creates a 'timer' that waits the given amount of ticks before running the given action. Not multi-threaded,
            but does not obstruct current thread.
            </summary>
            <param name="name">Identifier of timer. Re-assigning with this identifier replaces any existing timer.</param>
            <param name="tickDuration"></param>
            <param name="runsWhilePaused"></param>
            <param name="action">Action to run. Returns `true` to make the action repeat after another period of the
            given tick duration.</param>
        </member>
        <member name="M:HamstarHelpers.Services.Timers.Timers.SetTimer(System.String,System.Int32,System.Boolean,System.Func{System.Int32})">
            <summary>
            Creates a 'timer' that waits the given amount of ticks before running the given action. Not multi-threaded,
            but does not obstruct current thread.
            </summary>
            <param name="name">Identifier of timer. Re-assigning with this identifier replaces any existing timer.</param>
            <param name="tickDuration"></param>
            <param name="runsWhilePaused"></param>
            <param name="action">Action to run. Returns `true` to make the action repeat after another period of the
            given tick duration.</param>
        </member>
        <member name="M:HamstarHelpers.Services.Timers.Timers.GetTimerTickDuration(System.String)">
            <summary>
            Indicates time remaining for the given 'timer'.
            </summary>
            <param name="name">Identifier of timer.</param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.Timers.Timers.UnsetTimer(System.String)">
            <summary>
            Ends a given 'timer'.
            </summary>
            <param name="name">Identifier of timer.</param>
        </member>
        <member name="M:HamstarHelpers.Services.Timers.Timers.ResetAll">
            <summary>
            Ends all 'timers'.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.Timers.Timers.SetTimer(System.String,System.Int32,System.Func{System.Boolean})">
            @private
        </member>
        <member name="T:HamstarHelpers.Services.TML.BuildPropertiesViewer">
            <summary>
            Supplies a way to peek into other mods' build properties (build.txt) data.
            </summary>
            <summary>
            Supplies a way to peek into other mods' build properties (build.txt) data.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.TML.BuildPropertiesViewer.GetBuildPropertiesForModFile(Terraria.ModLoader.Core.TmodFile)">
            <summary>
            Produces a 'viewer' object for a TmodFile mod file's build.txt data.
            </summary>
            <param name="modfile"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.TML.BuildPropertiesViewer.GetBuildPropertiesForActiveMod(System.String)">
            <summary>
            Produces a 'viewer' object for an active mod file's build.txt data.
            </summary>
            <param name="modName"></param>
            <returns></returns>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.DllReferences">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.SortAfter">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.SortBefore">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.BuildIgnores">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.Author">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.Version">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.DisplayName">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.NoCompile">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.HideCode">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.HideResources">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.IncludeSource">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.IncludePDB">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.EditAndContinue">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.Beta">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.LanguageVersion">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.Homepage">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.Description">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.Side">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.ModReferences">
            <summary></summary>
        </member>
        <member name="P:HamstarHelpers.Services.TML.BuildPropertiesViewer.WeakReferences">
            <summary></summary>
        </member>
        <member name="M:HamstarHelpers.Services.TML.BuildPropertiesViewer.GetField(System.String)">
            <summary>
            Gets the value of a given build.txt field.
            </summary>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Services.UI.ControlPanel.ControlPanelTabs">
            <summary>
            Supplies an interface to add to and manage control panel tabs. The control panel is accessible in the top left
            corner (by default) when the player's inventory is displayed.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.UI.ControlPanel.ControlPanelTabs.AddTab(System.String,HamstarHelpers.Internals.ControlPanel.UIControlPanelTab)">
            <summary>
            Adds a tab to the control panel UI.
            </summary>
            <param name="title"></param>
            <param name="tab"></param>
        </member>
        <member name="M:HamstarHelpers.Services.UI.ControlPanel.ControlPanelTabs.GetCurrentTab">
            <summary>
            Gets the currently active tab (by name).
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.UI.ControlPanel.ControlPanelTabs.OpenTab(System.String)">
            <summary>
            Opens a given tab (by name).
            </summary>
            <param name="tabName"></param>
        </member>
        <member name="M:HamstarHelpers.Services.UI.ControlPanel.ControlPanelTabs.IsDialogOpen">
            <summary>
            Indicates if the control panel dialog is open.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.UI.ControlPanel.ControlPanelTabs.CloseDialog">
            <summary>
            Closes the control panel dialog.
            </summary>
        </member>
        <member name="T:HamstarHelpers.Services.UI.Menus.MenuContextService">
            <summary>
            Provides a way to interface with the main menu and its UI by way of "contexts".
            </summary>
            <summary>
            Provides a way to interface with the main menu and its UI by way of "contexts".
            </summary>
        </member>
        <member name="M:HamstarHelpers.Services.UI.Menus.MenuContextService.ContainsMenuContexts(HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition)">
            <summary>
            Indicates if a menu "context" (menu page) has custom content.
            </summary>
            <param name="menuDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.UI.Menus.MenuContextService.GetMenuContext(HamstarHelpers.Helpers.TModLoader.Menus.MenuUIDefinition,System.String)">
            <summary>
            Gets a specific piece of added content for a menu "context" (menu page) by name.
            </summary>
            <param name="menuDefinition"></param>
            <param name="contextName"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.UI.Menus.MenuContextService.AddMenuContext(HamstarHelpers.Classes.UI.Menus.MenuContext)">
            <summary>
            Adds a piece of menu content to a menu "context" (menu page) by name.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:HamstarHelpers.Services.UI.Menus.MenuContextService.GetMenuContainerOuter(Terraria.UI.UIState)">
            <summary>
            Gets the "outer" container element (the element as positioned on the screen) of a menu's UI class.
            </summary>
            <param name="ui"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.UI.Menus.MenuContextService.GetMenuContainerInner(Terraria.UI.UIElement)">
            <summary>
            Gets the "inner" container element (contains the UI's components) of a menu's UI class's "outer" container
            element.
            </summary>
            <param name="uiOuterBox"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.UI.Menus.MenuContextService.GetMenuContainerInsertPoint(Terraria.UI.UIElement)">
            <summary>
            Gets the recommended element to add content to an "inner" container element of a given menu UI.
            </summary>
            <param name="uiInnerContainer"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.UI.Menus.MenuContextService.GetMenuContainerInsertPoint(Terraria.UI.UIState)">
            <summary>
            Gets the recommended element to add content to (within an "inner" container element) a given menu UI.
            </summary>
            <param name="ui"></param>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.UI.Menus.MenuContextService.GetCurrentMenuUI">
            <summary>
            Gets the active main menu UI object (if any).
            </summary>
            <returns></returns>
        </member>
        <member name="M:HamstarHelpers.Services.UI.Menus.MenuContextService.GetPreviousMenuUI">
            <summary>
            Gets the previous active main menu UI object (if any).
            </summary>
            <returns></returns>
        </member>
        <member name="T:HamstarHelpers.Tiles.CoalTile">
            <summary>
            Supplies a tile type for coal items. Helps generalize their use as an inter-mod standardized item.
            </summary>
        </member>
        <member name="M:HamstarHelpers.Tiles.CoalTile.SetDefaults">
            @private
        </member>
        <member name="M:HamstarHelpers.Tiles.CoalTile.NumDust(System.Int32,System.Int32,System.Boolean,System.Int32@)">
            @private
        </member>
    </members>
</doc>
